1
00:00:00,000 --> 00:00:04,000
(我用了很多的手機,所以我都沒有用到)

2
00:00:04,000 --> 00:00:08,000
(我用了很多的手機,所以我都沒有用到)

3
00:00:08,000 --> 00:00:12,000
(我用了很多的手機,所以我都沒有用到)

4
00:00:12,000 --> 00:00:16,000
(我用了很多的手機,所以我都沒有用到)

5
00:00:16,000 --> 00:00:20,000
(我用了很多的手機,所以我都沒有用到)

6
00:00:20,000 --> 00:00:24,000
(我用了很多的手機,所以我都沒有用到)

7
00:00:24,000 --> 00:00:28,000
(我用了很多的手機,所以我都沒有用到)

8
00:00:28,000 --> 00:00:32,000
(我用了很多的手機,所以我都沒有用到)

9
00:00:32,000 --> 00:00:36,000
(我用了很多的手機,所以我都沒有用到)

10
00:00:36,000 --> 00:00:40,000
(我用了很多的手機,所以我都沒有用到)

11
00:00:40,000 --> 00:00:44,000
(我用了很多的手機,所以我都沒有用到)

12
00:00:44,000 --> 00:00:48,000
(我用了很多的手機,所以我都沒有用到)

13
00:00:48,000 --> 00:00:52,000
(我用了很多的手機,所以我都沒有用到)

14
00:00:52,000 --> 00:00:56,000
(我用了很多的手機,所以我都沒有用到)

15
00:00:56,000 --> 00:01:00,000
(我用了很多的手機,所以我都沒有用到)

16
00:01:00,000 --> 00:01:04,000
(我用了很多的手機,所以我都沒有用到)

17
00:01:04,000 --> 00:01:08,000
(我用了很多的手機,所以我都沒有用到)

18
00:01:08,000 --> 00:01:12,000
(我用了很多的手機,所以我都沒有用到)

19
00:01:12,000 --> 00:01:16,000
(我用了很多的手機,所以我都沒有用到)

20
00:01:16,000 --> 00:01:20,000
(我用了很多的手機,所以我都沒有用到)

21
00:01:20,000 --> 00:01:24,000
(我用了很多的手機,所以我都沒有用到)

22
00:01:24,000 --> 00:01:28,000
(我用了很多的手機,所以我都沒有用到)

23
00:01:28,000 --> 00:01:32,000
(我用了很多的手機,所以我都沒有用到)

24
00:01:32,000 --> 00:01:36,000
(我用了很多的手機,所以我都沒有用到)

25
00:01:36,000 --> 00:01:40,000
(我用了很多的手機,所以我都沒有用到)

26
00:01:40,000 --> 00:01:44,000
(我用了很多的手機,所以我都沒有用到)

27
00:01:44,000 --> 00:01:48,000
(我用了很多的手機,所以我都沒有用到)

28
00:01:48,000 --> 00:01:52,000
(我用了很多的手機,所以我都沒有用到)

29
00:01:52,000 --> 00:01:58,000
現在我們開始基於圖像的三位模型重建這門課

30
00:01:58,000 --> 00:02:02,000
第一節課我們主要講一下課前的預習

31
00:02:02,000 --> 00:02:06,000
然後沒有太正式的

32
00:02:06,000 --> 00:02:10,000
沒有太正式的

33
00:02:10,000 --> 00:02:12,000
等一下

34
00:02:12,000 --> 00:02:16,000
這節課主要是介紹一下

35
00:02:16,000 --> 00:02:20,000
課前預習,介紹一下這門課所講的內容

36
00:02:20,000 --> 00:02:22,000
和配套的代碼

37
00:02:22,000 --> 00:02:24,000
沒有涉及到太多的細節

38
00:02:24,000 --> 00:02:28,000
所以這節課應該是比較輕鬆的

39
00:02:28,000 --> 00:02:34,000
我先講一下這節課我們要做什麼

40
00:02:34,000 --> 00:02:38,000
基於圖像的三位模型重建

41
00:02:38,000 --> 00:02:42,000
其實就是一個基於多視角圖像的

42
00:02:42,000 --> 00:02:46,000
應該說是基於多視角圖像的三位模型重建

43
00:02:46,000 --> 00:02:48,000
它是一個比較系統的框架

44
00:02:48,000 --> 00:02:52,000
而且共偏向於工程問題

45
00:02:52,000 --> 00:02:56,000
那麼三位模型的重建流程

46
00:02:56,000 --> 00:03:00,000
一般包含著三位點雲的獲取

47
00:03:00,000 --> 00:03:04,000
這些三位點雲就是空間中的一些散點

48
00:03:04,000 --> 00:03:06,000
它沒有結構

49
00:03:06,000 --> 00:03:08,000
當然它會有一些屬性

50
00:03:08,000 --> 00:03:10,000
比如說像顏色或者和法下量

51
00:03:10,000 --> 00:03:14,000
空間坐標加顏色加法下量

52
00:03:14,000 --> 00:03:16,000
這就是我們常見的三位點雲的形態

53
00:03:16,000 --> 00:03:18,000
當然得到三位點雲之後

54
00:03:18,000 --> 00:03:24,000
我們需要通過一些圖形學的方法

55
00:03:24,000 --> 00:03:26,000
去恢復它的幾何結構

56
00:03:26,000 --> 00:03:28,000
也就是拓樸結構

57
00:03:28,000 --> 00:03:30,000
因為散亂的三位點的話

58
00:03:30,000 --> 00:03:34,000
數據非常的容易

59
00:03:34,000 --> 00:03:40,000
對數據的存儲是一個非常大的挑戰

60
00:03:40,000 --> 00:03:44,000
比如說一個簡單的牆面

61
00:03:44,000 --> 00:03:50,000
就這樣一個很小的場景

62
00:03:50,000 --> 00:03:52,000
它可能有重建上萬個點雲

63
00:03:52,000 --> 00:03:56,000
但是實際上它的底層的結構

64
00:03:56,000 --> 00:04:00,000
只需要用幾個或者幾十個面片

65
00:04:00,000 --> 00:04:02,000
就可以表達出來

66
00:04:02,000 --> 00:04:04,000
所以將點雲轉化成網格

67
00:04:04,000 --> 00:04:08,000
這是重建裡面的一個重要的核心模塊

68
00:04:08,000 --> 00:04:10,000
它的其中的一個重要的作用

69
00:04:10,000 --> 00:04:12,000
就是減少數據的存儲量

70
00:04:12,000 --> 00:04:16,000
另外一個從渲染的角度來講的話

71
00:04:16,000 --> 00:04:18,000
點雲是沒有

72
00:04:18,000 --> 00:04:22,000
它的渲染的質量是非常非常差的

73
00:04:22,000 --> 00:04:26,000
如果離得比較遠的話

74
00:04:26,000 --> 00:04:28,000
如果相機離得比較遠的話

75
00:04:28,000 --> 00:04:30,000
還能夠大致的看出它是一個建築

76
00:04:30,000 --> 00:04:32,000
但如果我們把相機離得很近

77
00:04:32,000 --> 00:04:34,000
你就會看到

78
00:04:34,000 --> 00:04:38,000
屏幕裡面渲染的都是些很散亂的點

79
00:04:38,000 --> 00:04:40,000
是因為它是沒有結構的

80
00:04:40,000 --> 00:04:46,000
所以從提升渲染逼真度的角度來講的話

81
00:04:46,000 --> 00:04:50,000
我們也必須把點雲先轉化成網格

82
00:04:50,000 --> 00:04:56,000
從點雲轉化成網格之後

83
00:04:56,000 --> 00:05:00,000
這個場景就有了這個TOP結構

84
00:05:00,000 --> 00:05:04,000
然後我們如果進一步的想提升它的渲染效果的話

85
00:05:04,000 --> 00:05:08,000
可以給這個網格貼上一些紋理

86
00:05:08,000 --> 00:05:12,000
貼紋理的方法有很多種

87
00:05:12,000 --> 00:05:14,000
像我們常用的一些軟件

88
00:05:14,000 --> 00:05:18,000
AutoDesk系列的一些軟件

89
00:05:18,000 --> 00:05:20,000
像Blender、Maya這些軟件

90
00:05:20,000 --> 00:05:24,000
都可以提供一些交互式的貼紋理

91
00:05:24,000 --> 00:05:26,000
但是我們多視角的重建

92
00:05:26,000 --> 00:05:30,000
是可以知道相機的參數的

93
00:05:30,000 --> 00:05:34,000
因此就是可以通過自動的方法去創建紋理

94
00:05:34,000 --> 00:05:38,000
並且對紋理進行一些圖像處理方面的一些編輯

95
00:05:38,000 --> 00:05:42,000
然後來提升渲染的逼真重度

96
00:05:42,000 --> 00:05:52,000
常見的點雲的獲取方式

97
00:05:52,000 --> 00:05:58,000
有激光雷達、Connect掃描

98
00:05:58,000 --> 00:06:00,000
還有單目多視角

99
00:06:00,000 --> 00:06:02,000
以及雙目立體視覺

100
00:06:02,000 --> 00:06:12,000
像激光點雲它可以非常快速地獲取比較準確的點雲

101
00:06:12,000 --> 00:06:16,000
而且它可以使用不同規模的場景

102
00:06:16,000 --> 00:06:22,000
比如說採用車載的雷達

103
00:06:22,000 --> 00:06:26,000
或者是採用機載的

104
00:06:26,000 --> 00:06:30,000
就是放在無人機上的這種雷達

105
00:06:30,000 --> 00:06:36,000
那我就可以對這些大規模的場景進行點雲的掃描

106
00:06:36,000 --> 00:06:40,000
包括現在無人駕駛

107
00:06:40,000 --> 00:06:46,000
也是採用這種激光雷達的方式去獲取周圍環境的一些點雲

108
00:06:46,000 --> 00:06:48,000
這種方法效率很高

109
00:06:48,000 --> 00:06:50,000
得到的點雲也比較準確

110
00:06:50,000 --> 00:06:54,000
但是唯一的缺陷就是成本特別高

111
00:06:54,000 --> 00:06:58,000
還有一種就是Connect掃描

112
00:06:58,000 --> 00:07:04,000
Connect是微軟開發的一款設備

113
00:07:04,000 --> 00:07:12,000
它是通過Time Flies這種手勢

114
00:07:12,000 --> 00:07:20,000
TF的這種方式去獲取周圍環境的點雲數據

115
00:07:20,000 --> 00:07:24,000
而且它可以同時得到圖像

116
00:07:24,000 --> 00:07:28,000
得到一幅彩色圖和深度圖

117
00:07:28,000 --> 00:07:32,000
彩色圖和深度圖其實就是一個一幀的點雲

118
00:07:32,000 --> 00:07:36,000
Connect它獲取的點雲的速度也是非常快

119
00:07:36,000 --> 00:07:40,000
但是精度不是特別高

120
00:07:40,000 --> 00:07:44,000
而且它的有限範圍非常的有限

121
00:07:44,000 --> 00:07:48,000
一般都是從幾十厘米到一兩米之間

122
00:07:48,000 --> 00:07:52,000
所以對一些室內的場景

123
00:07:52,000 --> 00:07:54,000
對一些精度要求不是很高的場景

124
00:07:54,000 --> 00:07:56,000
Connect還是比較合適的

125
00:07:56,000 --> 00:07:58,000
Connect的價格也不是很貴

126
00:07:58,000 --> 00:08:02,000
二代的話也就一兩千塊錢

127
00:08:02,000 --> 00:08:04,000
現在的話應該會更便宜一些

128
00:08:04,000 --> 00:08:08,000
我說的是幾年前的一些價格

129
00:08:08,000 --> 00:08:12,000
Connect裡面有一個特別好的算法框架

130
00:08:12,000 --> 00:08:16,000
之前就是一個實時建模的一個算法框架

131
00:08:16,000 --> 00:08:18,000
叫Confusion

132
00:08:18,000 --> 00:08:22,000
它在GPU上可以達到實時的建模效果

133
00:08:22,000 --> 00:08:26,000
用Connect對周圍環境進行一個掃描

134
00:08:26,000 --> 00:08:28,000
實時的可以得到環境的mesh

135
00:08:28,000 --> 00:08:32,000
就是後面改進版的Kfusion

136
00:08:32,000 --> 00:08:38,000
直接可以得到彩色的mesh

137
00:08:38,000 --> 00:08:42,000
其實它的整個框架也是和

138
00:08:42,000 --> 00:08:47,000
Slam+Slam+建模的框架其實是類似的

139
00:08:47,000 --> 00:08:50,000
因為它也用到一些跟蹤的思想

140
00:08:50,000 --> 00:08:53,000
需要實時的估計相機的姿態

141
00:08:53,000 --> 00:08:55,000
然後它後面的Mapping部分

142
00:08:55,000 --> 00:08:57,000
用的不是點雲

143
00:08:57,000 --> 00:08:59,000
而是用到三維建模

144
00:08:59,000 --> 00:09:03,000
就是符號距離場的方式進行三維的建模

145
00:09:03,000 --> 00:09:07,000
這個框架其實還是比較經典的

146
00:09:07,000 --> 00:09:09,000
因為它基本上涵蓋了

147
00:09:09,000 --> 00:09:11,000
目前三維重建

148
00:09:11,000 --> 00:09:15,000
還有Slam這兩個方向的

149
00:09:15,000 --> 00:09:17,000
基本的知識

150
00:09:17,000 --> 00:09:21,000
可以說核心知識都在這個框架裡面

151
00:09:21,000 --> 00:09:25,000
然後第三種方法就是一個單目多視角

152
00:09:25,000 --> 00:09:29,000
這也是目前比較火的一個方向

153
00:09:29,000 --> 00:09:31,000
從工業界裡也是必要

154
00:09:31,000 --> 00:09:35,000
工業界裡也一直在利用這些

155
00:09:35,000 --> 00:09:37,000
方面的技術

156
00:09:37,000 --> 00:09:43,000
單目多視角就是通過多視角的視頻

157
00:09:43,000 --> 00:09:47,000
或者是多視角的無序的圖像進行

158
00:09:47,000 --> 00:09:51,000
對這個場景進行一個建模

159
00:09:51,000 --> 00:09:57,000
我們在這節課程裡面講的都是無序的圖像

160
00:09:57,000 --> 00:09:59,000
無序的圖像的話

161
00:09:59,000 --> 00:10:02,000
就是說我得到的這些圖像

162
00:10:02,000 --> 00:10:06,000
是不知道事先不知道它的地點

163
00:10:06,000 --> 00:10:08,000
也不知道它的拍攝的時間

164
00:10:08,000 --> 00:10:13,000
所以這個和Slam或跟蹤的話

165
00:10:13,000 --> 00:10:16,000
就是一個比較重要的區別

166
00:10:16,000 --> 00:10:20,000
大家這個地方可以說仔細的回想一下

167
00:10:20,000 --> 00:10:23,000
因為如果你出去找工作面試的話

168
00:10:23,000 --> 00:10:28,000
這個應該是比較大的概率會被問到的一個問題

169
00:10:28,000 --> 00:10:32,000
就是這種多視角的重建

170
00:10:32,000 --> 00:10:34,000
三維建模和Slam的一個區別

171
00:10:34,000 --> 00:10:36,000
多視角的話

172
00:10:36,000 --> 00:10:38,000
它圖像是無序的

173
00:10:38,000 --> 00:10:40,000
無序的話在匹配的時候

174
00:10:40,000 --> 00:10:43,000
要進行一個非常暴力的匹配

175
00:10:43,000 --> 00:10:46,000
兩兩圖像都要進行匹配

176
00:10:46,000 --> 00:10:48,000
但是這個視頻序列

177
00:10:48,000 --> 00:10:52,000
或者說是Slam裡面應用到的

178
00:10:52,000 --> 00:10:54,000
它是一個有序的圖像序列

179
00:10:54,000 --> 00:10:57,000
所以它在匹配的時候就不需要暴力匹配

180
00:10:57,000 --> 00:10:59,000
而是可以通過前後針

181
00:10:59,000 --> 00:11:02,000
或者通過一個局部窗口的方式

182
00:11:02,000 --> 00:11:04,000
去進行一個匹配

183
00:11:04,000 --> 00:11:07,000
那它只有在匯換檢測的時候

184
00:11:07,000 --> 00:11:13,000
會用到一些匹配的範圍會比較廣一些

185
00:11:13,000 --> 00:11:17,000
單目多視角的話

186
00:11:17,000 --> 00:11:22,000
基本上現在可以完成這個重建的整個流程

187
00:11:22,000 --> 00:11:24,000
輸的是圖片

188
00:11:24,000 --> 00:11:28,000
然後得到的是帶有紋理的三維模型

189
00:11:28,000 --> 00:11:33,000
我們的這個課程也是要走通這個流程

190
00:11:33,000 --> 00:11:35,000
然後就是雙目立體視覺

191
00:11:35,000 --> 00:11:40,000
雙目立體視覺是通過兩個已經標定好的相機

192
00:11:40,000 --> 00:11:43,000
通過視差得到深度圖

193
00:11:43,000 --> 00:11:46,000
然後得到三維點雲

194
00:11:46,000 --> 00:11:52,000
也是比較常用的一種獲取三維點雲的方式

195
00:11:52,000 --> 00:12:02,000
所以如果我們是基於圖像的方法

196
00:12:02,000 --> 00:12:05,000
基於單目多視角的方法進行建模

197
00:12:05,000 --> 00:12:08,000
它的整個流程就是這樣的

198
00:12:08,000 --> 00:12:10,000
就是我先得到圖像

199
00:12:10,000 --> 00:12:16,000
然後基於這個圖像生成西數點雲

200
00:12:16,000 --> 00:12:19,000
其實西數點雲也是運動恢復結構

201
00:12:19,000 --> 00:12:22,000
主要採用的是這個運動恢復結構技術

202
00:12:22,000 --> 00:12:27,000
它主要是通過這些圖像的匹配

203
00:12:27,000 --> 00:12:34,000
來恢復所有的這個視角所對應的相機的參數

204
00:12:34,000 --> 00:12:36,000
也就是對所有的相機進行註冊

205
00:12:36,000 --> 00:12:40,000
同時可以得到相機的內外參數

206
00:12:40,000 --> 00:12:45,000
然後再得到了相機的參數之後

207
00:12:45,000 --> 00:12:48,000
其實也就是對相機進行了標定之後

208
00:12:48,000 --> 00:12:52,000
然後在這個基礎之上可以通過多視角立體技術

209
00:12:52,000 --> 00:12:55,000
去得到稠密的點雲

210
00:12:55,000 --> 00:13:02,000
在得到稠密的點雲之後

211
00:13:02,000 --> 00:13:05,000
然後就是上我們講的3V充電的一般的流程

212
00:13:05,000 --> 00:13:10,000
通過圖文學的一些技術一些算法

213
00:13:10,000 --> 00:13:13,000
去得到3V的這個模型Mesh

214
00:13:13,000 --> 00:13:15,000
三個的網格Mesh

215
00:13:15,000 --> 00:13:19,000
得到Mesh主要是為了便於數據的存儲編輯

216
00:13:19,000 --> 00:13:26,000
同時也可以提升渲染的效率和穩定性

217
00:13:26,000 --> 00:13:28,000
在得到Mesh之後

218
00:13:28,000 --> 00:13:33,000
然後我們也可以同時可以通過多視角的這些圖像

219
00:13:33,000 --> 00:13:38,000
以及相機的參數進行一個文理的創建

220
00:13:38,000 --> 00:13:40,000
當然這個過程也是全自動的

221
00:13:40,000 --> 00:13:42,000
進行文理的創建

222
00:13:42,000 --> 00:13:45,000
因為如果只是初始創建的文理

223
00:13:45,000 --> 00:13:47,000
它會存在的一些問題

224
00:13:47,000 --> 00:13:52,000
比如說光照不變化引起的縫隙

225
00:13:52,000 --> 00:13:56,000
造成的縫隙會影響集中渲染的逼真程度

226
00:13:56,000 --> 00:13:58,000
所以這個時候就需要

227
00:13:58,000 --> 00:14:03,000
採用一些圖像處理的一些算法

228
00:14:03,000 --> 00:14:05,000
對文理進行處理

229
00:14:05,000 --> 00:14:11,000
來去除圖像裡的縫隙

230
00:14:11,000 --> 00:14:14,000
來提高渲染的逼真度

231
00:14:14,000 --> 00:14:17,000
所以我們這節課就是走這樣一個流程

232
00:14:17,000 --> 00:14:22,000
在基於圖像的點雲生成這裡面

233
00:14:22,000 --> 00:14:24,000
會用到特徵點特徵匹配

234
00:14:24,000 --> 00:14:27,000
以及相機的幾何知識

235
00:14:27,000 --> 00:14:33,000
我們這裡面主要用的是透視

236
00:14:33,000 --> 00:14:37,000
主要用的是相機的透視模型

237
00:14:41,000 --> 00:14:44,000
所以基於圖像的點雲生成這部分

238
00:14:44,000 --> 00:14:47,000
尤其是西書點雲重建這一部分

239
00:14:47,000 --> 00:14:51,000
基本上是可以學到

240
00:14:51,000 --> 00:14:55,000
我們常用的計算機視覺裡的技術

241
00:14:55,000 --> 00:14:57,000
像特徵點特徵匹配

242
00:14:57,000 --> 00:14:59,000
以及相機的幾何模型

243
00:14:59,000 --> 00:15:02,000
以及相機幾何模型的約束

244
00:15:02,000 --> 00:15:04,000
像虧蟒調整

245
00:15:04,000 --> 00:15:06,000
也就是BA虧蟒調整

246
00:15:06,000 --> 00:15:11,000
一些數學的模型和優化的方法

247
00:15:11,000 --> 00:15:14,000
以及運動恢復結構

248
00:15:14,000 --> 00:15:17,000
運動恢復結構實際上是一個框架

249
00:15:17,000 --> 00:15:20,000
裡面其實包含了相機的匹配

250
00:15:20,000 --> 00:15:23,000
相機初始參數的恢復

251
00:15:23,000 --> 00:15:26,000
就像怎麼樣

252
00:15:26,000 --> 00:15:28,000
或者講的再具體一點就是

253
00:15:28,000 --> 00:15:30,000
怎麼樣從兩幅匹配的圖像裡面

254
00:15:30,000 --> 00:15:33,000
去恢復相機的初始的參數

255
00:15:33,000 --> 00:15:36,000
然後怎麼樣對相機的參數利用多個視角

256
00:15:36,000 --> 00:15:41,000
對相機的內外參數進行一個非線性的優化

257
00:15:41,000 --> 00:15:47,000
都是在西書點雲重建這一部分會講到

258
00:15:47,000 --> 00:15:49,000
然後稠密點雲重建

259
00:15:49,000 --> 00:15:54,000
主要是用到多視角的立體技術

260
00:15:54,000 --> 00:15:57,000
其實就是深度圖的估計

261
00:15:57,000 --> 00:15:59,000
每個像素深度的估計

262
00:15:59,000 --> 00:16:04,000
會運到多個視角之間的一個深度3D的約束

263
00:16:04,000 --> 00:16:07,000
比如說我們常用的光度一致性約束

264
00:16:07,000 --> 00:16:10,000
就是兩個三維中的物體

265
00:16:10,000 --> 00:16:13,000
在不同的視角之中他們的投影

266
00:16:13,000 --> 00:16:16,000
他們的光度應該是相似的

267
00:16:16,000 --> 00:16:21,000
其實整個的稠密成建這個過程中

268
00:16:21,000 --> 00:16:28,000
基本上都是運到了光度一致性約束

269
00:16:28,000 --> 00:16:30,000
運的非常的頻繁

270
00:16:30,000 --> 00:16:36,000
然後到點到模型的重建

271
00:16:36,000 --> 00:16:39,000
會運到一些圖形學的一些知識

272
00:16:39,000 --> 00:16:41,000
就是把點雲轉換成mesh

273
00:16:41,000 --> 00:16:44,000
這個其實是一個非常非常難

274
00:16:44,000 --> 00:16:47,000
也是功能量非常大的一個問題

275
00:16:47,000 --> 00:16:49,000
所以我們講的時候

276
00:16:49,000 --> 00:16:53,000
只講一些比較基礎的便於實現的一些方法

277
00:16:53,000 --> 00:16:57,000
後面主要涉及到圖像的拼接

278
00:16:57,000 --> 00:17:05,000
這個在圖像拼接

279
00:17:05,000 --> 00:17:11,000
就是image stitching大規模的場景的圖像拼接裡面

280
00:17:11,000 --> 00:17:13,000
會經常運到的

281
00:17:13,000 --> 00:17:17,000
這個有好多的技術重疊的地方

282
00:17:17,000 --> 00:17:21,000
包括圖像的編輯

283
00:17:21,000 --> 00:17:24,000
比如說我們常用的博宗圖像編輯算法

284
00:17:24,000 --> 00:17:30,000
這個也是屬於圖像融合裡面的一些技術

285
00:17:30,000 --> 00:17:32,000
所以就是總共三維模型重建

286
00:17:32,000 --> 00:17:36,000
其實它是一個偏工蟲是一個系統框架

287
00:17:36,000 --> 00:17:39,000
但是同時也涉及到多個學科

288
00:17:39,000 --> 00:17:41,000
比如說計算機視覺

289
00:17:41,000 --> 00:17:43,000
圖像處理

290
00:17:43,000 --> 00:17:45,000
還有這個計算機圖形學

291
00:17:45,000 --> 00:17:47,000
這也是為什麼這個三維模型重建

292
00:17:47,000 --> 00:17:51,000
它的學起來比較有難度的地方

293
00:17:51,000 --> 00:17:54,000
因為它確實涉及到多個學科交叉

294
00:17:54,000 --> 00:17:57,000
同時它的知識點也都比較散亂

295
00:17:57,000 --> 00:17:59,000
所以其實如果說

296
00:17:59,000 --> 00:18:03,000
能從頭到尾的學我們這門課

297
00:18:03,000 --> 00:18:08,000
然後從頭到尾的把配它的代碼給看一遍

298
00:18:08,000 --> 00:18:11,000
甚至有些地方公式可以推一遍

299
00:18:11,000 --> 00:18:16,000
其實基本上就這個領域內的所有的這些問題

300
00:18:16,000 --> 00:18:18,000
基本上你都會瞭解到

301
00:18:18,000 --> 00:18:21,000
而且就是相關的技術

302
00:18:21,000 --> 00:18:23,000
也可以很好地掌握

303
00:18:23,000 --> 00:18:36,000
這是一些重建的案例

304
00:18:36,000 --> 00:18:42,000
就是用我們配套的這些代碼跑出來的結果

305
00:18:42,000 --> 00:18:44,000
這個是一個傾斜攝影的

306
00:18:44,000 --> 00:18:47,000
三攝影頭的數據重建的效果

307
00:18:47,000 --> 00:18:58,000
是對一個山地的局部場景進行的建模

308
00:18:58,000 --> 00:19:02,000
傾斜攝影就是我們常見的黃拍數據

309
00:19:02,000 --> 00:19:04,000
比如說單攝像頭的

310
00:19:04,000 --> 00:19:06,000
那就是一個攝像頭朝下

311
00:19:06,000 --> 00:19:09,000
這種攝像頭它拍不到建築的側面

312
00:19:09,000 --> 00:19:13,000
所以重建出來的建築只有屋頂沒有側面

313
00:19:13,000 --> 00:19:15,000
所以你就看上去的話

314
00:19:15,000 --> 00:19:17,000
它很像一個融化的巧克力

315
00:19:17,000 --> 00:19:19,000
攤在地上的

316
00:19:19,000 --> 00:19:22,000
而傾斜攝影它不單有

317
00:19:22,000 --> 00:19:25,000
同時它同時會獲取三張圖片

318
00:19:25,000 --> 00:19:27,000
比如說這個傾斜攝影三攝像頭的

319
00:19:27,000 --> 00:19:28,000
一個攝像頭朝下

320
00:19:28,000 --> 00:19:30,000
兩個攝像頭朝側面

321
00:19:30,000 --> 00:19:32,000
所以就是運來建模的時候

322
00:19:32,000 --> 00:19:35,000
它不單可以得到房景信息

323
00:19:35,000 --> 00:19:37,000
也可以得到這個牆面的信息

324
00:19:37,000 --> 00:19:40,000
所以它重建出來的模型就會比較完整

325
00:19:40,000 --> 00:19:43,000
這是我們重建的一個案例

326
00:19:43,000 --> 00:19:53,000
跟我們這節課相關的一些商業軟件

327
00:19:53,000 --> 00:19:55,000
就是RQ3D

328
00:19:55,000 --> 00:19:57,000
這個是比較早的

329
00:19:57,000 --> 00:20:00,000
一個法國的創意公司做的一款產品

330
00:20:00,000 --> 00:20:03,000
在2011年的時候

331
00:20:03,000 --> 00:20:05,000
他們已經開始發布這款產品

332
00:20:05,000 --> 00:20:11,000
後來這個軟件

333
00:20:11,000 --> 00:20:16,000
這公司被美國一家做3D的公司收購了

334
00:20:16,000 --> 00:20:21,000
所以他們這個算是在三維建模的商業軟件方面

335
00:20:21,000 --> 00:20:23,000
走得比較早

336
00:20:23,000 --> 00:20:25,000
而且也算是走得比較成功

337
00:20:25,000 --> 00:20:30,000
後面這個第二款軟件

338
00:20:30,000 --> 00:20:34,000
是香港科技大學全龍老師他們組開發的

339
00:20:34,000 --> 00:20:39,000
一個跟大家無人機合作的這樣一個項目

340
00:20:41,000 --> 00:20:44,000
可以通過無人機上傳視頻序列

341
00:20:44,000 --> 00:20:46,000
然後重建模型

342
00:20:46,000 --> 00:20:51,000
他們的效果和RQ3D其實已經完全接近了

343
00:20:51,000 --> 00:21:00,000
最後這個是俄羅斯的一款單機版的建模軟件

344
00:21:00,000 --> 00:21:04,000
它這個效果也還可以

345
00:21:04,000 --> 00:21:06,000
這個效果也還可以

346
00:21:07,000 --> 00:21:12,000
所有的這些商業軟件的技術路線都是

347
00:21:12,000 --> 00:21:15,000
他們的技術路線都是這樣的

348
00:21:15,000 --> 00:21:18,000
當然他們有些細節會做得比較好

349
00:21:18,000 --> 00:21:20,000
比如說

350
00:21:20,000 --> 00:21:23,000
在點雲到模型重建之後

351
00:21:23,000 --> 00:21:25,000
他們會利用多視角

352
00:21:25,000 --> 00:21:29,000
在對網格進行多視角的優化

353
00:21:29,000 --> 00:21:34,000
因為如果點雲

354
00:21:36,000 --> 00:21:38,000
存在這些空洞的話

355
00:21:38,000 --> 00:21:41,000
那麼我重建出來的網格就會失真

356
00:21:41,000 --> 00:21:44,000
比如說像建築的面

357
00:21:44,000 --> 00:21:46,000
就有可能會發生一些形變

358
00:21:46,000 --> 00:21:48,000
像面包那樣的膨脹起來

359
00:21:48,000 --> 00:21:52,000
這樣的話就是它會影響最終的一個效果

360
00:21:52,000 --> 00:21:57,000
所以為了進一步提升它的精度

361
00:21:57,000 --> 00:21:59,000
就可以利用多視角

362
00:21:59,000 --> 00:22:02,000
和利用它已經得到的這些TOP的信息

363
00:22:02,000 --> 00:22:05,000
來進行一個多視角的優化

364
00:22:05,000 --> 00:22:08,000
這個是一個非常重要

365
00:22:08,000 --> 00:22:10,000
對提升效果是非常重要的一步

366
00:22:10,000 --> 00:22:13,000
尤其是對呈現一些建築的場景

367
00:22:13,000 --> 00:22:17,000
可以大幅度的提高一些它的避震重度

368
00:22:17,000 --> 00:22:22,000
這是商業軟件裡面的好多一些技術細節

369
00:22:22,000 --> 00:22:25,000
那這節課程根據

370
00:22:25,000 --> 00:22:29,000
這個在沒呈現的一些流程

371
00:22:29,000 --> 00:22:33,000
我們設置了這樣一些八個小節的課程

372
00:22:33,000 --> 00:22:35,000
這八個小節其實都可以分佈在上面

373
00:22:35,000 --> 00:22:37,000
我們介紹的那幾個模塊當中

374
00:22:37,000 --> 00:22:42,000
第一個課程我們講一個特種點的檢測與匹配

375
00:22:42,000 --> 00:22:46,000
就是在3V充電裡面用到的一些特種點

376
00:22:46,000 --> 00:22:50,000
其實現在來說

377
00:22:50,000 --> 00:22:54,000
很長時間可以說特種點

378
00:22:54,000 --> 00:22:58,000
就是原先在生物學習之前

379
00:22:58,000 --> 00:23:01,000
基本上都是人工設計的一些特種點

380
00:23:01,000 --> 00:23:04,000
就是花費好多的時間

381
00:23:04,000 --> 00:23:07,000
然後要很多的人力

382
00:23:07,000 --> 00:23:10,000
很長的時間去驗證一種特種點

383
00:23:10,000 --> 00:23:14,000
包括到現在我們能數的上來的比較熟悉的這些特種點

384
00:23:14,000 --> 00:23:17,000
也就是ZIP,SURF,還有就是

385
00:23:17,000 --> 00:23:21,000
像這個ORB這些快速的FAST

386
00:23:21,000 --> 00:23:22,000
這些特種點

387
00:23:22,000 --> 00:23:26,000
其實到目前為止沒有太大的一些發展

388
00:23:26,000 --> 00:23:29,000
但是這些設計出的特種點

389
00:23:29,000 --> 00:23:32,000
比如像ZIP的確實是比較

390
00:23:32,000 --> 00:23:36,000
是到目前為止還是比較重要的一些特種點

391
00:23:36,000 --> 00:23:39,000
當然根據一些不同的需求

392
00:23:39,000 --> 00:23:41,000
我們選擇特種點也不一樣

393
00:23:41,000 --> 00:23:44,000
比如說如果我對實質性沒有要求

394
00:23:44,000 --> 00:23:50,000
我們就可以採用ZIP的或者SURF這些特種點

395
00:23:50,000 --> 00:23:51,000
因為它確實比較穩定

396
00:23:51,000 --> 00:23:53,000
但如果你對實質性的要求

397
00:23:53,000 --> 00:23:56,000
我要求它重建的

398
00:23:56,000 --> 00:23:59,000
或者相機參數恢復是實時的

399
00:23:59,000 --> 00:24:01,000
那麼我們就可以用一些ORB或者FAST

400
00:24:01,000 --> 00:24:04,000
這種思路的一些特種點

401
00:24:04,000 --> 00:24:07,000
當然現在也會有一些

402
00:24:07,000 --> 00:24:09,000
基於深度學習的人工的

403
00:24:09,000 --> 00:24:14,000
學習的一些特種點或者關鍵點

404
00:24:14,000 --> 00:24:18,000
這些一般都是針對一些特定的應用

405
00:24:18,000 --> 00:24:21,000
比如說像人臉觀念的檢測

406
00:24:21,000 --> 00:24:24,000
其實也是屬於其中的一個範疇

407
00:24:24,000 --> 00:24:29,000
但是它不是完全符合特種點

408
00:24:29,000 --> 00:24:34,000
當然你可以如果說有針對你的實際應用

409
00:24:34,000 --> 00:24:36,000
你也可以去學一些特種點

410
00:24:36,000 --> 00:24:39,000
比如說像現在在做地圖定位的時候

411
00:24:39,000 --> 00:24:42,000
就可以通過深度學習去學一些特種點

412
00:24:42,000 --> 00:24:43,000
學一些描述字

413
00:24:43,000 --> 00:24:47,000
然後進行一個在進行定位的時候

414
00:24:47,000 --> 00:24:50,000
我們可以通過特種點的匹配

415
00:24:50,000 --> 00:24:52,000
來得到這個相機的位置

416
00:24:52,000 --> 00:24:54,000
但是就是深度學習

417
00:24:54,000 --> 00:24:56,000
目前來說它的主要的問題

418
00:24:56,000 --> 00:24:59,000
就是應用場景還是比較受限

419
00:24:59,000 --> 00:25:03,000
比如說像計算能力和實時性這一塊的話

420
00:25:03,000 --> 00:25:05,000
就是到目前為止還沒有滿足

421
00:25:05,000 --> 00:25:08,000
實際場景的一個需求

422
00:25:08,000 --> 00:25:12,000
這是第一節課

423
00:25:12,000 --> 00:25:17,000
第二節課是講相機的模型和對極幾何

424
00:25:17,000 --> 00:25:21,000
這裡面我們主要講相機的透視模型

425
00:25:21,000 --> 00:25:27,000
對極幾何主要就是講兩個相機之間的相對的約束

426
00:25:27,000 --> 00:25:31,000
其實這節課主要是解決的一個問題是什麼呢

427
00:25:31,000 --> 00:25:35,000
就是我告訴你我的相機是透視的模型

428
00:25:35,000 --> 00:25:40,000
然後告訴你兩幅已經匹配好的圖像

429
00:25:40,000 --> 00:25:43,000
通過我們第一節課中檢測到的特種點

430
00:25:43,000 --> 00:25:46,000
和匹配之後的匹配對

431
00:25:46,000 --> 00:25:51,000
然後我要恢復這兩個相機之間的一個相對的位置

432
00:25:51,000 --> 00:25:56,000
也就是說要知道相機的一個相對的參數

433
00:25:56,000 --> 00:25:58,000
那麼我們就需要用到這個對極幾何

434
00:25:58,000 --> 00:26:02,000
這個是比較核心的

435
00:26:02,000 --> 00:26:05,000
是這個三維專機視覺裡面比較核心的

436
00:26:05,000 --> 00:26:09,000
對極幾何裡面最主要的

437
00:26:09,000 --> 00:26:12,000
比如說兩個相機之間的一個模型

438
00:26:12,000 --> 00:26:15,000
像這個本中矩陣和本質矩陣

439
00:26:15,000 --> 00:26:19,000
這個是裡面是最長硬的

440
00:26:19,000 --> 00:26:23,000
同時我們也會講到本中矩陣和本質矩陣

441
00:26:23,000 --> 00:26:27,000
是怎麼來描述這兩個相機

442
00:26:27,000 --> 00:26:29,000
兩個相機之間的一個約束

443
00:26:29,000 --> 00:26:34,000
同時怎麼通過本質矩陣或者是本中矩陣

444
00:26:34,000 --> 00:26:37,000
去恢復相機的相對參數

445
00:26:37,000 --> 00:26:39,000
比如旋徵矩陣和頻線量

446
00:26:39,000 --> 00:26:42,000
這個是這節課講的

447
00:26:42,000 --> 00:26:47,000
第三節課和第四節課主要是講運動恢復結構

448
00:26:47,000 --> 00:26:49,000
就是Dragwell模式

449
00:26:49,000 --> 00:26:55,000
通過多視角的圖像去得到相機的

450
00:26:55,000 --> 00:26:59,000
對所有場景的相機進行對齊

451
00:26:59,000 --> 00:27:02,000
也就是恢復所有相機的一個參數

452
00:27:02,000 --> 00:27:04,000
對相機進行標定

453
00:27:04,000 --> 00:27:06,000
第三節課從運動恢復

454
00:27:06,000 --> 00:27:08,000
從運動到結構的第一節課

455
00:27:08,000 --> 00:27:15,000
我們主要是講一些基本的算法

456
00:27:15,000 --> 00:27:18,000
比如說PnP算法

457
00:27:18,000 --> 00:27:24,000
就是在得到3D特種點和2D圖像上的對應點

458
00:27:24,000 --> 00:27:26,000
來恢復相機的參數

459
00:27:26,000 --> 00:27:29,000
比如說像捆綁調整

460
00:27:29,000 --> 00:27:32,000
也是BA優化

461
00:27:32,000 --> 00:27:40,000
就是在得到多個相機的初始參數之後

462
00:27:40,000 --> 00:27:45,000
然後對所有的參數同時進行非線性的優化

463
00:27:45,000 --> 00:27:52,000
這裡面我們會提供BA問題的推導公式

464
00:27:52,000 --> 00:27:55,000
就是具體的是怎麼優化的

465
00:27:55,000 --> 00:27:57,000
比如說我們用IM算法

466
00:27:57,000 --> 00:27:59,000
一種比較特殊的梯度下降的算法

467
00:27:59,000 --> 00:28:01,000
對它進行優化

468
00:28:01,000 --> 00:28:06,000
這個LM算法的原理

469
00:28:06,000 --> 00:28:09,000
實現的細節我們都會提供

470
00:28:09,000 --> 00:28:15,000
同時也會提供捆綁調整的推導

471
00:28:15,000 --> 00:28:18,000
就是給你這樣一個公式

472
00:28:18,000 --> 00:28:21,000
你要去應用梯度下降法進行優化

473
00:28:21,000 --> 00:28:25,000
首先你要得到它的亞克比矩陣

474
00:28:25,000 --> 00:28:31,000
我們這個課程裡面會提供如何去推導

475
00:28:31,000 --> 00:28:36,000
關於相機參數和三維點的亞克比矩陣

476
00:28:36,000 --> 00:28:38,000
所以這一課也是特別特別重要

477
00:28:38,000 --> 00:28:41,000
基本上如果你能夠自己推出亞克比矩陣

478
00:28:41,000 --> 00:28:44,000
然後自己去實現優化

479
00:28:44,000 --> 00:28:47,000
那麼基本上最核心的一些細節你就掌握了

480
00:28:47,000 --> 00:28:50,000
那第四節課呢

481
00:28:50,000 --> 00:28:52,000
是在第三節課的基礎之上

482
00:28:52,000 --> 00:28:53,000
從運動到結構

483
00:28:53,000 --> 00:28:57,000
第三節課我們是講了兩個視角之間的約束

484
00:28:57,000 --> 00:29:01,000
就是在得到兩個

485
00:29:01,000 --> 00:29:03,000
在一對匹配的圖像

486
00:29:03,000 --> 00:29:06,000
以及圖像裡面的匹配的特種點

487
00:29:06,000 --> 00:29:08,000
然後我們要恢復

488
00:29:08,000 --> 00:29:11,000
通過第二節課恢復

489
00:29:11,000 --> 00:29:14,000
兩個相機之間的相對的參數

490
00:29:14,000 --> 00:29:17,000
同時也進行一個非線性的優化

491
00:29:17,000 --> 00:29:20,000
就是BA優化

492
00:29:20,000 --> 00:29:23,000
最後來得到比較準確的相機模型

493
00:29:23,000 --> 00:29:25,000
那第四節課呢

494
00:29:25,000 --> 00:29:28,000
我們要進行多視角的重建

495
00:29:28,000 --> 00:29:31,000
在兩個視角的基礎之上

496
00:29:31,000 --> 00:29:34,000
怎麼樣去添加其他的視角

497
00:29:34,000 --> 00:29:38,000
怎麼樣去得到新添加視角的初始的參數

498
00:29:38,000 --> 00:29:45,000
然後怎麼樣對所有的相機參數進行一個全局的非線性優化

499
00:29:45,000 --> 00:29:47,000
就是BA優化

500
00:29:47,000 --> 00:29:50,000
這是第四節課裡面要講的

501
00:29:50,000 --> 00:29:53,000
但其實呢

502
00:29:53,000 --> 00:29:55,000
這個BA問題呢

503
00:29:55,000 --> 00:29:57,000
是一個

504
00:29:57,000 --> 00:30:01,000
它其實可以說是一種優化的框架

505
00:30:01,000 --> 00:30:03,000
因為針對不同的場景

506
00:30:03,000 --> 00:30:06,000
我們所需要的具體的這個

507
00:30:06,000 --> 00:30:07,000
不同的任務

508
00:30:07,000 --> 00:30:09,000
我們需要的具體的模型也不一樣

509
00:30:09,000 --> 00:30:12,000
比如說最常用的quantum調整

510
00:30:12,000 --> 00:30:15,000
我們需要對相機的內參數

511
00:30:15,000 --> 00:30:18,000
外參數還有三位點的座標

512
00:30:18,000 --> 00:30:19,000
同時進行優化

513
00:30:19,000 --> 00:30:21,000
但是也有的一些場景呢

514
00:30:21,000 --> 00:30:22,000
不需要對三位點

515
00:30:22,000 --> 00:30:26,000
只需要對相機的參數進行優化

516
00:30:26,000 --> 00:30:27,000
還有一些場景

517
00:30:27,000 --> 00:30:29,000
只需要對相機的外參數進行優化

518
00:30:29,000 --> 00:30:31,000
內參數固定的

519
00:30:31,000 --> 00:30:33,000
如果你想

520
00:30:33,000 --> 00:30:38,000
可以很熟練的解決這些問題的話

521
00:30:38,000 --> 00:30:40,000
那麼你就需要對BA問題

522
00:30:40,000 --> 00:30:42,000
有一個非常深刻的一個理解

523
00:30:42,000 --> 00:30:43,000
這個時候呢

524
00:30:43,000 --> 00:30:45,000
你自己去推一下公式

525
00:30:45,000 --> 00:30:47,000
自己去實現一下就比較必要

526
00:30:47,000 --> 00:30:50,000
那第三次節課就掌握了

527
00:30:50,000 --> 00:30:52,000
三次節課的這些知識呢

528
00:30:52,000 --> 00:30:55,000
你基本上就可以完成這些任務

529
00:30:55,000 --> 00:30:58,000
第五節課是這個重密點營的重建

530
00:30:58,000 --> 00:30:59,000
重密點營的重建

531
00:30:59,000 --> 00:31:02,000
就是在也是在前面這些基礎之上

532
00:31:02,000 --> 00:31:04,000
因為我們其實講的這個課呢

533
00:31:04,000 --> 00:31:06,000
其實它是有一個邏輯關係的

534
00:31:06,000 --> 00:31:08,000
就是從頭到尾下來

535
00:31:08,000 --> 00:31:10,000
就是完成了3V重建的這個流程

536
00:31:10,000 --> 00:31:11,000
所以第五節課呢

537
00:31:11,000 --> 00:31:14,000
也是依賴於前面這些課的結果

538
00:31:14,000 --> 00:31:16,000
比如說

539
00:31:16,000 --> 00:31:19,000
我進行重密點營的重建

540
00:31:19,000 --> 00:31:22,000
那麼我就需要每個相機的參數

541
00:31:22,000 --> 00:31:24,000
也就是說我要求這個相機呢

542
00:31:24,000 --> 00:31:26,000
已經是註冊好的

543
00:31:26,000 --> 00:31:29,000
它的內外參數我已經是知道的

544
00:31:29,000 --> 00:31:31,000
然後呢

545
00:31:31,000 --> 00:31:34,000
進行重密點營的重建

546
00:31:34,000 --> 00:31:38,000
它會用到這個光度一致性的約束

547
00:31:38,000 --> 00:31:39,000
這個約束呢

548
00:31:39,000 --> 00:31:42,000
是基本上是這個

549
00:31:42,000 --> 00:31:45,000
所有的DOM是個立體視覺裡面

550
00:31:45,000 --> 00:31:48,000
立體視覺技術裡面是必備的

551
00:31:48,000 --> 00:31:49,000
一個技術

552
00:31:49,000 --> 00:31:51,000
然後

553
00:31:51,000 --> 00:31:54,000
在得到這個光度一致性約束之後呢

554
00:31:54,000 --> 00:32:00,000
也要對這個深度進行優化

555
00:32:00,000 --> 00:32:03,000
因為我們要得到3V點營

556
00:32:03,000 --> 00:32:04,000
其實呢

557
00:32:04,000 --> 00:32:08,000
一種常用的方法就是恢復每個相數的深度

558
00:32:08,000 --> 00:32:10,000
有了這個深度之後

559
00:32:10,000 --> 00:32:13,000
我們就可以得到它的3D空間中的位置

560
00:32:13,000 --> 00:32:17,000
所以就是相當於是這個重密點營重建呢

561
00:32:17,000 --> 00:32:19,000
就是對每個視角進行一個深度的

562
00:32:19,000 --> 00:32:21,000
深度圖的一個重建

563
00:32:21,000 --> 00:32:24,000
那麼這裡面就會涉及到一個基本的一些視覺建模

564
00:32:24,000 --> 00:32:28,000
比如說基本上現在的一些算法呢

565
00:32:28,000 --> 00:32:32,000
都會把深度

566
00:32:32,000 --> 00:32:36,000
都會把這個3D點營呢

567
00:32:36,000 --> 00:32:39,000
建模成為一個3D空間中的3V點

568
00:32:39,000 --> 00:32:43,000
然後建模成為一個3D的空間的patch

569
00:32:43,000 --> 00:32:47,000
這個patch的中心呢就是3V點的空間位置

570
00:32:47,000 --> 00:32:49,000
這個patch的法線量

571
00:32:49,000 --> 00:32:52,000
就是這個

572
00:32:52,000 --> 00:32:54,000
這個patch的朝向

573
00:32:54,000 --> 00:32:56,000
所以說呢

574
00:32:56,000 --> 00:32:58,000
有一個很小的patch

575
00:32:58,000 --> 00:33:01,000
也就是你可以列成空間中的一個很小的巨型

576
00:33:01,000 --> 00:33:04,000
那麼其實它同時就包含了

577
00:33:04,000 --> 00:33:07,000
3D的位置和法線量這兩個信息

578
00:33:07,000 --> 00:33:09,000
那通過調整

579
00:33:09,000 --> 00:33:12,000
通過調整這個

580
00:33:12,000 --> 00:33:16,000
空間的位置和這個法線量的朝向

581
00:33:16,000 --> 00:33:19,000
那麼我們就可以得到這個

582
00:33:19,000 --> 00:33:24,000
這個patch在不同的視角裏面的一個投影

583
00:33:24,000 --> 00:33:28,000
通過計算這個投影之間的光度一致性

584
00:33:28,000 --> 00:33:31,000
就可以找到一個最優的

585
00:33:31,000 --> 00:33:34,000
深度值或者是這個

586
00:33:34,000 --> 00:33:37,000
這個空間位置和法線量

587
00:33:37,000 --> 00:33:40,000
那這個呢其實就是蟲蜜重建裏面最核心的一個技術

588
00:33:40,000 --> 00:33:43,000
最核心的一個技術

589
00:33:43,000 --> 00:33:46,000
然後得到蟲蜜點營和法線量之後

590
00:33:46,000 --> 00:33:49,000
就會完成點營到網格的表面重建

591
00:33:49,000 --> 00:33:53,000
這個地方呢我們主要是講這個隱含數的一個重建

592
00:33:53,000 --> 00:33:56,000
從點營到網格的重建

593
00:33:56,000 --> 00:33:59,000
其實還有一些像得了內

594
00:33:59,000 --> 00:34:02,000
像得了內的一些重建

595
00:34:02,000 --> 00:34:05,000
這些都是一些比較簡單的方法

596
00:34:05,000 --> 00:34:08,000
隱含數相對來說比較穩定

597
00:34:08,000 --> 00:34:11,000
比較穩定然後能夠描述我們常見的

598
00:34:11,000 --> 00:34:14,000
幾乎我們常見的這些物體的形狀

599
00:34:14,000 --> 00:34:17,000
幾乎我們常見的這些物體的形狀

600
00:34:17,000 --> 00:34:20,000
隱含數也分局部的隱含數和全局的隱含數

601
00:34:20,000 --> 00:34:23,000
這裏面我們這節課裏面主要講這個

602
00:34:23,000 --> 00:34:26,000
基於局部的隱含數的一些重建方法

603
00:34:26,000 --> 00:34:29,000
主要的優勢就是速度比較快

604
00:34:29,000 --> 00:34:32,000
也是實現起來相對簡單一些

605
00:34:32,000 --> 00:34:35,000
在得到網格之後然後進行一個

606
00:34:35,000 --> 00:34:38,000
文體的重建和文體圖像的重建

607
00:34:38,000 --> 00:34:41,000
和編輯那這裏面主要用到了一些

608
00:34:41,000 --> 00:34:44,000
圖文學的一些知識當然也會用到一些

609
00:34:44,000 --> 00:34:47,000
優化比如說全局的顏色調整

610
00:34:47,000 --> 00:34:50,000
和薄松的薄松圖像

611
00:34:50,000 --> 00:34:53,000
編輯這節課裏面

612
00:34:53,000 --> 00:34:56,000
如果你自己去實現的話你就會知道

613
00:34:56,000 --> 00:34:59,000
怎麼樣去構建薄松方程

614
00:34:59,000 --> 00:35:02,000
怎麼樣去解這個線性方程

615
00:35:02,000 --> 00:35:05,000
這是第七八節課裏面有的

616
00:35:05,000 --> 00:35:08,000
其實現在來說我們講的這些課程

617
00:35:08,000 --> 00:35:11,000
都是一些比較基礎的

618
00:35:11,000 --> 00:35:14,000
因為在深度學習之前

619
00:35:14,000 --> 00:35:17,000
因為在深度學習之前

620
00:35:17,000 --> 00:35:20,000
基本上三面重建就是這樣一個技術路線

621
00:35:20,000 --> 00:35:23,000
其實深度學習興起之後也在

622
00:35:23,000 --> 00:35:26,000
跟三維去做一些結合

623
00:35:26,000 --> 00:35:29,000
其實可以這樣說就是現在的工業界

624
00:35:29,000 --> 00:35:32,000
僅僅是只做2D的深度學習

625
00:35:32,000 --> 00:35:35,000
其實基本上已經發展到了一個

626
00:35:35,000 --> 00:35:38,000
一個很頂端就很難再有提升

627
00:35:38,000 --> 00:35:41,000
或者改進了所以如果你關注

628
00:35:41,000 --> 00:35:44,000
現在的會議的話你會發現

629
00:35:44,000 --> 00:35:47,000
在3D的任務上這個深度學習在慢慢的

630
00:35:47,000 --> 00:35:50,000
而且工作特別多

631
00:35:50,000 --> 00:35:53,000
18年的ECCV應該有50%以上的

632
00:35:53,000 --> 00:35:56,000
都是3D視覺相關的深度學習的擁有

633
00:35:56,000 --> 00:35:59,000
在這裡面其實我們每一個模塊都可以

634
00:35:59,000 --> 00:36:02,000
用深度學習去做一些任務

635
00:36:02,000 --> 00:36:05,000
當然不管它是不是實用

636
00:36:05,000 --> 00:36:08,000
但是至少可以做一些工作

637
00:36:08,000 --> 00:36:11,000
比如說像特重點的檢測與匹配

638
00:36:11,000 --> 00:36:14,000
在人臉觀念點裏面其實已經可以提供一些思路

639
00:36:14,000 --> 00:36:17,000
另外也有一些工作去做描述仔細的生存

640
00:36:17,000 --> 00:36:20,000
比如說我不是檢測特重點

641
00:36:20,000 --> 00:36:23,000
我是檢測空間中的一個面片

642
00:36:23,000 --> 00:36:26,000
一個patch我去進行

643
00:36:26,000 --> 00:36:29,000
一個patch之間的匹配與異級別的匹配

644
00:36:29,000 --> 00:36:32,000
這個也是我們

645
00:36:32,000 --> 00:36:35,000
在ECV2018裏面的一個工作

646
00:36:35,000 --> 00:36:38,000
進行patch匹配之後

647
00:36:38,000 --> 00:36:41,000
實際上每匹配上一個patch

648
00:36:41,000 --> 00:36:44,000
其實我就可以得到空間中的3D面片

649
00:36:44,000 --> 00:36:47,000
這樣的話建模起來會更加方便一些

650
00:36:47,000 --> 00:36:50,000
而且就是

651
00:36:50,000 --> 00:36:53,000
與異級別更高的匹配的話

652
00:36:53,000 --> 00:36:56,000
它也更加準確對於恢復相機的參數模型

653
00:36:56,000 --> 00:36:59,000
比僅僅是用特重點工具有優勢

654
00:36:59,000 --> 00:37:02,000
當然提供一些

655
00:37:02,000 --> 00:37:05,000
與異信息也可以為匹配提供

656
00:37:05,000 --> 00:37:08,000
一些幫助

657
00:37:08,000 --> 00:37:11,000
比如說在兩幅圖像之間

658
00:37:11,000 --> 00:37:14,000
我可以先通過與異一些分割進行一些分析

659
00:37:14,000 --> 00:37:17,000
那麼我特重點的匹配肯定是在同類物體之間

660
00:37:17,000 --> 00:37:20,000
如果發生了一些交叉

661
00:37:20,000 --> 00:37:23,000
比如說我房子匹配在樹上

662
00:37:23,000 --> 00:37:26,000
那麼這個匹配可以事先進行刪除掉

663
00:37:26,000 --> 00:37:29,000
來提升這個匹配的準確率

664
00:37:29,000 --> 00:37:32,000
這些是與異的一些重建

665
00:37:32,000 --> 00:37:35,000
現在應該是比較前沿的一些探索

666
00:37:35,000 --> 00:37:38,000
很多機構

667
00:37:38,000 --> 00:37:41,000
包括公司

668
00:37:41,000 --> 00:37:44,000
包括一些很牛的一些學術機構

669
00:37:44,000 --> 00:37:47,000
現在都在做一些與異的

670
00:37:47,000 --> 00:37:50,000
與三維建模或是與異與SAM

671
00:37:50,000 --> 00:37:53,000
結合的一些工作

672
00:37:53,000 --> 00:37:56,000
現在都在嘗試

673
00:37:56,000 --> 00:37:59,000
所以如果是做學術的話

674
00:37:59,000 --> 00:38:02,000
可以去探索一下這個方向

675
00:38:02,000 --> 00:38:05,000
這個領域也有可能會被做大調

676
00:38:05,000 --> 00:38:08,000
還有相機模型和對機結合

677
00:38:08,000 --> 00:38:11,000
包括下面的運動

678
00:38:11,000 --> 00:38:14,000
運動會議結構

679
00:38:14,000 --> 00:38:17,000
現在也有在做深度學習

680
00:38:17,000 --> 00:38:20,000
做BA、深度學習、做重力電源重建

681
00:38:20,000 --> 00:38:23,000
深度學習、做BA呢

682
00:38:23,000 --> 00:38:26,000
你要知道什麼是可以學習的

683
00:38:26,000 --> 00:38:29,000
什麼是不能學習的

684
00:38:29,000 --> 00:38:32,000
什麼是可以學習的

685
00:38:32,000 --> 00:38:35,000
這些就是一個問題的本質

686
00:38:35,000 --> 00:38:38,000
重力電源重建這一部分

687
00:38:38,000 --> 00:38:41,000
你可以去做

688
00:38:41,000 --> 00:38:44,000
看一些關注一些深度學習的

689
00:38:44,000 --> 00:38:47,000
光流估計或者深度學習的

690
00:38:47,000 --> 00:38:50,000
直接做深度估計這些工作

691
00:38:50,000 --> 00:38:53,000
據我瞭解的是

692
00:38:53,000 --> 00:38:56,000
現在僅僅在2D圖像上去做一些強行的回歸

693
00:38:56,000 --> 00:38:59,000
深度值現在還並不是十分準確

694
00:38:59,000 --> 00:39:02,000
也沒有到了一些可用的程度

695
00:39:02,000 --> 00:39:05,000
所以把3D的一些約束

696
00:39:05,000 --> 00:39:08,000
幾何的約束去放到

697
00:39:08,000 --> 00:39:11,000
深度圖的估計或者光流的估計裡面

698
00:39:11,000 --> 00:39:14,000
應該是一個比較有價值的研究方向

699
00:39:14,000 --> 00:39:17,000
當然現在也有一些工作

700
00:39:17,000 --> 00:39:20,000
做點一大網格的隱含數的回歸

701
00:39:20,000 --> 00:39:23,000
最近我看了一篇叫

702
00:39:23,000 --> 00:39:26,000
C-Dip

703
00:39:26,000 --> 00:39:29,000
就是用深度

704
00:39:29,000 --> 00:39:32,000
用這個神經網絡去做隱含數的

705
00:39:32,000 --> 00:39:35,000
一個重建

706
00:39:35,000 --> 00:39:38,000
隱含數的一個重建

707
00:39:38,000 --> 00:39:41,000
就是輸入的是點雲

708
00:39:41,000 --> 00:39:44,000
然後得到的是一個隱含數

709
00:39:44,000 --> 00:39:47,000
其實得到隱含數之後基本上就是得到網格

710
00:39:47,000 --> 00:39:50,000
所以基本上在做深度學習再往各個領域深透

711
00:39:50,000 --> 00:39:53,000
文理圖像的創建與編輯也有

712
00:39:53,000 --> 00:39:56,000
比如說會用這個GAN

713
00:39:56,000 --> 00:39:59,000
用對抗網絡去做文理圖像的一些區縫操作

714
00:39:59,000 --> 00:40:02,000
也有一些這樣的相關的工作

715
00:40:02,000 --> 00:40:05,000
所以其實呢

716
00:40:05,000 --> 00:40:08,000
我們在講三位重建現在不光是

717
00:40:08,000 --> 00:40:11,000
僅僅是三位重建這個問題

718
00:40:11,000 --> 00:40:14,000
其實也是包含著其他的一些相關的

719
00:40:14,000 --> 00:40:17,000
比如說現身的深度學習相關的一些內容

720
00:40:17,000 --> 00:40:20,000
甚至如果你是做研究的話

721
00:40:20,000 --> 00:40:23,000
你可以往這個方向掌握了3D

722
00:40:23,000 --> 00:40:26,000
三位建模的這些基本的技術之後

723
00:40:26,000 --> 00:40:29,000
那麼你就可以去做一些

724
00:40:29,000 --> 00:40:32,000
碰家的前沿的一些技術

725
00:40:32,000 --> 00:40:35,000
未來幾年之內

726
00:40:35,000 --> 00:40:38,000
3D視覺應該是比較火的一個方向

727
00:40:38,000 --> 00:40:44,000
這是我們課程的一些

728
00:40:44,000 --> 00:40:47,000
參考書

729
00:40:47,000 --> 00:40:50,000
這裡面是一些計算機視覺

730
00:40:50,000 --> 00:40:53,000
這兩個是一個比較新的

731
00:40:53,000 --> 00:40:56,000
一些計算機視覺的參考書

732
00:40:56,000 --> 00:40:59,000
這兩個難以重度不太一樣

733
00:40:59,000 --> 00:41:02,000
第一本是偏重於工業型的

734
00:41:02,000 --> 00:41:05,000
一些工業中長遠的問題

735
00:41:05,000 --> 00:41:08,000
比如說在特徵點的檢測這一方面的話

736
00:41:08,000 --> 00:41:11,000
它會給你提供一些比較有意思的思路

737
00:41:11,000 --> 00:41:14,000
我用工業界裡面解決問題的一些思路

738
00:41:14,000 --> 00:41:17,000
比如說我們長遠的特徵點Zift

739
00:41:17,000 --> 00:41:20,000
長遠的特徵點Zift這種

740
00:41:20,000 --> 00:41:23,000
它都是要求是朗博面

741
00:41:23,000 --> 00:41:26,000
要求我的這個場景的文體比較豐富

742
00:41:26,000 --> 00:41:29,000
但是放到光速度的牆上

743
00:41:29,000 --> 00:41:32,000
比如說室內的場景

744
00:41:32,000 --> 00:41:35,000
那麼它基本上就檢測不出來了

745
00:41:35,000 --> 00:41:38,000
就失效了

746
00:41:38,000 --> 00:41:41,000
那麼這種情況下怎麼辦

747
00:41:41,000 --> 00:41:44,000
這裡面就會提供一些比較巧妙的招數

748
00:41:44,000 --> 00:41:47,000
比如說我直接用一些漢明板

749
00:41:47,000 --> 00:41:50,000
人工的一些特徵點直接貼上去

750
00:41:50,000 --> 00:41:53,000
其實這個也就是一些

751
00:41:53,000 --> 00:41:56,000
我們平常如果傳統的思路方法

752
00:41:56,000 --> 00:41:59,000
可能想不到的方法完全是工程性的思維

753
00:41:59,000 --> 00:42:02,000
所以如果說有這樣一些場景

754
00:42:02,000 --> 00:42:05,000
我要對室內進行一個建模

755
00:42:05,000 --> 00:42:08,000
有可能傳統的這些特徵點都失效

756
00:42:08,000 --> 00:42:11,000
強度是無穩定的

757
00:42:11,000 --> 00:42:14,000
那麼我用這個人工設計的特徵點

758
00:42:14,000 --> 00:42:17,000
去往上貼一下漢明板

759
00:42:17,000 --> 00:42:20,000
然後進行圖像一個拍照

760
00:42:20,000 --> 00:42:23,000
那麼就可以自動識別裡面的一些關鍵點

761
00:42:23,000 --> 00:42:26,000
然後再走下面的一個建模的流程

762
00:42:26,000 --> 00:42:29,000
這也是一個可能的路線

763
00:42:29,000 --> 00:42:32,000
當然也可能有別的一些其他的方法

764
00:42:32,000 --> 00:42:35,000
這個也是其中一個比較有意思的地方

765
00:42:35,000 --> 00:42:38,000
就是三維建模其實有好多地方

766
00:42:38,000 --> 00:42:40,000
你選完這個框架之後

767
00:42:40,000 --> 00:42:43,000
你發現真正的用的地方並不是

768
00:42:43,000 --> 00:42:46,000
我真正的就是我們這個教程裡面的框架

769
00:42:46,000 --> 00:42:49,000
並不能真正的用到每個場景裡面

770
00:42:49,000 --> 00:42:52,000
每個場景不同的任務都需要你去做一些改動

771
00:42:52,000 --> 00:42:55,000
這個時候就需要你去對這個

772
00:42:55,000 --> 00:42:58,000
核心問題對一些問題理解的比較深刻

773
00:42:58,000 --> 00:43:01,000
對一些技術掌握的比較熟練

774
00:43:01,000 --> 00:43:04,000
這個時候你就可以去從容的解決各種問題

775
00:43:04,000 --> 00:43:07,000
第二個是這個第二本書是Cabinavision

776
00:43:07,000 --> 00:43:10,000
這本書講的比較全面一些

777
00:43:10,000 --> 00:43:13,000
裡面也有一些關於3D的一些知識

778
00:43:13,000 --> 00:43:16,000
第三本這個是

779
00:43:16,000 --> 00:43:19,000
三維成建裡面聖經式的一些書籍

780
00:43:19,000 --> 00:43:22,000
但這個書其實不太建議通讀

781
00:43:22,000 --> 00:43:25,000
只是用到哪一個部分的時候過去看一下就可以了

782
00:43:25,000 --> 00:43:28,000
比如說像建模裡面Translation

783
00:43:28,000 --> 00:43:31,000
Translation就是

784
00:43:31,000 --> 00:43:34,000
當我知道兩副相機的參數和對應的特重點的時候

785
00:43:34,000 --> 00:43:37,000
我要得到3V點的座標

786
00:43:37,000 --> 00:43:40,000
Translation的一些建模

787
00:43:40,000 --> 00:43:43,000
在這本書裡面講的公式就比較熟悉

788
00:43:43,000 --> 00:43:46,000
這本書我覺得有什麼特點就是你一開始看的時候會很頭痛

789
00:43:46,000 --> 00:43:49,000
真的是你要看下來的話

790
00:43:49,000 --> 00:43:52,000
你可能要咬著頭皮往下看

791
00:43:52,000 --> 00:43:55,000
用著頭皮往下看

792
00:43:55,000 --> 00:43:58,000
寫的什麼樣真的是難看死了

793
00:43:58,000 --> 00:44:01,000
但是當你有了一些共同實驗經驗的時候

794
00:44:01,000 --> 00:44:04,000
你再回來看這本書你就發現還是這本書寫的好

795
00:44:04,000 --> 00:44:07,000
真的有這樣的感覺

796
00:44:07,000 --> 00:44:10,000
後面這兩本都比較老了

797
00:44:10,000 --> 00:44:13,000
這個是馬毅老師寫的一本書

798
00:44:13,000 --> 00:44:16,000
後面這個

799
00:44:16,000 --> 00:44:19,000
一種現代的方法

800
00:44:19,000 --> 00:44:22,000
這是我之前在讀研究書的時候用的一本書

801
00:44:22,000 --> 00:44:25,000
這本書裡面

802
00:44:25,000 --> 00:44:28,000
我印象最深刻的是相機模型的推導

803
00:44:28,000 --> 00:44:31,000
就是圖示模型的推導

804
00:44:31,000 --> 00:44:34,000
內外參數

805
00:44:34,000 --> 00:44:37,000
還有線性的優化

806
00:44:37,000 --> 00:44:40,000
還有深度和積線的關係

807
00:44:40,000 --> 00:44:43,000
這本書裡面講的比較好一些

808
00:44:43,000 --> 00:44:46,000
當時意見還特別深刻

809
00:44:46,000 --> 00:44:49,000
還有一本書

810
00:44:49,000 --> 00:44:52,000
也是我們學院的老師高翔博士寫的

811
00:44:52,000 --> 00:44:55,000
Standard十字講

812
00:44:55,000 --> 00:44:58,000
這本書也非常不錯

813
00:44:58,000 --> 00:45:01,000
裡面有好多的三維建模裡面的基礎知識

814
00:45:01,000 --> 00:45:04,000
也在這裡面講的非常詳細

815
00:45:04,000 --> 00:45:07,000
這個都可以作為一些參考

816
00:45:07,000 --> 00:45:10,000
我們這節課

817
00:45:10,000 --> 00:45:13,000
三維建模是一個非常工程的

818
00:45:13,000 --> 00:45:16,000
偏工程的問題

819
00:45:16,000 --> 00:45:19,000
對編程有一定的要求

820
00:45:19,000 --> 00:45:22,000
比如說像我們所用的都是CIA+的編程

821
00:45:22,000 --> 00:45:25,000
也會用到CMake的管理

822
00:45:25,000 --> 00:45:28,000
CMake和GitHub

823
00:45:28,000 --> 00:45:31,000
這些都是做工程

824
00:45:31,000 --> 00:45:34,000
經常用到的一些工具

825
00:45:34,000 --> 00:45:37,000
CIA+編程

826
00:45:37,000 --> 00:45:40,000
要求你首先要看懂代碼

827
00:45:40,000 --> 00:45:43,000
要自己會寫一些基本的函數

828
00:45:43,000 --> 00:45:46,000
因為現在CIA+98之後

829
00:45:46,000 --> 00:45:49,000
CIA+最重要的思想

830
00:45:49,000 --> 00:45:52,000
就是類的思想

831
00:45:52,000 --> 00:45:55,000
所以你要會寫類

832
00:45:55,000 --> 00:45:58,000
然後要知道一些類的基本的應用

833
00:45:58,000 --> 00:46:01,000
比如說像繼承

834
00:46:01,000 --> 00:46:07,000
像模板

835
00:46:07,000 --> 00:46:10,000
模板我們用的比較少

836
00:46:10,000 --> 00:46:13,000
這塊技術

837
00:46:13,000 --> 00:46:16,000
然後呢

838
00:46:16,000 --> 00:46:19,000
也會設計到一點點的設計模式

839
00:46:19,000 --> 00:46:22,000
設計模式其實用的不是很多

840
00:46:22,000 --> 00:46:25,000
我們也沒有單獨的去做一些強調

841
00:46:25,000 --> 00:46:28,000
但是其實如果我個人

842
00:46:28,000 --> 00:46:31,000
來講的話其實CIA+

843
00:46:31,000 --> 00:46:34,000
要學CIA+的話也是有一個逐漸的低聲的過程

844
00:46:34,000 --> 00:46:37,000
比如說第一步

845
00:46:37,000 --> 00:46:40,000
你要了解CIA+的基本語言

846
00:46:40,000 --> 00:46:43,000
它的基本結構

847
00:46:43,000 --> 00:46:46,000
你要會寫類

848
00:46:46,000 --> 00:46:49,000
你要會寫繼承就是CIA+Premium裡面的基本技術

849
00:46:49,000 --> 00:46:52,000
然後再往上進階

850
00:46:52,000 --> 00:46:55,000
你要了解CIA+的一些

851
00:46:55,000 --> 00:46:58,000
基本的一些效益的問題

852
00:46:58,000 --> 00:47:01,000
或者怎麼樣把CIA+寫的比較規範

853
00:47:01,000 --> 00:47:04,000
那麼這裡面就像

854
00:47:04,000 --> 00:47:07,000
有些參考書

855
00:47:07,000 --> 00:47:10,000
像CIA+

856
00:47:10,000 --> 00:47:13,000
Effective CIA+

857
00:47:13,000 --> 00:47:16,000
或是More Effective

858
00:47:16,000 --> 00:47:19,000
這些書都是可以去看一下

859
00:47:19,000 --> 00:47:22,000
然後再往上走

860
00:47:22,000 --> 00:47:25,000
你就需要去設計模式

861
00:47:25,000 --> 00:47:28,000
比如說像單鍵

862
00:47:28,000 --> 00:47:31,000
單鍵的設計模式

863
00:47:31,000 --> 00:47:34,000
然後長音的

864
00:47:34,000 --> 00:47:37,000
像工廠模式

865
00:47:37,000 --> 00:47:40,000
這些長音的模式

866
00:47:40,000 --> 00:47:43,000
掌握了這些之後

867
00:47:43,000 --> 00:47:46,000
你的CIA+基本上就可以有一定的套路了

868
00:47:46,000 --> 00:47:49,000
當然再往上的話更高階層的

869
00:47:49,000 --> 00:47:52,000
更高階的那就是你的架構

870
00:47:52,000 --> 00:47:55,000
比如說長音的MVC什麼架構

871
00:47:55,000 --> 00:47:58,000
Model,View,Control這種寫大型的工程

872
00:47:58,000 --> 00:48:01,000
大家也是這樣一級一級的上去

873
00:48:01,000 --> 00:48:04,000
到了最高層的話

874
00:48:04,000 --> 00:48:07,000
就一個比較全面的瞭解

875
00:48:07,000 --> 00:48:10,000
如果你對設計模式瞭解比較好的話

876
00:48:10,000 --> 00:48:13,000
你可以去看可飛的這個階層代碼

877
00:48:13,000 --> 00:48:16,000
可飛裡面用了14種設計模式

878
00:48:16,000 --> 00:48:19,000
可以去對這去參考一下

879
00:48:19,000 --> 00:48:22,000
當然我們這節課的話

880
00:48:22,000 --> 00:48:25,000
你看完了這節課的代碼

881
00:48:25,000 --> 00:48:28,000
第一個階層可以掌握

882
00:48:28,000 --> 00:48:31,000
絕對可以到第一個階層

883
00:48:31,000 --> 00:48:34,000
長音的CIA+的基本技術基本上都會知道

884
00:48:34,000 --> 00:48:37,000
當然部分的設計模式

885
00:48:37,000 --> 00:48:40,000
也會設計到部分的設計模式

886
00:48:40,000 --> 00:48:43,000
另外我們這個課程

887
00:48:43,000 --> 00:48:46,000
用的是CMake管理的

888
00:48:46,000 --> 00:48:49,000
要求你對CMake會有一些基本的瞭解

889
00:48:49,000 --> 00:48:52,000
比如說怎麼樣用CMake

890
00:48:52,000 --> 00:48:55,000
怎麼樣進行鏈接

891
00:48:55,000 --> 00:48:58,000
怎麼樣去找配置庫

892
00:48:58,000 --> 00:49:01,000
這個是必須的

893
00:49:01,000 --> 00:49:04,000
而且CMake確實有很多的優勢

894
00:49:04,000 --> 00:49:07,000
比如說它是跨平台的

895
00:49:07,000 --> 00:49:10,000
我們的代碼在Linux

896
00:49:10,000 --> 00:49:13,000
Ubuntu和ios系統下

897
00:49:13,000 --> 00:49:16,000
都編譯沒有問題

898
00:49:16,000 --> 00:49:19,000
當然在Windows下還沒有嘗試過

899
00:49:19,000 --> 00:49:22,000
我自己很久也不在Windows下做開發了

900
00:49:22,000 --> 00:49:25,000
所以你用的時候

901
00:49:25,000 --> 00:49:28,000
Windows系統的話也是可以的

902
00:49:28,000 --> 00:49:31,000
只不過會有很多的問題

903
00:49:31,000 --> 00:49:34,000
Linux和ios系統

904
00:49:34,000 --> 00:49:37,000
MacOS系統的話

905
00:49:37,000 --> 00:49:40,000
有問題的話我這邊可以比較

906
00:49:40,000 --> 00:49:43,000
反饋的比較即時

907
00:49:43,000 --> 00:49:46,000
但是Windows下編譯如果有問題的話

908
00:49:46,000 --> 00:49:49,000
我會比較快解決了

909
00:49:49,000 --> 00:49:52,000
然後後面就會要求

910
00:49:52,000 --> 00:49:55,000
一些圖樣處理和鏡頭視覺的基本知識

911
00:49:55,000 --> 00:49:58,000
另外從優化的角度來講的話

912
00:49:58,000 --> 00:50:01,000
像非線性優化

913
00:50:01,000 --> 00:50:04,000
主要是PA裡面

914
00:50:04,000 --> 00:50:07,000
還有T度向降的優化方法

915
00:50:07,000 --> 00:50:10,000
LM的優化方法

916
00:50:10,000 --> 00:50:13,000
這些是需要你掌握的基本知識

917
00:50:13,000 --> 00:50:16,000
現在已經全部放到網站上了

918
00:50:16,000 --> 00:50:19,000
大家可以通過Github面上去下載

919
00:50:19,000 --> 00:50:22,000
然後

920
00:50:22,000 --> 00:50:25,000
我建議大家可以試一下這個軟件

921
00:50:25,000 --> 00:50:28,000
這個軟件

922
00:50:28,000 --> 00:50:31,000
我自己用的比較多

923
00:50:31,000 --> 00:50:34,000
它可以很方便的進行Git的一個配置

924
00:50:34,000 --> 00:50:37,000
可以通過這個軟件直接

925
00:50:37,000 --> 00:50:40,000
將我們這個

926
00:50:40,000 --> 00:50:43,000
控制文件下載下來

927
00:50:43,000 --> 00:50:46,000
而且這個軟件本身它是SIMA配置的

928
00:50:46,000 --> 00:50:49,000
所以用起來會比較方便一些

929
00:50:49,000 --> 00:50:58,000
如果你要用Git的這個版本控制的話

930
00:50:58,000 --> 00:51:01,000
那麼你首先要下載Git

931
00:51:01,000 --> 00:51:04,000
這個應用程序

932
00:51:04,000 --> 00:51:07,000
在Ubuntu和MacOS下都有

933
00:51:07,000 --> 00:51:10,000
你就可以通過Cline的

934
00:51:10,000 --> 00:51:13,000
版本控制裡面Git,Column

935
00:51:13,000 --> 00:51:16,000
然後將這個代碼拷貝到自己的文言夾下

936
00:51:16,000 --> 00:51:22,000
這些課我要講的內容就這麼多

937
00:51:22,000 --> 00:51:25,000
大概就是講了一下文課程裡面的

938
00:51:25,000 --> 00:51:28,000
一些基本的內容

939
00:51:28,000 --> 00:51:31,000
以及跟現在的一些

940
00:51:31,000 --> 00:51:34,000
比較先進的

941
00:51:34,000 --> 00:51:37,000
跟現在的一些深度這些技術的一些關聯

942
00:51:37,000 --> 00:51:40,000
然後我們中間休息一下

943
00:51:40,000 --> 00:51:43,000
後面的話我會

944
00:51:43,000 --> 00:51:46,000
帶著大家把這個代碼去下載和配置一下

945
00:51:46,000 --> 00:51:52,000
有什麼問題的話大家也可以在這個聊天室裡

946
00:51:52,000 --> 00:51:55,000
問一下

947
00:51:55,000 --> 00:51:58,000
(開機聲)

948
00:51:58,000 --> 00:52:01,000
(開機聲)

949
00:52:26,000 --> 00:52:29,000
(開機聲)

950
00:52:29,000 --> 00:52:49,000
(開機聲)

951
00:52:49,000 --> 00:52:52,000
(開機聲)

952
00:52:52,000 --> 00:52:58,000
(開機聲)

953
00:52:58,000 --> 00:53:01,000
(開機聲)

954
00:53:01,000 --> 00:53:04,000
(開機聲)

955
00:53:04,000 --> 00:53:07,000
(開機聲)

956
00:53:07,000 --> 00:53:10,000
(開機聲)

957
00:53:10,000 --> 00:53:13,000
(開機聲)

958
00:53:13,000 --> 00:53:16,000
(開機聲)

959
00:53:16,000 --> 00:53:19,000
(開機聲)

960
00:53:19,000 --> 00:53:22,000
(開機聲)

961
00:53:22,000 --> 00:53:25,000
(開機聲)

962
00:53:25,000 --> 00:53:28,000
(開機聲)

963
00:53:28,000 --> 00:53:31,000
(開機聲)

964
00:53:31,000 --> 00:53:34,000
(開機聲)

965
00:53:34,000 --> 00:53:37,000
(開機聲)

966
00:53:37,000 --> 00:53:40,000
(開機聲)

967
00:53:40,000 --> 00:53:43,000
(開機聲)

968
00:53:43,000 --> 00:53:46,000
(開機聲)

969
00:53:46,000 --> 00:53:49,000
(開機聲)

970
00:53:49,000 --> 00:53:52,000
(開機聲)

971
00:53:52,000 --> 00:53:55,000
(開機聲)

972
00:53:55,000 --> 00:53:58,000
(開機聲)

973
00:53:58,000 --> 00:54:01,000
(開機聲)

974
00:54:01,000 --> 00:54:04,000
(開機聲)

975
00:54:04,000 --> 00:54:07,000
(開機聲)

976
00:54:07,000 --> 00:54:10,000
(開機聲)

977
00:54:10,000 --> 00:54:13,000
(開機聲)

978
00:54:13,000 --> 00:54:16,000
(開機聲)

979
00:54:16,000 --> 00:54:19,000
(開機聲)

980
00:54:19,000 --> 00:54:22,000
(開機聲)

981
00:54:22,000 --> 00:54:25,000
(開機聲)

982
00:54:25,000 --> 00:54:28,000
(開機聲)

983
00:54:28,000 --> 00:54:31,000
(開機聲)

984
00:54:31,000 --> 00:54:34,000
(開機聲)

985
00:54:34,000 --> 00:54:37,000
(開機聲)

986
00:54:37,000 --> 00:54:40,000
(開機聲)

987
00:54:40,000 --> 00:54:43,000
(開機聲)

988
00:54:43,000 --> 00:54:46,000
(開機聲)

989
00:54:46,000 --> 00:54:49,000
(開機聲)

990
00:54:49,000 --> 00:54:52,000
(開機聲)

991
00:54:52,000 --> 00:54:55,000
(開機聲)

992
00:54:55,000 --> 00:54:58,000
(開機聲)

993
00:54:58,000 --> 00:55:01,000
(開機聲)

994
00:55:01,000 --> 00:55:04,000
(開機聲)

995
00:55:04,000 --> 00:55:07,000
(開機聲)

996
00:55:07,000 --> 00:55:10,000
(開機聲)

997
00:55:10,000 --> 00:55:13,000
(開機聲)

998
00:55:13,000 --> 00:55:16,000
(開機聲)

999
00:55:16,000 --> 00:55:19,000
(開機聲)

1000
00:55:19,000 --> 00:55:22,000
(開機聲)

1001
00:55:22,000 --> 00:55:25,000
(開機聲)

1002
00:55:25,000 --> 00:55:28,000
(開機聲)

1003
00:55:28,000 --> 00:55:31,000
(開機聲)

1004
00:55:31,000 --> 00:55:34,000
(開機聲)

1005
00:55:34,000 --> 00:55:37,000
(開機聲)

1006
00:55:37,000 --> 00:55:40,000
(開機聲)

1007
00:55:40,000 --> 00:55:43,000
(開機聲)

1008
00:55:43,000 --> 00:55:46,000
(開機聲)

1009
00:55:46,000 --> 00:55:49,000
(開機聲)

1010
00:55:49,000 --> 00:55:52,000
(開機聲)

1011
00:55:52,000 --> 00:55:55,000
(開機聲)

1012
00:55:55,000 --> 00:55:58,000
(開機聲)

1013
00:55:58,000 --> 00:56:01,000
(開機聲)

1014
00:56:01,000 --> 00:56:04,000
(開機聲)

1015
00:56:04,000 --> 00:56:07,000
(開機聲)

1016
00:56:07,000 --> 00:56:10,000
(開機聲)

1017
00:56:10,000 --> 00:56:13,000
(開機聲)

1018
00:56:13,000 --> 00:56:16,000
(開機聲)

1019
00:56:16,000 --> 00:56:19,000
(開機聲)

1020
00:56:19,000 --> 00:56:22,000
(開機聲)

1021
00:56:22,000 --> 00:56:25,000
(開機聲)

1022
00:56:25,000 --> 00:56:28,000
(開機聲)

1023
00:56:28,000 --> 00:56:31,000
(開機聲)

1024
00:56:31,000 --> 00:56:34,000
(開機聲)

1025
00:56:34,000 --> 00:56:37,000
(開機聲)

1026
00:56:37,000 --> 00:56:40,000
(開機聲)

1027
00:56:40,000 --> 00:56:43,000
(開機聲)

1028
00:56:43,000 --> 00:56:46,000
(開機聲)

1029
00:56:46,000 --> 00:56:49,000
(開機聲)

1030
00:56:49,000 --> 00:56:52,000
(開機聲)

1031
00:56:52,000 --> 00:56:55,000
(開機聲)

1032
00:56:55,000 --> 00:56:58,000
(開機聲)

1033
00:56:58,000 --> 00:57:01,000
(開機聲)

1034
00:57:01,000 --> 00:57:04,000
(開機聲)

1035
00:57:04,000 --> 00:57:07,000
(開機聲)

1036
00:57:07,000 --> 00:57:10,000
(開機聲)

1037
00:57:10,000 --> 00:57:13,000
(開機聲)

1038
00:57:13,000 --> 00:57:16,000
(開機聲)

1039
00:57:16,000 --> 00:57:19,000
(開機聲)

1040
00:57:19,000 --> 00:57:22,000
(開機聲)

1041
00:57:22,000 --> 00:57:25,000
(開機聲)

1042
00:57:25,000 --> 00:57:28,000
(開機聲)

1043
00:57:28,000 --> 00:57:31,000
(開機聲)

1044
00:57:31,000 --> 00:57:34,000
(開機聲)

1045
00:57:34,000 --> 00:57:37,000
(開機聲)

1046
00:57:37,000 --> 00:57:40,000
(開機聲)

1047
00:57:40,000 --> 00:57:43,000
(開機聲)

1048
00:57:43,000 --> 00:57:46,000
(開機聲)

1049
00:57:46,000 --> 00:57:49,000
(開機聲)

1050
00:57:49,000 --> 00:57:52,000
(開機聲)

1051
00:57:52,000 --> 00:57:55,000
(開機聲)

1052
00:57:55,000 --> 00:57:58,000
(開機聲)

1053
00:57:58,000 --> 00:58:01,000
(開機聲)

1054
00:58:01,000 --> 00:58:04,000
(開機聲)

1055
00:58:04,000 --> 00:58:07,000
(開機聲)

1056
00:58:07,000 --> 00:58:10,000
(開機聲)

1057
00:58:10,000 --> 00:58:13,000
(開機聲)

1058
00:58:13,000 --> 00:58:16,000
(開機聲)

1059
00:58:16,000 --> 00:58:19,000
(開機聲)

1060
00:58:19,000 --> 00:58:22,000
(開機聲)

1061
00:58:22,000 --> 00:58:25,000
(開機聲)

1062
00:58:25,000 --> 00:58:28,000
(開機聲)

1063
00:58:28,000 --> 00:58:31,000
(開機聲)

1064
00:58:31,000 --> 00:58:34,000
(開機聲)

1065
00:58:34,000 --> 00:58:37,000
(開機聲)

1066
00:58:37,000 --> 00:58:40,000
(開機聲)

1067
00:58:40,000 --> 00:58:43,000
(開機聲)

1068
00:58:43,000 --> 00:58:46,000
(開機聲)

1069
00:58:46,000 --> 00:58:49,000
(開機聲)

1070
00:58:49,000 --> 00:58:52,000
(開機聲)

1071
00:58:52,000 --> 00:58:55,000
(開機聲)

1072
00:58:55,000 --> 00:58:58,000
(開機聲)

1073
00:58:58,000 --> 00:59:01,000
(開機聲)

1074
00:59:01,000 --> 00:59:04,000
(開機聲)

1075
00:59:04,000 --> 00:59:07,000
(開機聲)

1076
00:59:07,000 --> 00:59:10,000
(開機聲)

1077
00:59:10,000 --> 00:59:13,000
(開機聲)

1078
00:59:13,000 --> 00:59:16,000
(開機聲)

1079
00:59:16,000 --> 00:59:19,000
(開機聲)

1080
00:59:19,000 --> 00:59:22,000
(開機聲)

1081
00:59:22,000 --> 00:59:25,000
(開機聲)

1082
00:59:25,000 --> 00:59:28,000
(開機聲)

1083
00:59:28,000 --> 00:59:31,000
(開機聲)

1084
00:59:31,000 --> 00:59:34,000
(開機聲)

1085
00:59:34,000 --> 00:59:37,000
(開機聲)

1086
00:59:37,000 --> 00:59:40,000
(開機聲)

1087
00:59:40,000 --> 00:59:43,000
(開機聲)

1088
00:59:43,000 --> 00:59:46,000
(開機聲)

1089
00:59:46,000 --> 00:59:49,000
(開機聲)

1090
00:59:49,000 --> 00:59:52,000
(開機聲)

1091
00:59:52,000 --> 00:59:55,000
(開機聲)

1092
00:59:55,000 --> 00:59:58,000
(開機聲)

1093
00:59:58,000 --> 01:00:01,000
(開機聲)

1094
01:00:01,000 --> 01:00:04,000
(開機聲)

1095
01:00:04,000 --> 01:00:07,000
(開機聲)

1096
01:00:07,000 --> 01:00:10,000
(開機聲)

1097
01:00:10,000 --> 01:00:13,000
(開機聲)

1098
01:00:13,000 --> 01:00:16,000
(開機聲)

1099
01:00:16,000 --> 01:00:19,000
(開機聲)

1100
01:00:19,000 --> 01:00:22,000
(開機聲)

1101
01:00:22,000 --> 01:00:25,000
(開機聲)

1102
01:00:25,000 --> 01:00:28,000
(開機聲)

1103
01:00:28,000 --> 01:00:31,000
(開機聲)

1104
01:00:31,000 --> 01:00:34,000
(開機聲)

1105
01:00:34,000 --> 01:00:37,000
(開機聲)

1106
01:00:37,000 --> 01:00:40,000
(開機聲)

1107
01:00:40,000 --> 01:00:43,000
(開機聲)

1108
01:00:43,000 --> 01:00:46,000
(開機聲)

1109
01:00:46,000 --> 01:00:49,000
(開機聲)

1110
01:00:49,000 --> 01:00:52,000
(開機聲)

1111
01:00:52,000 --> 01:00:55,000
(開機聲)

1112
01:00:55,000 --> 01:00:58,000
(開機聲)

1113
01:00:58,000 --> 01:01:01,000
(開機聲)

1114
01:01:01,000 --> 01:01:04,000
(開機聲)

1115
01:01:04,000 --> 01:01:07,000
(開機聲)

1116
01:01:07,000 --> 01:01:10,000
(開機聲)

1117
01:01:10,000 --> 01:01:13,000
(開機聲)

1118
01:01:13,000 --> 01:01:16,000
(開機聲)

1119
01:01:16,000 --> 01:01:19,000
(開機聲)

1120
01:01:19,000 --> 01:01:22,000
(開機聲)

1121
01:01:22,000 --> 01:01:25,000
(開機聲)

1122
01:01:25,000 --> 01:01:28,000
(開機聲)

1123
01:01:28,000 --> 01:01:31,000
(開機聲)

1124
01:01:31,000 --> 01:01:34,000
(開機聲)

1125
01:01:34,000 --> 01:01:37,000
(開機聲)

1126
01:01:37,000 --> 01:01:40,000
(開機聲)

1127
01:01:40,000 --> 01:01:43,000
(開機聲)

1128
01:01:43,000 --> 01:01:46,000
(開機聲)

1129
01:01:46,000 --> 01:01:49,000
(開機聲)

1130
01:01:49,000 --> 01:01:52,000
(開機聲)

1131
01:01:52,000 --> 01:01:55,000
(開機聲)

1132
01:01:55,000 --> 01:01:58,000
(開機聲)

1133
01:01:58,000 --> 01:02:01,000
(開機聲)

1134
01:02:01,000 --> 01:02:04,000
(開機聲)

1135
01:02:04,000 --> 01:02:07,000
(開機聲)

1136
01:02:07,000 --> 01:02:10,000
(開機聲)

1137
01:02:10,000 --> 01:02:13,000
(開機聲)

1138
01:02:13,000 --> 01:02:16,000
(開機聲)

1139
01:02:16,000 --> 01:02:19,000
(開機聲)

1140
01:02:19,000 --> 01:02:22,000
(開機聲)

1141
01:02:22,000 --> 01:02:25,000
(開機聲)

1142
01:02:25,000 --> 01:02:28,000
(開機聲)

1143
01:02:28,000 --> 01:02:31,000
(開機聲)

1144
01:02:31,000 --> 01:02:34,000
(開機聲)

1145
01:02:34,000 --> 01:02:37,000
(開機聲)

1146
01:02:37,000 --> 01:02:40,000
(開機聲)

1147
01:02:40,000 --> 01:02:43,000
(開機聲)

1148
01:02:43,000 --> 01:02:46,000
(開機聲)

1149
01:02:46,000 --> 01:02:49,000
(開機聲)

1150
01:02:49,000 --> 01:02:52,000
(開機聲)

1151
01:02:52,000 --> 01:02:55,000
(開機聲)

1152
01:02:55,000 --> 01:02:58,000
(開機聲)

1153
01:02:58,000 --> 01:03:01,000
(開機聲)

1154
01:03:01,000 --> 01:03:04,000
(開機聲)

1155
01:03:04,000 --> 01:03:07,000
(開機聲)

1156
01:03:07,000 --> 01:03:10,000
(開機聲)

1157
01:03:10,000 --> 01:03:13,000
(開機聲)

1158
01:03:13,000 --> 01:03:16,000
(開機聲)

1159
01:03:16,000 --> 01:03:19,000
(開機聲)

1160
01:03:19,000 --> 01:03:22,000
(開機聲)

1161
01:03:22,000 --> 01:03:25,000
(開機聲)

1162
01:03:25,000 --> 01:03:28,000
(開機聲)

1163
01:03:28,000 --> 01:03:31,000
(開機聲)

1164
01:03:31,000 --> 01:03:34,000
(開機聲)

1165
01:03:34,000 --> 01:03:37,000
(開機聲)

1166
01:03:37,000 --> 01:03:40,000
(開機聲)

1167
01:03:40,000 --> 01:03:43,000
(開機聲)

1168
01:03:43,000 --> 01:03:46,000
(開機聲)

1169
01:03:46,000 --> 01:03:49,000
(開機聲)

1170
01:03:49,000 --> 01:03:52,000
(開機聲)

1171
01:03:52,000 --> 01:03:55,000
(開機聲)

1172
01:03:55,000 --> 01:03:58,000
(開機聲)

1173
01:03:58,000 --> 01:04:01,000
(開機聲)

1174
01:04:01,000 --> 01:04:04,000
(開機聲)

1175
01:04:04,000 --> 01:04:07,000
(開機聲)

1176
01:04:07,000 --> 01:04:10,000
(開機聲)

1177
01:04:10,000 --> 01:04:13,000
(開機聲)

1178
01:04:13,000 --> 01:04:16,000
(開機聲)

1179
01:04:16,000 --> 01:04:19,000
(開機聲)

1180
01:04:19,000 --> 01:04:22,000
(開機聲)

1181
01:04:22,000 --> 01:04:25,000
(開機聲)

1182
01:04:25,000 --> 01:04:28,000
(開機聲)

1183
01:04:28,000 --> 01:04:31,000
(開機聲)

1184
01:04:31,000 --> 01:04:34,000
(開機聲)

1185
01:04:34,000 --> 01:04:37,000
(開機聲)

1186
01:04:37,000 --> 01:04:40,000
(開機聲)

1187
01:04:40,000 --> 01:04:43,000
(開機聲)

1188
01:04:43,000 --> 01:04:46,000
(開機聲)

1189
01:04:46,000 --> 01:04:49,000
(開機聲)

1190
01:04:49,000 --> 01:04:52,000
(開機聲)

1191
01:04:52,000 --> 01:04:55,000
(開機聲)

1192
01:04:55,000 --> 01:04:58,000
(開機聲)

1193
01:04:58,000 --> 01:05:01,000
(開機聲)

1194
01:05:01,000 --> 01:05:04,000
(開機聲)

1195
01:05:04,000 --> 01:05:07,000
(開機聲)

1196
01:05:07,000 --> 01:05:10,000
(開機聲)

1197
01:05:10,000 --> 01:05:13,000
(開機聲)

1198
01:05:13,000 --> 01:05:16,000
(開機聲)

1199
01:05:16,000 --> 01:05:19,000
(開機聲)

1200
01:05:19,000 --> 01:05:22,000
(開機聲)

1201
01:05:22,000 --> 01:05:25,000
(開機聲)

1202
01:05:25,000 --> 01:05:28,000
(開機聲)

1203
01:05:28,000 --> 01:05:31,000
(開機聲)

1204
01:05:31,000 --> 01:05:34,000
(開機聲)

1205
01:05:34,000 --> 01:05:37,000
(開機聲)

1206
01:05:37,000 --> 01:05:40,000
(開機聲)

1207
01:05:40,000 --> 01:05:43,000
(開機聲)

1208
01:05:43,000 --> 01:05:46,000
(開機聲)

1209
01:05:46,000 --> 01:05:49,000
(開機聲)

1210
01:05:49,000 --> 01:05:52,000
(開機聲)

1211
01:05:52,000 --> 01:05:55,000
(開機聲)

1212
01:05:55,000 --> 01:05:58,000
(開機聲)

1213
01:05:58,000 --> 01:06:01,000
(開機聲)

1214
01:06:01,000 --> 01:06:04,000
(開機聲)

1215
01:06:04,000 --> 01:06:07,000
(開機聲)

1216
01:06:07,000 --> 01:06:10,000
(開機聲)

1217
01:06:10,000 --> 01:06:13,000
(開機聲)

1218
01:06:13,000 --> 01:06:16,000
(開機聲)

1219
01:06:16,000 --> 01:06:19,000
(開機聲)

1220
01:06:19,000 --> 01:06:22,000
(開機聲)

1221
01:06:22,000 --> 01:06:25,000
(開機聲)

1222
01:06:25,000 --> 01:06:28,000
(開機聲)

1223
01:06:28,000 --> 01:06:31,000
(開機聲)

1224
01:06:31,000 --> 01:06:34,000
(開機聲)

1225
01:06:34,000 --> 01:06:37,000
(開機聲)

1226
01:06:37,000 --> 01:06:40,000
(開機聲)

1227
01:06:40,000 --> 01:06:43,000
(開機聲)

1228
01:06:43,000 --> 01:06:46,000
(開機聲)

1229
01:06:46,000 --> 01:06:49,000
(開機聲)

1230
01:06:49,000 --> 01:06:52,000
(開機聲)

1231
01:06:52,000 --> 01:06:55,000
(開機聲)

1232
01:06:55,000 --> 01:06:58,000
(開機聲)

1233
01:06:58,000 --> 01:07:01,000
(開機聲)

1234
01:07:01,000 --> 01:07:04,000
(開機聲)

1235
01:07:04,000 --> 01:07:07,000
(開機聲)

1236
01:07:07,000 --> 01:07:10,000
(開機聲)

1237
01:07:10,000 --> 01:07:13,000
(開機聲)

1238
01:07:13,000 --> 01:07:16,000
(開機聲)

1239
01:07:16,000 --> 01:07:19,000
(開機聲)

1240
01:07:19,000 --> 01:07:22,000
(開機聲)

1241
01:07:22,000 --> 01:07:25,000
(開機聲)

1242
01:07:25,000 --> 01:07:28,000
(開機聲)

1243
01:07:28,000 --> 01:07:31,000
(開機聲)

1244
01:07:31,000 --> 01:07:34,000
(開機聲)

1245
01:07:34,000 --> 01:07:37,000
(開機聲)

1246
01:07:37,000 --> 01:07:40,000
(開機聲)

1247
01:07:40,000 --> 01:07:43,000
好,我們來繼續講

1248
01:07:43,000 --> 01:07:45,000
一會兒我們直接講代碼

1249
01:07:45,000 --> 01:07:48,000
剛才跟幾個同學交流了一下

1250
01:07:48,000 --> 01:07:50,000
然後這是我能想到的

1251
01:07:50,000 --> 01:07:53,000
大家對這個3D重建和

1252
01:07:53,000 --> 01:07:56,000
把聲音調大一點

1253
01:07:56,000 --> 01:07:59,000
現在不知道現在有沒有好一些

1254
01:07:59,000 --> 01:08:07,000
把聲音調大一些

1255
01:08:07,000 --> 01:08:10,000
因為那個有時候講課講兩個小時後面的話

1256
01:08:10,000 --> 01:08:13,000
可能聲音就會有些小

1257
01:08:13,000 --> 01:08:16,000
我盡量把聲音放大一下

1258
01:08:16,000 --> 01:08:19,000
剛才跟幾個同學交流

1259
01:08:19,000 --> 01:08:22,000
他們對深度學習和

1260
01:08:22,000 --> 01:08:25,000
3D重建比較感興趣

1261
01:08:25,000 --> 01:08:28,000
確實這個也是當前的一個熱點

1262
01:08:28,000 --> 01:08:31,000
如果現在你對這塊掌握比較好的話

1263
01:08:31,000 --> 01:08:34,000
那麼你出去找工作

1264
01:08:34,000 --> 01:08:37,000
這些公司不管是智能駕駛這些公司

1265
01:08:37,000 --> 01:08:40,000
或者是坐無人車的這些公司

1266
01:08:40,000 --> 01:08:43,000
基本上都很搶手

1267
01:08:43,000 --> 01:08:52,000
這是剛才我跟幾個同學交流一下之後

1268
01:08:52,000 --> 01:08:55,000
我能想到的

1269
01:08:55,000 --> 01:08:58,000
深度學習做一些任務

1270
01:08:58,000 --> 01:09:01,000
比如說深度學習做一些關鍵點的檢測

1271
01:09:01,000 --> 01:09:04,000
目前有做人臉的關鍵點檢測

1272
01:09:04,000 --> 01:09:07,000
有做手指的關鍵點檢測

1273
01:09:07,000 --> 01:09:10,000
也有做人體的23個

1274
01:09:10,000 --> 01:09:13,000
骨節的關鍵點檢測

1275
01:09:13,000 --> 01:09:16,000
做人臉的關鍵點檢測

1276
01:09:16,000 --> 01:09:19,000
可以方便對人臉進行一些編輯

1277
01:09:19,000 --> 01:09:22,000
比如說像換臉這些任務

1278
01:09:22,000 --> 01:09:25,000
都可以通過關鍵點去做

1279
01:09:25,000 --> 01:09:28,000
對手指也是類似的

1280
01:09:28,000 --> 01:09:31,000
可以進行關鍵點檢測

1281
01:09:31,000 --> 01:09:34,000
現在有一些

1282
01:09:34,000 --> 01:09:37,000
有一個數據庫

1283
01:09:37,000 --> 01:09:40,000
針對人體的3DMesh數據庫

1284
01:09:40,000 --> 01:09:43,000
如果大家做過3D人臉成件

1285
01:09:43,000 --> 01:09:46,000
應該知道用這種PCA的方法

1286
01:09:46,000 --> 01:09:49,000
可以把這個數據庫

1287
01:09:49,000 --> 01:09:52,000
通過非監測方法去學一些跡象量

1288
01:09:52,000 --> 01:09:55,000
然後這個跡象量

1289
01:09:55,000 --> 01:09:58,000
對人體或人臉進行一個表達

1290
01:09:58,000 --> 01:10:01,000
也就是說我給你一組系數

1291
01:10:01,000 --> 01:10:04,000
我就通過這些跡象量可以得到

1292
01:10:04,000 --> 01:10:07,000
人臉的三維模型

1293
01:10:07,000 --> 01:10:10,000
當然這個人體的話數據庫比較新

1294
01:10:10,000 --> 01:10:13,000
也就是17年開始的

1295
01:10:13,000 --> 01:10:16,000
那麼我學習這些關鍵點

1296
01:10:16,000 --> 01:10:19,000
我就可以做一些很有意思的任務

1297
01:10:19,000 --> 01:10:22,000
比如說我把3D的

1298
01:10:22,000 --> 01:10:25,000
23個關鍵點

1299
01:10:25,000 --> 01:10:28,000
那麼我通過給你一個人體的圖像

1300
01:10:28,000 --> 01:10:31,000
給你一個人體的一張照片

1301
01:10:31,000 --> 01:10:34,000
我檢測出了23個骨骼點

1302
01:10:34,000 --> 01:10:37,000
那麼我就可以通過3D和2D之間的對應

1303
01:10:37,000 --> 01:10:40,000
然後來恢復

1304
01:10:40,000 --> 01:10:43,000
來得到3D人體的姿態

1305
01:10:43,000 --> 01:10:46,000
同樣的任務也可以用在

1306
01:10:46,000 --> 01:10:49,000
人臉單幅圖像的中間

1307
01:10:49,000 --> 01:10:52,000
為什麼我們說建模要多視角

1308
01:10:52,000 --> 01:10:55,000
一個視角連基本的深度都沒有

1309
01:10:55,000 --> 01:10:58,000
都沒有辦法恢復

1310
01:10:58,000 --> 01:11:01,000
但是對一些特殊的場景

1311
01:11:01,000 --> 01:11:04,000
比如說我有很強的顯眼約束

1312
01:11:04,000 --> 01:11:07,000
像人臉這種我就有很強的顯眼約束

1313
01:11:07,000 --> 01:11:10,000
那麼我剛才說過的就是通過人臉的數據庫

1314
01:11:10,000 --> 01:11:13,000
可以學到一些跡象量

1315
01:11:13,000 --> 01:11:16,000
那是一個人臉的三維模型

1316
01:11:16,000 --> 01:11:19,000
其實就相當於是我有一個很強的顯眼約束

1317
01:11:19,000 --> 01:11:22,000
我優化的目標就是這幾個係數

1318
01:11:22,000 --> 01:11:25,000
然後我再把這個三維模型去投入到圖像上

1319
01:11:25,000 --> 01:11:28,000
通過這些關鍵點之間的

1320
01:11:28,000 --> 01:11:31,000
一個重頭有誤差

1321
01:11:31,000 --> 01:11:34,000
去約束這個重頭有誤差

1322
01:11:34,000 --> 01:11:37,000
然後去對這個跡象量進行約束

1323
01:11:37,000 --> 01:11:40,000
那麼我就可以進行單幅圖像的人臉重建

1324
01:11:40,000 --> 01:11:43,000
這個是一個單幅圖像人臉重建的

1325
01:11:43,000 --> 01:11:46,000
基本的思路

1326
01:11:46,000 --> 01:11:49,000
那原先我在重建的時候我需要手工去標記特徵點

1327
01:11:49,000 --> 01:11:52,000
來一幅圖像手工標記特徵點

1328
01:11:52,000 --> 01:11:55,000
之前也可以用一些技術

1329
01:11:55,000 --> 01:11:58,000
比如像主動輪廓模型去做一些人臉關鍵點的檢測

1330
01:11:58,000 --> 01:12:01,000
但是有了深度學習之後

1331
01:12:01,000 --> 01:12:04,000
我們就可以通過深度學習很穩定的

1332
01:12:04,000 --> 01:12:07,000
檢測出人臉關鍵點

1333
01:12:07,000 --> 01:12:10,000
而且可以通過不同的需要去設計不同的關鍵點的個數

1334
01:12:10,000 --> 01:12:13,000
人臉關鍵點的個數越多

1335
01:12:13,000 --> 01:12:16,000
它檢測到的這個它變形的重建的準確率

1336
01:12:16,000 --> 01:12:19,000
感覺會越高

1337
01:12:19,000 --> 01:12:22,000
所以這個是人臉關鍵

1338
01:12:22,000 --> 01:12:25,000
還有一些應用現在在做3D的

1339
01:12:25,000 --> 01:12:28,000
就是做高精度地圖的一些定位

1340
01:12:28,000 --> 01:12:31,000
也在用這方面的技術

1341
01:12:31,000 --> 01:12:34,000
比如說我先見圖通過Mapping見圖之後

1342
01:12:34,000 --> 01:12:37,000
存儲了一些圖像的關鍵點

1343
01:12:37,000 --> 01:12:40,000
特種點

1344
01:12:40,000 --> 01:12:43,000
然後再來一副圖像的時候我也檢測這些特種點

1345
01:12:43,000 --> 01:12:46,000
然後在這個圖像裡面去做一些匹配

1346
01:12:46,000 --> 01:12:49,000
這個也是現在在用的一些技術

1347
01:12:49,000 --> 01:12:52,000
但是總體來說的話深度學習效率還達不到

1348
01:12:52,000 --> 01:12:55,000
精度還可以但是效率達不到

1349
01:12:55,000 --> 01:12:58,000
就是用深度學習檢測一個特種點的話

1350
01:12:58,000 --> 01:13:01,000
速度會比較慢而且計算的量比較大

1351
01:13:01,000 --> 01:13:04,000
到目前為止呢

1352
01:13:04,000 --> 01:13:07,000
我還在做特種點的檢測

1353
01:13:07,000 --> 01:13:10,000
在做重建

1354
01:13:10,000 --> 01:13:13,000
還沒有見到這樣的工作

1355
01:13:13,000 --> 01:13:16,000
因為我們在做設計到Ziv的時候

1356
01:13:16,000 --> 01:13:19,000
其實它是通用的一種關鍵點

1357
01:13:19,000 --> 01:13:22,000
就是什麼樣的場景都可以

1358
01:13:22,000 --> 01:13:25,000
只要檢測出來我就可以通過方法比較每天的匹配上

1359
01:13:25,000 --> 01:13:28,000
但是深度學習的話還達不到這樣的場景

1360
01:13:28,000 --> 01:13:31,000
因為學習畢竟是依賴數據的

1361
01:13:31,000 --> 01:13:36,000
那麼我們其實就得不到一個很好的效果

1362
01:13:36,000 --> 01:13:41,000
這也是其實這涉及到一個深度學習和統計學的關係

1363
01:13:41,000 --> 01:13:44,000
比如說我能夠用一個公式

1364
01:13:44,000 --> 01:13:47,000
很簡單簡單的表達出

1365
01:13:47,000 --> 01:13:50,000
描述某一項任務

1366
01:13:50,000 --> 01:13:53,000
那麼其實這個時候根本就不需要學習的

1367
01:13:53,000 --> 01:13:56,000
而且它是一個放之四海

1368
01:13:56,000 --> 01:13:59,000
就是接準的一個準則很簡單很有效

1369
01:13:59,000 --> 01:14:03,000
但是如果當我們沒法用公式去描述的時候

1370
01:14:03,000 --> 01:14:07,000
這個時候就要用大量的數據去學習

1371
01:14:07,000 --> 01:14:11,000
所以說我們去學習的任務通常來說都是一些

1372
01:14:11,000 --> 01:14:14,000
沒有明確的表達形式的一些任務

1373
01:14:14,000 --> 01:14:18,000
所以它就會對數據的依賴就會比較廣

1374
01:14:18,000 --> 01:14:24,000
在這種情況下的話尤其3D建模的場景可能都是多種多樣的

1375
01:14:24,000 --> 01:14:27,000
那麼僅靠學習去得到一個穩定的關鍵點

1376
01:14:27,000 --> 01:14:29,000
這個其實還是很有挑戰性的

1377
01:14:29,000 --> 01:14:32,000
但是這裡面其實我簡單列幾個

1378
01:14:32,000 --> 01:14:35,000
除了這個deep point還有deep b.a.

1379
01:14:35,000 --> 01:14:43,000
這是那個彈屏就是加拿大大學的那個彈屏老師組他們做的一個工作

1380
01:14:43,000 --> 01:14:45,000
因為深度學習去做b.a.

1381
01:14:45,000 --> 01:14:48,000
還有deep mvs這個是那個全龍老師組

1382
01:14:48,000 --> 01:14:51,000
就是香港K大學全龍老師組他們做的一個工作

1383
01:14:51,000 --> 01:14:55,000
但deep m這兩個其實都是同源的

1384
01:14:55,000 --> 01:14:59,000
因為彈屏老師也是和那個也是香港K大學出去的

1385
01:14:59,000 --> 01:15:03,000
他們之前是同一個組deep ms也是他們做的一個工作

1386
01:15:03,000 --> 01:15:07,000
還有一個就是用深度學習去做表面重建的

1387
01:15:07,000 --> 01:15:11,000
這個叫應該是叫deep in place function

1388
01:15:11,000 --> 01:15:15,000
好像是我最近看到的在那個運營版的那個

1389
01:15:15,000 --> 01:15:18,000
運營版的文章先掛出來的

1390
01:15:18,000 --> 01:15:20,000
我忘了具體的名字

1391
01:15:20,000 --> 01:15:22,000
我就暫且叫它deep service了

1392
01:15:22,000 --> 01:15:26,000
就是用深度學習去做表面重建的

1393
01:15:26,000 --> 01:15:29,000
其實我們說過就是深度學習

1394
01:15:29,000 --> 01:15:31,000
我之前有這樣的思路

1395
01:15:31,000 --> 01:15:34,000
但是我一直沒有去做這樣的工作

1396
01:15:34,000 --> 01:15:40,000
就是深度學習就是做表面重建的一個很重要的一個救助手段

1397
01:15:40,000 --> 01:15:42,000
就是來得到它的一個隱含數

1398
01:15:42,000 --> 01:15:46,000
隱含數就是物體表面

1399
01:15:46,000 --> 01:15:49,000
物體表面上隱含數的符號距離是0

1400
01:15:49,000 --> 01:15:54,000
然後根據這個距離這個表面的遠近

1401
01:15:54,000 --> 01:15:57,000
去得到一個這樣一個符號距離場

1402
01:15:57,000 --> 01:15:59,000
內部是負號外部是重號

1403
01:15:59,000 --> 01:16:01,000
得到這樣一個符號距離場

1404
01:16:01,000 --> 01:16:05,000
我們就可以恢復相機的這個物體的一個模型

1405
01:16:05,000 --> 01:16:09,000
所以就是用deep service其實就是恢復這樣一個符號距離場

1406
01:16:09,000 --> 01:16:14,000
這個應該我覺得學術的話可以去做一做

1407
01:16:14,000 --> 01:16:17,000
但是實際運營的話我倒是並不是很看好

1408
01:16:17,000 --> 01:16:22,000
然後最後就是一個就是做這個文理圈的一個處理

1409
01:16:22,000 --> 01:16:24,000
比如說用GAN

1410
01:16:24,000 --> 01:16:27,000
用這個對抗網絡去做屈縫的操作

1411
01:16:27,000 --> 01:16:29,000
去做亮度的恢復

1412
01:16:29,000 --> 01:16:31,000
這些都是可以的

1413
01:16:31,000 --> 01:16:33,000
比如說光照的調整

1414
01:16:33,000 --> 01:16:35,000
這些應該都是有工作可以做的

1415
01:16:35,000 --> 01:16:37,000
用GAN去做這個文理圈的處理

1416
01:16:37,000 --> 01:16:40,000
好

1417
01:16:40,000 --> 01:16:43,000
我們講了這些之後

1418
01:16:43,000 --> 01:16:47,000
我們來看一下這一節課的配套的代碼

1419
01:16:49,000 --> 01:16:51,000
再看一下

1420
01:16:51,000 --> 01:16:53,000
我們可以看到這個

1421
01:16:53,000 --> 01:16:55,000
這個就是我們用的這個

1422
01:16:55,000 --> 01:16:57,000
這個就是我們用的這個

1423
01:16:57,000 --> 01:16:59,000
這個就是我們用的這個

1424
01:16:59,000 --> 01:17:01,000
這個就是我們用的這個

1425
01:17:01,000 --> 01:17:03,000
這個就是我們用的這個

1426
01:17:03,000 --> 01:17:05,000
這個就是我們用的這個

1427
01:17:05,000 --> 01:17:07,000
這個就是我們用的這個

1428
01:17:07,000 --> 01:17:09,000
這個就是我們用的這個

1429
01:17:09,000 --> 01:17:11,000
這個就是我們用的這個

1430
01:17:11,000 --> 01:17:13,000
這個就是我們用的這個

1431
01:17:13,000 --> 01:17:15,000
這個就是我們用的這個

1432
01:17:15,000 --> 01:17:17,000
再看一下

1433
01:17:17,000 --> 01:17:19,000
剛才有朋友問說

1434
01:17:19,000 --> 01:17:21,000
3D重建三維建模和計算機視覺裡面

1435
01:17:21,000 --> 01:17:23,000
識別怎麼可以結合

1436
01:17:23,000 --> 01:17:25,000
其實你說到這個地方的話

1437
01:17:25,000 --> 01:17:27,000
其實你說到這個地方的話

1438
01:17:27,000 --> 01:17:29,000
其實我最近在做一些公衆的項目

1439
01:17:29,000 --> 01:17:31,000
其實我最近在做一些公衆的項目

1440
01:17:31,000 --> 01:17:33,000
就是包括我和我之間一些同事也在探討

1441
01:17:33,000 --> 01:17:35,000
就是包括我和我之間一些同事也在探討

1442
01:17:35,000 --> 01:17:37,000
三維重建

1443
01:17:37,000 --> 01:17:39,000
因為現在的識別任務

1444
01:17:39,000 --> 01:17:41,000
都是需要大人的樣本

1445
01:17:41,000 --> 01:17:43,000
樣本去做

1446
01:17:43,000 --> 01:17:45,000
三D建模模型重建出來之後

1447
01:17:45,000 --> 01:17:47,000
三D建模模型重建出來之後

1448
01:17:47,000 --> 01:17:49,000
其實也可以為這個識別去提供

1449
01:17:49,000 --> 01:17:51,000
其實也可以為這個識別去提供

1450
01:17:51,000 --> 01:17:53,000
很多的這樣的樣本

1451
01:17:53,000 --> 01:17:55,000
比如說我們可以做這樣一個

1452
01:17:55,000 --> 01:17:57,000
假設一個場景

1453
01:17:57,000 --> 01:17:59,000
比如說我要識別

1454
01:17:59,000 --> 01:18:01,000
一個水果

1455
01:18:01,000 --> 01:18:03,000
桃子

1456
01:18:03,000 --> 01:18:05,000
那麼我可以把這個桃子的模型

1457
01:18:05,000 --> 01:18:07,000
先重建出來

1458
01:18:07,000 --> 01:18:09,000
重建出來之後

1459
01:18:09,000 --> 01:18:11,000
那麼不同的紋理的變化

1460
01:18:11,000 --> 01:18:13,000
不同的光照的變化

1461
01:18:13,000 --> 01:18:15,000
甚至是這個桃子本身形狀的變化

1462
01:18:15,000 --> 01:18:17,000
都是一些樣本

1463
01:18:17,000 --> 01:18:19,000
就是從不同的相機去觀測

1464
01:18:19,000 --> 01:18:21,000
就是從不同的相機去觀測這個

1465
01:18:21,000 --> 01:18:23,000
桃子它都會生成不同的圖片

1466
01:18:23,000 --> 01:18:25,000
實際上有了這樣一個仿真器之後

1467
01:18:25,000 --> 01:18:27,000
其實這個樣本的數量就會無情多

1468
01:18:27,000 --> 01:18:29,000
因為目前來說

1469
01:18:29,000 --> 01:18:31,000
做深度學習的話還是基於樣本數據

1470
01:18:31,000 --> 01:18:33,000
所以如果

1471
01:18:33,000 --> 01:18:35,000
通過三維建模去做一些

1472
01:18:35,000 --> 01:18:37,000
樣本的話

1473
01:18:37,000 --> 01:18:39,000
就是

1474
01:18:39,000 --> 01:18:41,000
可以很直接的生存

1475
01:18:41,000 --> 01:18:43,000
很多的水源數據

1476
01:18:43,000 --> 01:18:45,000
這也是一個比較直接的應用

1477
01:18:45,000 --> 01:18:47,000
當然就是還有其他的

1478
01:18:47,000 --> 01:18:49,000
一些

1479
01:18:49,000 --> 01:18:51,000
一些方式比如說從3D的

1480
01:18:51,000 --> 01:18:53,000
角度去理解識別

1481
01:18:53,000 --> 01:18:55,000
因為我們本身人看到的這個世界

1482
01:18:55,000 --> 01:18:57,000
本身這個世界

1483
01:18:57,000 --> 01:18:59,000
是三維的只不過我們相機

1484
01:18:59,000 --> 01:19:01,000
去重向的時候去變成一個二維的

1485
01:19:01,000 --> 01:19:03,000
那怎麼樣去從3D的這個

1486
01:19:03,000 --> 01:19:05,000
角度去思考

1487
01:19:05,000 --> 01:19:07,000
因為3D建模的話如果你掌握的比較熟練

1488
01:19:07,000 --> 01:19:09,000
肯定對這個問題了解會比較深刻

1489
01:19:09,000 --> 01:19:11,000
我覺得這也是一個比較好的

1490
01:19:11,000 --> 01:19:13,000
一個方向

1491
01:19:13,000 --> 01:19:21,000
還有一個就是

1492
01:19:21,000 --> 01:19:23,000
說到這個仿真器

1493
01:19:23,000 --> 01:19:25,000
我也是最近在做的一個工作

1494
01:19:25,000 --> 01:19:27,000
就是做Mesh的一個分割

1495
01:19:27,000 --> 01:19:29,000
通過多個視角

1496
01:19:29,000 --> 01:19:31,000
多個視角去分割這個

1497
01:19:31,000 --> 01:19:33,000
Mesh因為我們直接在Mesh上

1498
01:19:33,000 --> 01:19:35,000
做的話目前的方法都不是

1499
01:19:35,000 --> 01:19:37,000
特別的穩定

1500
01:19:37,000 --> 01:19:39,000
包括轉換成點雲的話

1501
01:19:39,000 --> 01:19:41,000
PointNet來做

1502
01:19:41,000 --> 01:19:43,000
PointNet對輸入是有要求的

1503
01:19:43,000 --> 01:19:45,000
1024個或2048個點

1504
01:19:45,000 --> 01:19:47,000
這樣的話就是

1505
01:19:47,000 --> 01:19:49,000
我們一般的一個Mesh都是幾萬個點

1506
01:19:49,000 --> 01:19:51,000
或幾十萬個點這樣來做顯然就不太合適

1507
01:19:51,000 --> 01:19:53,000
或者是用這個JCN

1508
01:19:53,000 --> 01:19:55,000
圖這個捲機

1509
01:19:55,000 --> 01:19:57,000
目前也沒有到了一個特別

1510
01:19:57,000 --> 01:19:59,000
穩定的實用的一個程度

1511
01:19:59,000 --> 01:20:01,000
所以我們能想到的就是用

1512
01:20:01,000 --> 01:20:03,000
多視角的方法通過控制

1513
01:20:03,000 --> 01:20:05,000
相機的一個姿態

1514
01:20:05,000 --> 01:20:07,000
去雙重一些圖片

1515
01:20:07,000 --> 01:20:09,000
然後在圖片上去做一些2D的分割

1516
01:20:09,000 --> 01:20:11,000
然後再把分割的結果

1517
01:20:11,000 --> 01:20:13,000
整合到三維上

1518
01:20:13,000 --> 01:20:15,000
這個是我們目前正在做的一個任務

1519
01:20:15,000 --> 01:20:17,000
當然目前來說有了初步的效果

1520
01:20:17,000 --> 01:20:19,000
初步的效果還不錯

1521
01:20:19,000 --> 01:20:21,000
但是還不是特別

1522
01:20:21,000 --> 01:20:23,000
穩定因為我們的訓練數據比較少

1523
01:20:23,000 --> 01:20:25,000
還有一個就是

1524
01:20:25,000 --> 01:20:27,000
通過不同的渲染的方法

1525
01:20:27,000 --> 01:20:31,000
應該也可以去

1526
01:20:31,000 --> 01:20:33,000
提升一些可辨別的信息

1527
01:20:33,000 --> 01:20:35,000
其實我們在判斷

1528
01:20:35,000 --> 01:20:37,000
深度學習能做到什麼程度

1529
01:20:37,000 --> 01:20:39,000
很簡單的一個方法就是

1530
01:20:39,000 --> 01:20:41,000
就是看人眼能識別到什麼程度

1531
01:20:41,000 --> 01:20:43,000
如果人眼能夠識別出來的話

1532
01:20:43,000 --> 01:20:45,000
那麼基本上深度學習的話

1533
01:20:45,000 --> 01:20:47,000
深度學習

1534
01:20:47,000 --> 01:20:49,000
都是有可能去做的

1535
01:20:49,000 --> 01:20:51,000
但如果說人眼都分不出來的話

1536
01:20:51,000 --> 01:20:53,000
那深度學習肯定是也是解決不了的

1537
01:20:53,000 --> 01:20:55,000
傳統的優化方法

1538
01:20:55,000 --> 01:20:57,000
就是像這個IMG優化方法

1539
01:20:57,000 --> 01:20:59,000
其實我最近也在思考一些問題

1540
01:20:59,000 --> 01:21:01,000
如果大家感興趣的話

1541
01:21:01,000 --> 01:21:03,000
可以一起思考一下

1542
01:21:03,000 --> 01:21:05,000
其實這個深度學習

1543
01:21:05,000 --> 01:21:07,000
也是在做這個

1544
01:21:07,000 --> 01:21:09,000
也是在做

1545
01:21:09,000 --> 01:21:11,000
一個我們知道它常用的這個方法

1546
01:21:11,000 --> 01:21:13,000
就是隨機提度下降

1547
01:21:13,000 --> 01:21:15,000
所以我們就去看

1548
01:21:15,000 --> 01:21:17,000
我們就去看

1549
01:21:17,000 --> 01:21:19,000
我們就去看

1550
01:21:19,000 --> 01:21:21,000
我們就去看

1551
01:21:21,000 --> 01:21:23,000
我們就去看

1552
01:21:23,000 --> 01:21:25,000
這個LM計畫裡面

1553
01:21:25,000 --> 01:21:27,000
我們做的這些能量函數的優化

1554
01:21:27,000 --> 01:21:29,000
它也是一個提度下降

1555
01:21:29,000 --> 01:21:31,000
我不知道大家有沒有思考一下

1556
01:21:31,000 --> 01:21:33,000
這兩個提度下降

1557
01:21:33,000 --> 01:21:35,000
到底有沒有什麼關聯

1558
01:21:35,000 --> 01:21:37,000
它們本質的區別在什麼地方

1559
01:21:37,000 --> 01:21:39,000
如果大家

1560
01:21:39,000 --> 01:21:41,000
有思考的結果的話

1561
01:21:41,000 --> 01:21:43,000
也可以跟我聯繫我們去探討一下

1562
01:21:43,000 --> 01:21:45,000
就這個問題

1563
01:21:45,000 --> 01:21:47,000
我最近一直在想的這個問題

1564
01:21:47,000 --> 01:21:49,000
那如果說

1565
01:21:49,000 --> 01:21:51,000
有沒有

1566
01:21:51,000 --> 01:21:53,000
就是後端的

1567
01:21:53,000 --> 01:21:55,000
過程中

1568
01:21:55,000 --> 01:21:57,000
有沒有可能被深度學習替代

1569
01:21:57,000 --> 01:21:59,000
那麼其實還是回到這個問題上

1570
01:21:59,000 --> 01:22:01,000
你首先要搞清楚

1571
01:22:01,000 --> 01:22:03,000
什麼是可以學習的

1572
01:22:03,000 --> 01:22:05,000
什麼是不可以學習的

1573
01:22:05,000 --> 01:22:07,000
統計的信息是可以學習的

1574
01:22:07,000 --> 01:22:09,000
比如說裡面的一些參數

1575
01:22:09,000 --> 01:22:11,000
我們是可以學

1576
01:22:11,000 --> 01:22:13,000
可能是可以學習的

1577
01:22:13,000 --> 01:22:15,000
但是有一些東西確實是不能學

1578
01:22:15,000 --> 01:22:17,000
所以就是你要想

1579
01:22:17,000 --> 01:22:19,000
找一些可以替代的任務

1580
01:22:19,000 --> 01:22:21,000
那你就跟這個整組去判斷就可以了

1581
01:22:21,000 --> 01:22:29,000
好我們講這麼多

1582
01:22:29,000 --> 01:22:31,000
然後現在來看一下這個

1583
01:22:31,000 --> 01:22:33,000
代碼

1584
01:22:33,000 --> 01:22:37,000
我這個代碼呢放在

1585
01:22:37,000 --> 01:22:41,000
放在這個GitHub上

1586
01:22:41,000 --> 01:22:43,000
這個

1587
01:22:43,000 --> 01:22:45,000
這個地址呢

1588
01:22:45,000 --> 01:22:47,000
這個我在社交上已經

1589
01:22:47,000 --> 01:22:49,000
已經寫到了

1590
01:22:49,000 --> 01:22:51,000
這個地址

1591
01:22:51,000 --> 01:22:55,000
所以這個

1592
01:22:55,000 --> 01:22:57,000
應該不需要

1593
01:22:57,000 --> 01:22:59,000
直接下載文件就行了

1594
01:22:59,000 --> 01:23:01,000
每一次的任務已經在裡面了

1595
01:23:01,000 --> 01:23:03,000
可以大家通過

1596
01:23:03,000 --> 01:23:07,000
下載一個GitHub

1597
01:23:07,000 --> 01:23:09,000
然後直接GitClean

1598
01:23:09,000 --> 01:23:13,000
GitClean一行命令

1599
01:23:13,000 --> 01:23:15,000
這樣就可以直接下載

1600
01:23:15,000 --> 01:23:17,000
我這裡面已經存在了

1601
01:23:17,000 --> 01:23:27,000
通過這個命令

1602
01:23:27,000 --> 01:23:29,000
你可以把這個所有的代碼

1603
01:23:29,000 --> 01:23:31,000
下載到這個

1604
01:23:31,000 --> 01:23:33,000
下載到這個文件夾下

1605
01:23:33,000 --> 01:23:35,000
下載完了之後

1606
01:23:35,000 --> 01:23:37,000
打開你可以看到這樣一個

1607
01:23:37,000 --> 01:23:39,000
架構

1608
01:23:39,000 --> 01:23:41,000
其實我覺得

1609
01:23:41,000 --> 01:23:43,000
通過我們這個課程呢

1610
01:23:43,000 --> 01:23:45,000
你還可以學到一點就是

1611
01:23:45,000 --> 01:23:47,000
我們在常用的一些工程的部署

1612
01:23:47,000 --> 01:23:49,000
工程的文件

1613
01:23:49,000 --> 01:23:51,000
其實我個人比較喜歡

1614
01:23:51,000 --> 01:23:53,000
OpenCV和這個

1615
01:23:53,000 --> 01:23:55,000
PCL就是那個

1616
01:23:55,000 --> 01:23:57,000
點雲的就是點雲處理的

1617
01:23:57,000 --> 01:23:59,000
PointCave Library

1618
01:23:59,000 --> 01:24:01,000
它這些架構

1619
01:24:01,000 --> 01:24:03,000
包括它的一些命名的方式

1620
01:24:03,000 --> 01:24:05,000
這個我覺得都是比較清晰

1621
01:24:05,000 --> 01:24:07,000
比較易學習的

1622
01:24:07,000 --> 01:24:09,000
所以我在

1623
01:24:09,000 --> 01:24:11,000
寫這個框架的時候

1624
01:24:11,000 --> 01:24:13,000
在重新編輯這個框架的時候

1625
01:24:13,000 --> 01:24:15,000
也多多少少參考他們的一些思路

1626
01:24:15,000 --> 01:24:17,000
我們看這個

1627
01:24:17,000 --> 01:24:19,000
這個架構

1628
01:24:19,000 --> 01:24:21,000
這個架構下面有這個

1629
01:24:21,000 --> 01:24:23,000
它用CMake管理的

1630
01:24:23,000 --> 01:24:25,000
然後

1631
01:24:25,000 --> 01:24:27,000
裡面

1632
01:24:27,000 --> 01:24:29,000
會有不同的這些文件夾

1633
01:24:29,000 --> 01:24:31,000
比如Utl它提供的一些

1634
01:24:31,000 --> 01:24:33,000
基本的框架

1635
01:24:33,000 --> 01:24:35,000
Core然後提供基本的數據結構

1636
01:24:35,000 --> 01:24:37,000
Example然後所有的

1637
01:24:37,000 --> 01:24:39,000
我們的任務都在這裡面

1638
01:24:39,000 --> 01:24:41,000
然後CMake這個是用來

1639
01:24:41,000 --> 01:24:43,000
做一些基本的配置的

1640
01:24:43,000 --> 01:24:45,000
尋找庫的時候

1641
01:24:45,000 --> 01:24:47,000
比如說像

1642
01:24:47,000 --> 01:24:49,000
尋找庫的時候需要這樣一些文件

1643
01:24:49,000 --> 01:24:51,000
比如說Fund Engine,Fund TBB

1644
01:24:51,000 --> 01:24:53,000
一般來說

1645
01:24:53,000 --> 01:24:55,000
我們在裝這個CMake

1646
01:24:55,000 --> 01:24:57,000
這個軟件的時候它會自帶很多

1647
01:24:57,000 --> 01:24:59,000
Fund的什麼什麼

1648
01:24:59,000 --> 01:25:01,000
就常用的都會有

1649
01:25:01,000 --> 01:25:03,000
比如說Fund Boost

1650
01:25:03,000 --> 01:25:05,000
當你裝了這個BOOST庫的時候

1651
01:25:05,000 --> 01:25:07,000
它會把這個

1652
01:25:07,000 --> 01:25:09,000
當你裝這個不用裝BOOST

1653
01:25:09,000 --> 01:25:11,000
就是

1654
01:25:11,000 --> 01:25:13,000
你裝CMake之後它常用的

1655
01:25:13,000 --> 01:25:15,000
這些尋找庫的都會在裡面

1656
01:25:15,000 --> 01:25:17,000
比如說Fund

1657
01:25:17,000 --> 01:25:19,000
BOOST這種

1658
01:25:19,000 --> 01:25:21,000
還有這個

1659
01:25:21,000 --> 01:25:23,000
TBB是我們這裡面

1660
01:25:23,000 --> 01:25:25,000
用的

1661
01:25:25,000 --> 01:25:27,000
Fund BOOST,Fund

1662
01:25:27,000 --> 01:25:29,000
OpenCV或者是其他的

1663
01:25:29,000 --> 01:25:31,000
基本的一些常用的庫都會有

1664
01:25:31,000 --> 01:25:33,000
但是有一些沒有

1665
01:25:33,000 --> 01:25:35,000
Fund Engine有時候會出問題

1666
01:25:35,000 --> 01:25:37,000
所以你這時候需要自己放一個

1667
01:25:37,000 --> 01:25:39,000
Engine,CMake在裡面供信一下

1668
01:25:39,000 --> 01:25:41,000
這個裡面CMake

1669
01:25:41,000 --> 01:25:43,000
然後你把你這個CMake的路徑

1670
01:25:43,000 --> 01:25:45,000
放到這個CMake List裡面

1671
01:25:45,000 --> 01:25:47,000
它就會默認的把這些模塊都加在上去

1672
01:25:47,000 --> 01:25:49,000
而這3D Parties

1673
01:25:49,000 --> 01:25:51,000
就是我依賴的一些庫

1674
01:25:51,000 --> 01:25:53,000
我需要自己編譯的

1675
01:25:53,000 --> 01:25:55,000
比如說MRF就是Marcov

1676
01:25:55,000 --> 01:25:57,000
隨機場的優化

1677
01:25:57,000 --> 01:25:59,000
Jflank這是做調試用的

1678
01:25:59,000 --> 01:26:01,000
還有JCO

1679
01:26:01,000 --> 01:26:03,000
這是做碰撞檢測用的

1680
01:26:03,000 --> 01:26:05,000
這是我這個工程裡面用到的

1681
01:26:05,000 --> 01:26:07,000
我都放在這裡面了

1682
01:26:07,000 --> 01:26:09,000
然後其他的就是

1683
01:26:09,000 --> 01:26:11,000
還有一個Math,Math的話是一些基本的數學庫

1684
01:26:11,000 --> 01:26:13,000
包括像亮

1685
01:26:13,000 --> 01:26:15,000
矩陣,四元束

1686
01:26:15,000 --> 01:26:17,000
還有這個

1687
01:26:17,000 --> 01:26:19,000
幾何

1688
01:26:19,000 --> 01:26:21,000
還有這些基本的幾何結構

1689
01:26:21,000 --> 01:26:23,000
線,矩陣,SVD分解

1690
01:26:23,000 --> 01:26:25,000
基本常用的數學運算

1691
01:26:25,000 --> 01:26:27,000
都在這裡面

1692
01:26:27,000 --> 01:26:29,000
然後有了這些基礎之後

1693
01:26:29,000 --> 01:26:34,000
然後就是我們這節課的一些基本的一些架構

1694
01:26:34,000 --> 01:26:36,000
就是那個流程3分之1的流程

1695
01:26:36,000 --> 01:26:37,000
Fetcher

1696
01:26:37,000 --> 01:26:39,000
它就提供了特種檢測

1697
01:26:39,000 --> 01:26:41,000
提供Serve和ZF特種檢測

1698
01:26:41,000 --> 01:26:45,000
然後後面就是一個匹配的方法

1699
01:26:45,000 --> 01:26:47,000
這裡面用到了

1700
01:26:47,000 --> 01:26:49,000
Bolly匹配

1701
01:26:49,000 --> 01:26:51,000
還有最近您的一些

1702
01:26:51,000 --> 01:26:53,000
最近您的一些

1703
01:26:53,000 --> 01:26:55,000
計算的方法

1704
01:26:55,000 --> 01:26:57,000
當然還有一些哈希

1705
01:26:57,000 --> 01:26:59,000
這節課我們沒有講到

1706
01:26:59,000 --> 01:27:01,000
它其實就是一個提速的方法

1707
01:27:01,000 --> 01:27:03,000
Fetcher

1708
01:27:03,000 --> 01:27:05,000
然後後面的話就是一個

1709
01:27:05,000 --> 01:27:07,000
相機幾何的一個約束

1710
01:27:07,000 --> 01:27:09,000
就是全都放在這個

1711
01:27:09,000 --> 01:27:11,000
Sraffle Motion裡面

1712
01:27:11,000 --> 01:27:13,000
這裡面包含的常用的

1713
01:27:13,000 --> 01:27:15,000
就是BA

1714
01:27:15,000 --> 01:27:17,000
還有這個

1715
01:27:17,000 --> 01:27:19,000
對極幾何的約束

1716
01:27:19,000 --> 01:27:21,000
相機的模型

1717
01:27:21,000 --> 01:27:23,000
還有這個Sraffle Motion的框架

1718
01:27:23,000 --> 01:27:25,000
基本上都在這裡面

1719
01:27:25,000 --> 01:27:27,000
它有它的優化方法

1720
01:27:27,000 --> 01:27:29,000
比如說吸收矩陣的優化方法

1721
01:27:29,000 --> 01:27:31,000
吸收的線性方程

1722
01:27:31,000 --> 01:27:33,000
大規模的吸收線性方程優化方法

1723
01:27:33,000 --> 01:27:35,000
都在這裡面

1724
01:27:35,000 --> 01:27:37,000
這個是本節課的一個核心

1725
01:27:37,000 --> 01:27:39,000
其實如果你能夠把這裡面的每個代碼

1726
01:27:39,000 --> 01:27:41,000
全部都看明白掌握了

1727
01:27:41,000 --> 01:27:45,000
然後能把裡面的相關公式推導出來

1728
01:27:45,000 --> 01:27:47,000
其實

1729
01:27:47,000 --> 01:27:49,000
基本上

1730
01:27:49,000 --> 01:27:51,000
不管是三維建模也好

1731
01:27:51,000 --> 01:27:53,000
不管是Slam也好

1732
01:27:53,000 --> 01:27:55,000
基本上就入階了

1733
01:27:55,000 --> 01:27:57,000
基本上知識已經掌握了

1734
01:27:57,000 --> 01:27:59,000
然後這個Sraffle Motion之後

1735
01:27:59,000 --> 01:28:01,000
有一個MVS

1736
01:28:01,000 --> 01:28:03,000
就是重蜜點雲的一個重建

1737
01:28:03,000 --> 01:28:07,000
MVS是用了深度圖的約束

1738
01:28:07,000 --> 01:28:11,000
實際上用的是深度圖重建的思路

1739
01:28:11,000 --> 01:28:15,000
MVS現在是目前計算量最大的一個過程

1740
01:28:15,000 --> 01:28:19,000
而且現在也很難去做到一個事實

1741
01:28:19,000 --> 01:28:21,000
所以我說就是用3D約束去做

1742
01:28:21,000 --> 01:28:25,000
這個基於深度學習的深度估計

1743
01:28:25,000 --> 01:28:27,000
倒是有可能解決這個問題

1744
01:28:27,000 --> 01:28:29,000
但前期是這個深度估計做的比較準

1745
01:28:29,000 --> 01:28:31,000
如果是能做的比較準的話

1746
01:28:31,000 --> 01:28:33,000
那麼這個問題倒是可以解決

1747
01:28:33,000 --> 01:28:37,000
那我們就不需要通過這麼複雜的匹配方法

1748
01:28:37,000 --> 01:28:39,000
去生長的這樣一個匹配方法

1749
01:28:39,000 --> 01:28:43,000
去做每個像素的一個多視角的一個匹配

1750
01:28:43,000 --> 01:28:45,000
如果說有一天真的這個深度學習

1751
01:28:45,000 --> 01:28:47,000
深度估計能夠做的比較準確

1752
01:28:47,000 --> 01:28:49,000
這個真的是有可能

1753
01:28:49,000 --> 01:28:51,000
實施的重建

1754
01:28:51,000 --> 01:28:53,000
還有就是這個Surface

1755
01:28:53,000 --> 01:28:57,000
Surface的話就是來做重新點的重建

1756
01:28:57,000 --> 01:28:59,000
這裡面用到一個比較複雜的數據結構

1757
01:28:59,000 --> 01:29:01,000
Octree 8X數

1758
01:29:01,000 --> 01:29:05,000
4X數,2X數大家應該很熟悉

1759
01:29:05,000 --> 01:29:07,000
再往上的話就是4X數

1760
01:29:07,000 --> 01:29:09,000
4X數還是一個二維檔

1761
01:29:09,000 --> 01:29:11,000
然後再往上就是8X數

1762
01:29:11,000 --> 01:29:13,000
這個是非常非常考驗你的想像能力

1763
01:29:13,000 --> 01:29:15,000
所以你可能會想到

1764
01:29:15,000 --> 01:29:19,000
再往上就是8X數,這個是非常非常考驗你的想像能力的

1765
01:29:19,000 --> 01:29:21,000
還有編程能力的

1766
01:29:21,000 --> 01:29:23,000
就是怎麼樣構建8X數

1767
01:29:23,000 --> 01:29:25,000
怎麼樣進行8X數的編例

1768
01:29:25,000 --> 01:29:29,000
這個頂點的,每個節點的一個構建

1769
01:29:29,000 --> 01:29:35,000
節點的局部的索引和全局的索引的一個計算

1770
01:29:35,000 --> 01:29:37,000
這一塊下來之後

1771
01:29:37,000 --> 01:29:41,000
我覺得你的數據結構基本上就可以差不多了

1772
01:29:41,000 --> 01:29:43,000
至少數字一塊的數據結構就差不多了

1773
01:29:45,000 --> 01:29:47,000
好

1774
01:29:47,000 --> 01:30:05,000
然後Cephas後面就是

1775
01:30:05,000 --> 01:30:07,000
就是這個

1776
01:30:07,000 --> 01:30:09,000
文理的一個重建

1777
01:30:09,000 --> 01:30:11,000
文理的創建與編輯

1778
01:30:11,000 --> 01:30:13,000
這裡面也包含著好多的技術路線

1779
01:30:13,000 --> 01:30:15,000
比如說

1780
01:30:15,000 --> 01:30:17,000
就是這個

1781
01:30:17,000 --> 01:30:19,000
馬爾科夫廠的一個

1782
01:30:19,000 --> 01:30:21,000
基於馬爾科夫廠的一個優化

1783
01:30:21,000 --> 01:30:23,000
就是我要把這些

1784
01:30:23,000 --> 01:30:25,000
每個頂點對應不同的視角

1785
01:30:25,000 --> 01:30:27,000
怎麼樣給每個頂點選一個最佳的一個視角

1786
01:30:27,000 --> 01:30:31,000
也包含著全局的一個非限性的優化

1787
01:30:31,000 --> 01:30:33,000
還包含著這個

1788
01:30:33,000 --> 01:30:35,000
博松的一個重建

1789
01:30:35,000 --> 01:30:37,000
博松的編輯

1790
01:30:37,000 --> 01:30:39,000
博松編輯主要是

1791
01:30:39,000 --> 01:30:41,000
圖像融合

1792
01:30:41,000 --> 01:30:43,000
怎麼樣把兩幅圖像融合在一起

1793
01:30:43,000 --> 01:30:45,000
然後又沒有縫隙

1794
01:30:45,000 --> 01:30:47,000
這個是博松編輯

1795
01:30:47,000 --> 01:30:49,000
需要做的一個事情

1796
01:30:49,000 --> 01:30:51,000
所以文理重建裡面也有三個技術點

1797
01:30:51,000 --> 01:30:53,000
這三個技術點做完之後

1798
01:30:53,000 --> 01:30:57,000
你就可以做好多的應用

1799
01:30:57,000 --> 01:30:59,000
比如說做換臉

1800
01:30:59,000 --> 01:31:01,000
比如說做換臉我要把一個人的人臉

1801
01:31:01,000 --> 01:31:03,000
換到另一個人的人臉上

1802
01:31:03,000 --> 01:31:05,000
那你直接換上去之後

1803
01:31:05,000 --> 01:31:07,000
它肯定會有縫隙

1804
01:31:07,000 --> 01:31:09,000
但是博松的計算量很大

1805
01:31:09,000 --> 01:31:11,000
每個像素都是一個位置量

1806
01:31:11,000 --> 01:31:13,000
所以說如果你是一個1000x1000的像素

1807
01:31:13,000 --> 01:31:15,000
你想想它有多少的位置量

1808
01:31:15,000 --> 01:31:17,000
這個過程就很慢

1809
01:31:17,000 --> 01:31:19,000
所以怎麼辦呢

1810
01:31:19,000 --> 01:31:21,000
要想知道解決方法的話

1811
01:31:21,000 --> 01:31:23,000
你就看一下我們這節課的

1812
01:31:23,000 --> 01:31:25,000
這個技術路線

1813
01:31:25,000 --> 01:31:27,000
我們這節課是怎麼樣

1814
01:31:27,000 --> 01:31:29,000
去做一個很快速的這樣一個編輯的

1815
01:31:29,000 --> 01:31:39,000
這個就是一個代碼的整體的一個架構

1816
01:31:39,000 --> 01:31:41,000
下載下來之後

1817
01:31:41,000 --> 01:31:43,000
你就可以去用這個Cline

1818
01:31:43,000 --> 01:31:45,000
我比較喜歡用Cline

1819
01:31:45,000 --> 01:31:47,000
如果你不用Cline

1820
01:31:47,000 --> 01:31:49,000
只是想運行的話

1821
01:31:49,000 --> 01:31:51,000
也可以一般來說

1822
01:31:51,000 --> 01:31:53,000
用Cmake管理的所有的軟件

1823
01:31:53,000 --> 01:31:55,000
你都可以通過這種方式編輯

1824
01:31:55,000 --> 01:31:57,000
比如說

1825
01:31:57,000 --> 01:31:59,000
進去之後

1826
01:31:59,000 --> 01:32:01,000
進到這個文件夾裡面

1827
01:32:01,000 --> 01:32:05,000
基本上我們現在用的這些

1828
01:32:05,000 --> 01:32:07,000
Linux或者ROS下載的酷

1829
01:32:07,000 --> 01:32:09,000
大部分

1830
01:32:09,000 --> 01:32:11,000
絕大部分都是用Cmake管理的

1831
01:32:11,000 --> 01:32:13,000
所有的用Cmake管理的

1832
01:32:13,000 --> 01:32:15,000
怎麼判斷用Cmake管理呢

1833
01:32:15,000 --> 01:32:17,000
就是打開解壓之後

1834
01:32:17,000 --> 01:32:19,000
就有一個Cmake list

1835
01:32:19,000 --> 01:32:21,000
這樣一個文件

1836
01:32:21,000 --> 01:32:23,000
這個時候你就可以用Cmake

1837
01:32:23,000 --> 01:32:25,000
去編譯

1838
01:32:25,000 --> 01:32:27,000
編譯這個酷

1839
01:32:27,000 --> 01:32:29,000
編譯的方法就是

1840
01:32:29,000 --> 01:32:31,000
進到這個文件夾裡面

1841
01:32:31,000 --> 01:32:35,000
存進一個文件夾

1842
01:32:35,000 --> 01:32:37,000
必要的文件夾

1843
01:32:37,000 --> 01:32:39,000
然後進行一個編譯

1844
01:32:39,000 --> 01:32:41,000
當然也可以提供一些常用的參數

1845
01:32:41,000 --> 01:32:43,000
比如說

1846
01:32:43,000 --> 01:32:45,000
我要編譯

1847
01:32:45,000 --> 01:32:49,000
編譯release模型

1848
01:32:49,000 --> 01:32:51,000
release模型

1849
01:32:51,000 --> 01:33:01,000
刷了一個字幕

1850
01:33:01,000 --> 01:33:07,000
我要編譯release模型

1851
01:33:07,000 --> 01:33:09,000
那麽我就可以

1852
01:33:09,000 --> 01:33:11,000
這樣就是編譯出來的

1853
01:33:11,000 --> 01:33:13,000
release模型

1854
01:33:13,000 --> 01:33:15,000
如果是在

1855
01:33:15,000 --> 01:33:17,000
Linux下的話

1856
01:33:17,000 --> 01:33:19,000
就是編譯出來的

1857
01:33:19,000 --> 01:33:21,000
就是

1858
01:33:21,000 --> 01:33:23,000
在Linux下的話

1859
01:33:23,000 --> 01:33:25,000
就是編譯出來

1860
01:33:25,000 --> 01:33:27,000
直接是用make文件

1861
01:33:27,000 --> 01:33:29,000
直接用make就可以進行

1862
01:33:29,000 --> 01:33:31,000
ROS下也是一樣的

1863
01:33:31,000 --> 01:33:33,000
make就可以直接

1864
01:33:33,000 --> 01:33:35,000
這個文件進行

1865
01:33:35,000 --> 01:33:37,000
這個文件進行編譯

1866
01:33:37,000 --> 01:33:39,000
當然如果要進行一個多信息

1867
01:33:39,000 --> 01:33:41,000
編譯的話

1868
01:33:41,000 --> 01:33:43,000
就make4j8+這樣一個命令

1869
01:33:43,000 --> 01:33:45,000
那麽就可以編譯成可視用文件

1870
01:33:45,000 --> 01:33:47,000
在Windows下的話你用cmake

1871
01:33:47,000 --> 01:33:49,000
而且你選的是

1872
01:33:49,000 --> 01:33:51,000
編譯器,選的是VS的話

1873
01:33:51,000 --> 01:33:53,000
那麽你編譯出來就是一個

1874
01:33:53,000 --> 01:33:55,000
SLN的一個

1875
01:33:55,000 --> 01:33:57,000
解決方案的文件

1876
01:33:57,000 --> 01:33:59,000
你打開之後,然後就直接可以

1877
01:33:59,000 --> 01:34:01,000
用VS相關的版本

1878
01:34:01,000 --> 01:34:03,000
然後進行一個管理

1879
01:34:03,000 --> 01:34:07,000
其實我公司推薦的是用Cline

1880
01:34:07,000 --> 01:34:09,000
Cline這個軟件

1881
01:34:09,000 --> 01:34:11,000
它本身就是用cmake管理的

1882
01:34:11,000 --> 01:34:13,000
所以你打開之後

1883
01:34:13,000 --> 01:34:15,000
就可以看到是這樣的一個界面

1884
01:34:15,000 --> 01:34:19,000
每個模塊都很清楚

1885
01:34:19,000 --> 01:34:21,000
而且它

1886
01:34:21,000 --> 01:34:23,000
不管是做一些

1887
01:34:23,000 --> 01:34:25,000
文件的

1888
01:34:25,000 --> 01:34:27,000
就是編列名的公改

1889
01:34:27,000 --> 01:34:29,000
都特別方便

1890
01:34:29,000 --> 01:34:31,000
比如說我要公改的話

1891
01:34:31,000 --> 01:34:33,000
refactor就是改它的名字

1892
01:34:33,000 --> 01:34:35,000
它會自動的把所有的這些位置都進行一個

1893
01:34:35,000 --> 01:34:37,000
名字的公改

1894
01:34:37,000 --> 01:34:39,000
當然你要用cmake添加一些文件的時候

1895
01:34:39,000 --> 01:34:41,000
也很方便

1896
01:34:41,000 --> 01:34:43,000
我現在就用cmake的

1897
01:34:43,000 --> 01:34:45,000
一個總共的工程

1898
01:34:45,000 --> 01:34:47,000
project表示這個工程的名字

1899
01:34:47,000 --> 01:34:49,000
然後

1900
01:34:49,000 --> 01:34:51,000
剛才我講過了

1901
01:34:51,000 --> 01:34:53,000
有一些酷的配置

1902
01:34:53,000 --> 01:34:55,000
放你的cmake

1903
01:34:55,000 --> 01:34:57,000
需要你自己去添加一些文件

1904
01:34:57,000 --> 01:34:59,000
那麽這一句話的

1905
01:34:59,000 --> 01:35:01,000
作用就是把cmake的

1906
01:35:01,000 --> 01:35:03,000
路徑去加到這個工程裏面

1907
01:35:03,000 --> 01:35:05,000
那麽它加上這句話之後

1908
01:35:05,000 --> 01:35:07,000
它就會自動的訪問cmake文件家

1909
01:35:07,000 --> 01:35:09,000
下面的這兩個文件

1910
01:35:09,000 --> 01:35:11,000
如果我要去找engine庫的話

1911
01:35:11,000 --> 01:35:13,000
那麽它就會自動的定義這個文件

1912
01:35:13,000 --> 01:35:15,000
說到定義engine庫

1913
01:35:15,000 --> 01:35:17,000
下面就是當我來找一個庫的時候

1914
01:35:17,000 --> 01:35:19,000
就是用這個函數

1915
01:35:19,000 --> 01:35:21,000
FundPankageEngine

1916
01:35:21,000 --> 01:35:23,000
比如說我要找engine庫

1917
01:35:23,000 --> 01:35:25,000
就是engine

1918
01:35:25,000 --> 01:35:27,000
所以你會看到

1919
01:35:27,000 --> 01:35:29,000
這個文件的名字

1920
01:35:29,000 --> 01:35:31,000
Fund後面這個名字

1921
01:35:31,000 --> 01:35:33,000
一般就是我要找到

1922
01:35:33,000 --> 01:35:35,000
FundPankage後面的這個名字

1923
01:35:35,000 --> 01:35:37,000
它倆是一樣的

1924
01:35:37,000 --> 01:35:39,000
然後這個required

1925
01:35:39,000 --> 01:35:41,000
就表示我這個庫是必須的

1926
01:35:41,000 --> 01:35:43,000
如果我加了這個關鍵詞

1927
01:35:43,000 --> 01:35:45,000
那麽當我找不到

1928
01:35:45,000 --> 01:35:47,000
從我這個系統文件裏面找不到

1929
01:35:47,000 --> 01:35:49,000
這個庫的時候它就會報錯

1930
01:35:49,000 --> 01:35:51,000
那如果我不加這個詞的話

1931
01:35:51,000 --> 01:35:53,000
那就說我找不到的時候

1932
01:35:53,000 --> 01:35:55,000
我

1933
01:35:55,000 --> 01:35:57,000
就不會報錯

1934
01:35:57,000 --> 01:35:59,000
不會報錯

1935
01:35:59,000 --> 01:36:01,000
如果是你必須的

1936
01:36:01,000 --> 01:36:03,000
這個庫是必須的

1937
01:36:03,000 --> 01:36:05,000
那麼就建議你加上這個關鍵詞

1938
01:36:05,000 --> 01:36:07,000
說到這裏的話

1939
01:36:07,000 --> 01:36:09,000
我再講一下這個FundPankage的

1940
01:36:09,000 --> 01:36:11,000
工作的原理

1941
01:36:11,000 --> 01:36:13,000
當我

1942
01:36:13,000 --> 01:36:15,000
運行這個命令的時候

1943
01:36:15,000 --> 01:36:17,000
它就會

1944
01:36:17,000 --> 01:36:19,000
當我這個FundPankage運行命令的時候

1945
01:36:19,000 --> 01:36:21,000
它就會自動的找

1946
01:36:21,000 --> 01:36:23,000
這個FundEngine這個CMake

1947
01:36:23,000 --> 01:36:25,000
這個文件

1948
01:36:25,000 --> 01:36:27,000
這裏面會提供一些

1949
01:36:27,000 --> 01:36:29,000
常用的一些

1950
01:36:29,000 --> 01:36:31,000
搜索路徑

1951
01:36:31,000 --> 01:36:33,000
比如說這裏面會有一些搜索路徑

1952
01:36:33,000 --> 01:36:35,000
然後我就會通過這裏面

1953
01:36:35,000 --> 01:36:37,000
設置的一些搜索路徑

1954
01:36:37,000 --> 01:36:39,000
比如說Optical Local User Local這些

1955
01:36:39,000 --> 01:36:41,000
我們常應的

1956
01:36:41,000 --> 01:36:43,000
通過Linux

1957
01:36:43,000 --> 01:36:45,000
Linux下如果我們

1958
01:36:45,000 --> 01:36:47,000
通過Sodo APT

1959
01:36:47,000 --> 01:36:49,000
Sodo命令安裝的

1960
01:36:49,000 --> 01:36:51,000
文件一般都是在這個

1961
01:36:51,000 --> 01:36:53,000
User裡面

1962
01:36:53,000 --> 01:36:55,000
如果我們是自己編譯安裝的一般是在User Local裏面

1963
01:36:55,000 --> 01:36:57,000
這是我們常用的

1964
01:36:57,000 --> 01:36:59,000
這個路徑它會從這裏面去

1965
01:36:59,000 --> 01:37:01,000
搜索一些相關的文件

1966
01:37:01,000 --> 01:37:03,000
然後再調整這個庫所在的位置

1967
01:37:03,000 --> 01:37:05,000
所以當我們

1968
01:37:05,000 --> 01:37:07,000
調整這個命令之後

1969
01:37:07,000 --> 01:37:09,000
它其實是在自動的

1970
01:37:09,000 --> 01:37:11,000
搜索這個機器上

1971
01:37:11,000 --> 01:37:13,000
你的這個機器上的相關的

1972
01:37:13,000 --> 01:37:15,000
庫的位置

1973
01:37:15,000 --> 01:37:17,000
搜索到了之後呢

1974
01:37:17,000 --> 01:37:19,000
比如說Engine Included

1975
01:37:19,000 --> 01:37:21,000
就表示這個庫

1976
01:37:21,000 --> 01:37:23,000
就表示它這個圖文件的位置

1977
01:37:23,000 --> 01:37:25,000
當然還有相關的

1978
01:37:25,000 --> 01:37:27,000
也會得到這個Library的位置

1979
01:37:27,000 --> 01:37:29,000
只不過這個Engine這個庫

1980
01:37:29,000 --> 01:37:31,000
就是它沒有這個Lib文件

1981
01:37:31,000 --> 01:37:33,000
所以它只要

1982
01:37:33,000 --> 01:37:35,000
Included上就可以了

1983
01:37:35,000 --> 01:37:37,000
然後添加一些常用的

1984
01:37:37,000 --> 01:37:39,000
Engine的一些

1985
01:37:39,000 --> 01:37:41,000
紅六翼

1986
01:37:41,000 --> 01:37:43,000
可以自己默認添加上

1987
01:37:43,000 --> 01:37:45,000
那這個時候呢就是你的這個Engine

1988
01:37:45,000 --> 01:37:47,000
就鏈接到了這個工程裏面

1989
01:37:47,000 --> 01:37:49,000
這裏面提供了

1990
01:37:49,000 --> 01:37:51,000
一些基本的設置

1991
01:37:51,000 --> 01:37:53,000
比如說我要求我的工程

1992
01:37:53,000 --> 01:37:55,000
文件是Syncios C++11的

1993
01:37:55,000 --> 01:37:57,000
那麽你就把這個C++11

1994
01:37:57,000 --> 01:37:59,000
加上

1995
01:37:59,000 --> 01:38:01,000
還有我要求這個編譯的

1996
01:38:01,000 --> 01:38:03,000
這個一些參數

1997
01:38:03,000 --> 01:38:05,000
比如說FPSPIC

1998
01:38:05,000 --> 01:38:07,000
當我們不加這個時候就有的時候編譯會報錯

1999
01:38:07,000 --> 01:38:09,000
所以這個會提示你添加

2000
01:38:09,000 --> 01:38:11,000
那麽你就要把它添加到這個Semic的

2001
01:38:11,000 --> 01:38:13,000
一些標誌服務裏面

2002
01:38:13,000 --> 01:38:15,000
好,添加完了之後呢

2003
01:38:15,000 --> 01:38:17,000
那麽我們就下面

2004
01:38:17,000 --> 01:38:19,000
要開始進行編譯

2005
01:38:19,000 --> 01:38:21,000
需要進行編譯這幾個

2006
01:38:21,000 --> 01:38:23,000
除了這幾個模塊之外

2007
01:38:23,000 --> 01:38:25,000
還有這個第三方的E-Log庫

2008
01:38:25,000 --> 01:38:27,000
剛才介紹的這幾個

2009
01:38:27,000 --> 01:38:29,000
比如說MRF

2010
01:38:29,000 --> 01:38:31,000
還有這個

2011
01:38:31,000 --> 01:38:33,000
碰撞檢測的

2012
01:38:33,000 --> 01:38:35,000
還有這個,這也是一個圖優化的

2013
01:38:35,000 --> 01:38:37,000
這個MARKV一個圖優,快速的圖優化的

2014
01:38:37,000 --> 01:38:39,000
我們看每一個

2015
01:38:39,000 --> 01:38:41,000
框架裏面,比如說這個Core

2016
01:38:41,000 --> 01:38:43,000
這個圖文件裏面我們打開

2017
01:38:43,000 --> 01:38:45,000
我們打開一看

2018
01:38:45,000 --> 01:38:47,000
它也是有好多的這個

2019
01:38:47,000 --> 01:38:49,000
就是

2020
01:38:49,000 --> 01:38:51,000
就是這個

2021
01:38:51,000 --> 01:38:53,000
原文件或圖文件

2022
01:38:53,000 --> 01:38:55,000
然後也採用了一個Semic進行管理

2023
01:38:55,000 --> 01:38:57,000
當然這裏面每個框

2024
01:38:57,000 --> 01:38:59,000
都是一個,我要把它編譯成一個

2025
01:38:59,000 --> 01:39:01,000
庫

2026
01:39:01,000 --> 01:39:03,000
比如說在Windows下編譯成Lib文件

2027
01:39:03,000 --> 01:39:05,000
在這個

2028
01:39:05,000 --> 01:39:07,000
Linux下編譯成.so文件

2029
01:39:07,000 --> 01:39:09,000
當然在MARKVS下

2030
01:39:09,000 --> 01:39:11,000
編譯成這個

2031
01:39:11,000 --> 01:39:13,000
另外一種

2032
01:39:13,000 --> 01:39:15,000
另外一種

2033
01:39:15,000 --> 01:39:17,000
然後每一個

2034
01:39:17,000 --> 01:39:19,000
裏面,你看

2035
01:39:19,000 --> 01:39:21,000
這就是

2036
01:39:21,000 --> 01:39:23,000
我編譯的一個方法

2037
01:39:23,000 --> 01:39:27,000
Project

2038
01:39:27,000 --> 01:39:29,000
這是表示我要編譯的

2039
01:39:29,000 --> 01:39:31,000
那個庫的名字

2040
01:39:31,000 --> 01:39:33,000
這裏面也是提供了一些基本的設置

2041
01:39:33,000 --> 01:39:35,000
然後這裏面要找的一些庫

2042
01:39:35,000 --> 01:39:37,000
比如說這裏面圍了PNG

2043
01:39:37,000 --> 01:39:39,000
GPAC, TRF

2044
01:39:39,000 --> 01:39:41,000
這些都要

2045
01:39:41,000 --> 01:39:43,000
事先去安裝一下

2046
01:39:43,000 --> 01:39:45,000
安裝在你的機器上

2047
01:39:45,000 --> 01:39:49,000
其實安裝方式

2048
01:39:49,000 --> 01:39:51,000
說到這個庫的話

2049
01:39:51,000 --> 01:39:53,000
安裝的Ellacool的話

2050
01:39:53,000 --> 01:39:55,000
我這裏會有一個文件

2051
01:39:55,000 --> 01:39:57,000
就是我之前在上節課的時候

2052
01:39:57,000 --> 01:39:59,000
寫的一個文件,就是怎麼樣配置

2053
01:39:59,000 --> 01:40:03,000
如果大家遇到一些

2054
01:40:03,000 --> 01:40:05,000
問題的話

2055
01:40:05,000 --> 01:40:07,000
這個文件的話,回頭我會端入到新的課程裏面

2056
01:40:07,000 --> 01:40:09,000
如果遇到

2057
01:40:09,000 --> 01:40:11,000
問題的話,其實

2058
01:40:11,000 --> 01:40:13,000
解決方法

2059
01:40:13,000 --> 01:40:15,000
也都很簡單

2060
01:40:15,000 --> 01:40:17,000
這個剛才

2061
01:40:17,000 --> 01:40:19,000
我們編譯的已經編譯完了

2062
01:40:19,000 --> 01:40:21,000
然後你在裡面

2063
01:40:21,000 --> 01:40:23,000
在你必要的文件裏面

2064
01:40:23,000 --> 01:40:25,000
就可以看到這個

2065
01:40:25,000 --> 01:40:27,000
相關的一些庫

2066
01:40:27,000 --> 01:40:29,000
相關的一些庫和

2067
01:40:29,000 --> 01:40:31,000
可執行文件

2068
01:40:31,000 --> 01:40:33,000
比如說在

2069
01:40:33,000 --> 01:40:39,000
Task1

2070
01:40:39,000 --> 01:40:41,000
就可以看到

2071
01:40:41,000 --> 01:40:43,000
Task1

2072
01:40:43,000 --> 01:40:45,000
Task1

2073
01:40:45,000 --> 01:40:47,000
Taskfetcher

2074
01:40:47,000 --> 01:40:49,000
這兩個都是可執行文件

2075
01:40:49,000 --> 01:40:51,000
這個就表示編譯成功了

2076
01:40:51,000 --> 01:40:53,000
下面我們說到

2077
01:40:53,000 --> 01:40:55,000
Ellacool

2078
01:40:55,000 --> 01:40:57,000
大家怎麽去裝Ellacool

2079
01:40:57,000 --> 01:40:59,000
一般來說在Windows

2080
01:40:59,000 --> 01:41:01,000
MacOS和Ubuntu下

2081
01:41:01,000 --> 01:41:03,000
裝都比較簡單一些

2082
01:41:03,000 --> 01:41:05,000
比如說我要裝PNG

2083
01:41:05,000 --> 01:41:07,000
PNG是一個圖像的

2084
01:41:07,000 --> 01:41:09,000
比如說當我

2085
01:41:09,000 --> 01:41:11,000
要安裝PNG

2086
01:41:11,000 --> 01:41:13,000
我編譯的時候

2087
01:41:14,000 --> 01:41:16,000
最簡單的方法就是

2088
01:41:16,000 --> 01:41:18,000
所做

2089
01:41:18,000 --> 01:41:20,000
apt-ch

2090
01:41:20,000 --> 01:41:22,000
leave

2091
01:41:22,000 --> 01:41:36,000
這是Linux下

2092
01:41:36,000 --> 01:41:38,000
抱歉

2093
01:41:38,000 --> 01:41:42,000
Mac下也有這個命令

2094
01:41:42,000 --> 01:41:44,000
如果是在Linux下的話

2095
01:41:44,000 --> 01:41:46,000
你就可以用剛才我說的命令

2096
01:41:46,000 --> 01:41:48,000
就可以搜到很多

2097
01:41:48,000 --> 01:41:50,000
LeavePNG相關的

2098
01:41:50,000 --> 01:41:52,000
在Windows下的話

2099
01:41:52,000 --> 01:41:54,000
什麽命令

2100
01:41:54,000 --> 01:41:56,000
我現在還忘了

2101
01:42:10,000 --> 01:42:12,000
那

2102
01:42:12,000 --> 01:42:26,000
不好意思啊

2103
01:42:26,000 --> 01:42:28,000
因為最近沒有在

2104
01:42:28,000 --> 01:42:30,000
MacOS下做開發

2105
01:42:30,000 --> 01:42:32,000
最近主要是在Linux下

2106
01:42:32,000 --> 01:42:34,000
所以我要看一下這個MacOS的

2107
01:42:34,000 --> 01:42:36,000
就找這酷的命令

2108
01:42:36,000 --> 01:42:38,000
呃

2109
01:42:38,000 --> 01:42:48,000
Leave

2110
01:42:50,000 --> 01:42:52,000
哦

2111
01:42:52,000 --> 01:42:54,000
哦

2112
01:42:54,000 --> 01:42:56,000
哦

2113
01:42:56,000 --> 01:42:58,000
哦

2114
01:42:58,000 --> 01:43:00,000
哦

2115
01:43:00,000 --> 01:43:02,000
哦

2116
01:43:02,000 --> 01:43:04,000
哦

2117
01:43:04,000 --> 01:43:06,000
哦

2118
01:43:06,000 --> 01:43:08,000
哦

2119
01:43:08,000 --> 01:43:10,000
哦

2120
01:43:10,000 --> 01:43:12,000
哦

2121
01:43:12,000 --> 01:43:14,000
哦

2122
01:43:14,000 --> 01:43:16,000
哦

2123
01:43:16,000 --> 01:43:18,000
哦

2124
01:43:18,000 --> 01:43:20,000
哦

2125
01:43:20,000 --> 01:43:22,000
哦

2126
01:43:22,000 --> 01:43:24,000
哦

2127
01:43:24,000 --> 01:43:26,000
哦

2128
01:43:26,000 --> 01:43:28,000
哦

2129
01:43:28,000 --> 01:43:30,000
哦

2130
01:43:30,000 --> 01:43:32,000
哦

2131
01:43:32,000 --> 01:43:34,000
哦

2132
01:43:34,000 --> 01:43:36,000
哦

2133
01:43:36,000 --> 01:43:38,000
哦

2134
01:43:38,000 --> 01:43:40,000
哦

2135
01:43:40,000 --> 01:43:42,000
哦

2136
01:43:42,000 --> 01:43:44,000
哦

2137
01:43:44,000 --> 01:43:46,000
哦

2138
01:43:46,000 --> 01:43:48,000
哦

2139
01:43:48,000 --> 01:43:50,000
哦

2140
01:43:50,000 --> 01:43:52,000
哦

2141
01:43:52,000 --> 01:43:54,000
哦

2142
01:43:54,000 --> 01:43:56,000
哦

2143
01:43:56,000 --> 01:43:58,000
哦

2144
01:43:58,000 --> 01:44:00,000
哦

2145
01:44:00,000 --> 01:44:02,000
哦

2146
01:44:02,000 --> 01:44:04,000
哦

2147
01:44:04,000 --> 01:44:06,000
哦

2148
01:44:06,000 --> 01:44:08,000
哦

2149
01:44:08,000 --> 01:44:10,000
哦

2150
01:44:10,000 --> 01:44:12,000
哦

2151
01:44:12,000 --> 01:44:14,000
哦

2152
01:44:14,000 --> 01:44:16,000
哦

2153
01:44:16,000 --> 01:44:18,000
哦

2154
01:44:18,000 --> 01:44:20,000
哦

2155
01:44:20,000 --> 01:44:22,000
哦

2156
01:44:22,000 --> 01:44:24,000
哦

2157
01:44:24,000 --> 01:44:26,000
哦

2158
01:44:26,000 --> 01:44:28,000
哦

2159
01:44:28,000 --> 01:44:30,000
哦

2160
01:44:30,000 --> 01:44:32,000
哦

2161
01:44:32,000 --> 01:44:34,000
哦

2162
01:44:34,000 --> 01:44:36,000
哦

2163
01:44:36,000 --> 01:44:38,000
哦

2164
01:44:38,000 --> 01:44:40,000
哦

2165
01:44:40,000 --> 01:44:42,000
哦

2166
01:44:42,000 --> 01:44:44,000
哦

2167
01:44:44,000 --> 01:44:46,000
哦

2168
01:44:46,000 --> 01:44:48,000
哦

2169
01:44:48,000 --> 01:44:50,000
哦

2170
01:44:50,000 --> 01:44:52,000
哦

2171
01:44:52,000 --> 01:44:54,000
哦

2172
01:44:54,000 --> 01:44:56,000
哦

2173
01:44:56,000 --> 01:44:58,000
哦

2174
01:44:58,000 --> 01:45:00,000
哦

2175
01:45:00,000 --> 01:45:02,000
哦

2176
01:45:02,000 --> 01:45:04,000
哦

2177
01:45:04,000 --> 01:45:06,000
哦

2178
01:45:06,000 --> 01:45:08,000
哦

2179
01:45:08,000 --> 01:45:10,000
哦

2180
01:45:10,000 --> 01:45:12,000
哦

2181
01:45:12,000 --> 01:45:14,000
哦

2182
01:45:14,000 --> 01:45:16,000
哦

2183
01:45:16,000 --> 01:45:18,000
哦

2184
01:45:18,000 --> 01:45:20,000
哦

2185
01:45:20,000 --> 01:45:22,000
哦

2186
01:45:22,000 --> 01:45:24,000
哦

2187
01:45:24,000 --> 01:45:26,000
哦

2188
01:45:26,000 --> 01:45:28,000
哦

2189
01:45:28,000 --> 01:45:30,000
哦

2190
01:45:30,000 --> 01:45:32,000
哦

2191
01:45:32,000 --> 01:45:34,000
哦

2192
01:45:34,000 --> 01:45:36,000
哦

2193
01:45:36,000 --> 01:45:38,000
哦

2194
01:45:38,000 --> 01:45:40,000
哦

2195
01:45:40,000 --> 01:45:42,000
哦

2196
01:45:42,000 --> 01:45:44,000
哦

2197
01:45:44,000 --> 01:45:46,000
哦

2198
01:45:46,000 --> 01:45:48,000
哦

2199
01:45:48,000 --> 01:45:50,000
哦

2200
01:45:50,000 --> 01:45:52,000
哦

2201
01:45:52,000 --> 01:45:54,000
哦

2202
01:45:54,000 --> 01:45:56,000
哦

2203
01:45:56,000 --> 01:45:58,000
哦

2204
01:45:58,000 --> 01:46:00,000
哦

2205
01:46:00,000 --> 01:46:02,000
哦

2206
01:46:02,000 --> 01:46:04,000
哦

2207
01:46:04,000 --> 01:46:06,000
哦

2208
01:46:06,000 --> 01:46:08,000
哦

2209
01:46:08,000 --> 01:46:10,000
哦

2210
01:46:10,000 --> 01:46:12,000
哦

2211
01:46:12,000 --> 01:46:14,000
哦

2212
01:46:14,000 --> 01:46:16,000
哦

2213
01:46:16,000 --> 01:46:18,000
哦

2214
01:46:18,000 --> 01:46:20,000
哦

2215
01:46:20,000 --> 01:46:22,000
哦

2216
01:46:22,000 --> 01:46:24,000
哦

2217
01:46:24,000 --> 01:46:26,000
哦

2218
01:46:26,000 --> 01:46:28,000
哦

2219
01:46:28,000 --> 01:46:30,000
哦

2220
01:46:30,000 --> 01:46:32,000
哦

2221
01:46:32,000 --> 01:46:34,000
哦

2222
01:46:34,000 --> 01:46:36,000
哦

2223
01:46:36,000 --> 01:46:38,000
哦

2224
01:46:38,000 --> 01:46:40,000
哦

2225
01:46:40,000 --> 01:46:42,000
哦

2226
01:46:42,000 --> 01:46:44,000
哦

2227
01:46:44,000 --> 01:46:46,000
哦

2228
01:46:46,000 --> 01:46:48,000
哦

2229
01:46:48,000 --> 01:46:50,000
哦

2230
01:46:50,000 --> 01:46:52,000
哦

2231
01:46:52,000 --> 01:46:54,000
哦

2232
01:46:54,000 --> 01:46:56,000
哦

2233
01:46:56,000 --> 01:46:58,000
哦

2234
01:46:58,000 --> 01:47:00,000
哦

2235
01:47:00,000 --> 01:47:02,000
哦

2236
01:47:02,000 --> 01:47:04,000
哦

2237
01:47:04,000 --> 01:47:06,000
哦

2238
01:47:06,000 --> 01:47:08,000
哦

2239
01:47:08,000 --> 01:47:10,000
哦

2240
01:47:10,000 --> 01:47:12,000
哦

2241
01:47:12,000 --> 01:47:14,000
哦

2242
01:47:14,000 --> 01:47:16,000
哦

2243
01:47:16,000 --> 01:47:18,000
哦

2244
01:47:18,000 --> 01:47:20,000
哦

2245
01:47:20,000 --> 01:47:22,000
哦

2246
01:47:22,000 --> 01:47:24,000
哦

2247
01:47:24,000 --> 01:47:26,000
哦

2248
01:47:26,000 --> 01:47:28,000
哦

2249
01:47:28,000 --> 01:47:30,000
哦

2250
01:47:30,000 --> 01:47:32,000
哦

2251
01:47:32,000 --> 01:47:34,000
哦

2252
01:47:34,000 --> 01:47:36,000
哦

2253
01:47:36,000 --> 01:47:38,000
哦

2254
01:47:38,000 --> 01:47:40,000
哦

2255
01:47:40,000 --> 01:47:42,000
哦

2256
01:47:42,000 --> 01:47:44,000
哦

2257
01:47:44,000 --> 01:47:46,000
哦

2258
01:47:46,000 --> 01:47:48,000
哦

2259
01:47:48,000 --> 01:47:50,000
哦

2260
01:47:50,000 --> 01:47:52,000
哦

2261
01:47:52,000 --> 01:47:54,000
哦

2262
01:47:54,000 --> 01:47:56,000
哦

2263
01:47:56,000 --> 01:47:58,000
哦

2264
01:47:58,000 --> 01:48:00,000
哦

2265
01:48:00,000 --> 01:48:02,000
哦

2266
01:48:02,000 --> 01:48:04,000
哦

2267
01:48:04,000 --> 01:48:06,000
哦

2268
01:48:06,000 --> 01:48:08,000
哦

2269
01:48:08,000 --> 01:48:10,000
哦

2270
01:48:10,000 --> 01:48:12,000
哦

2271
01:48:12,000 --> 01:48:14,000
哦

2272
01:48:14,000 --> 01:48:16,000
哦

2273
01:48:16,000 --> 01:48:18,000
哦

2274
01:48:18,000 --> 01:48:20,000
哦

2275
01:48:20,000 --> 01:48:22,000
哦

2276
01:48:22,000 --> 01:48:24,000
哦

2277
01:48:24,000 --> 01:48:26,000
哦

2278
01:48:26,000 --> 01:48:28,000
哦

2279
01:48:28,000 --> 01:48:30,000
哦

2280
01:48:30,000 --> 01:48:32,000
哦

2281
01:48:32,000 --> 01:48:34,000
哦

2282
01:48:34,000 --> 01:48:36,000
哦

2283
01:48:36,000 --> 01:48:38,000
哦

2284
01:48:38,000 --> 01:48:40,000
哦

2285
01:48:40,000 --> 01:48:42,000
哦

2286
01:48:42,000 --> 01:48:44,000
哦

2287
01:48:44,000 --> 01:48:46,000
哦

2288
01:48:46,000 --> 01:48:48,000
哦

2289
01:48:48,000 --> 01:48:50,000
哦

2290
01:48:50,000 --> 01:48:52,000
哦

2291
01:48:52,000 --> 01:48:54,000
哦

2292
01:48:54,000 --> 01:48:56,000
哦

2293
01:48:56,000 --> 01:48:58,000
哦

2294
01:48:58,000 --> 01:49:00,000
哦

2295
01:49:00,000 --> 01:49:02,000
哦

2296
01:49:02,000 --> 01:49:04,000
哦

2297
01:49:04,000 --> 01:49:06,000
哦

2298
01:49:06,000 --> 01:49:08,000
哦

2299
01:49:08,000 --> 01:49:10,000
哦

2300
01:49:10,000 --> 01:49:12,000
哦

2301
01:49:12,000 --> 01:49:14,000
哦

2302
01:49:14,000 --> 01:49:16,000
哦

2303
01:49:16,000 --> 01:49:18,000
哦

2304
01:49:18,000 --> 01:49:20,000
哦

2305
01:49:20,000 --> 01:49:22,000
哦

2306
01:49:22,000 --> 01:49:24,000
哦

2307
01:49:24,000 --> 01:49:26,000
哦

2308
01:49:26,000 --> 01:49:28,000
哦

2309
01:49:28,000 --> 01:49:30,000
哦

2310
01:49:30,000 --> 01:49:32,000
哦

2311
01:49:32,000 --> 01:49:34,000
哦

2312
01:49:34,000 --> 01:49:36,000
哦

2313
01:49:36,000 --> 01:49:38,000
哦

2314
01:49:38,000 --> 01:49:40,000
哦

2315
01:49:40,000 --> 01:49:42,000
哦

2316
01:49:42,000 --> 01:49:44,000
哦

2317
01:49:44,000 --> 01:49:46,000
哦

2318
01:49:46,000 --> 01:49:48,000
哦

2319
01:49:48,000 --> 01:49:50,000
哦

2320
01:49:50,000 --> 01:49:52,000
哦

2321
01:49:52,000 --> 01:49:54,000
哦

2322
01:49:54,000 --> 01:49:56,000
哦

2323
01:49:56,000 --> 01:49:58,000
哦

2324
01:49:58,000 --> 01:50:00,000
哦

2325
01:50:00,000 --> 01:50:02,000
哦

2326
01:50:02,000 --> 01:50:04,000
哦

2327
01:50:04,000 --> 01:50:06,000
哦

2328
01:50:06,000 --> 01:50:08,000
哦

2329
01:50:08,000 --> 01:50:10,000
哦

2330
01:50:10,000 --> 01:50:12,000
哦

2331
01:50:12,000 --> 01:50:14,000
哦

2332
01:50:14,000 --> 01:50:16,000
哦

2333
01:50:16,000 --> 01:50:18,000
哦

2334
01:50:18,000 --> 01:50:20,000
哦

2335
01:50:20,000 --> 01:50:22,000
哦

2336
01:50:22,000 --> 01:50:24,000
哦

2337
01:50:24,000 --> 01:50:26,000
哦

2338
01:50:26,000 --> 01:50:28,000
哦

2339
01:50:28,000 --> 01:50:30,000
哦

2340
01:50:30,000 --> 01:50:32,000
哦

2341
01:50:32,000 --> 01:50:34,000
哦

2342
01:50:34,000 --> 01:50:36,000
哦

2343
01:50:36,000 --> 01:50:38,000
哦

2344
01:50:38,000 --> 01:50:40,000
哦

2345
01:50:40,000 --> 01:50:42,000
哦

2346
01:50:42,000 --> 01:50:44,000
哦

2347
01:50:44,000 --> 01:50:46,000
哦

2348
01:50:46,000 --> 01:50:48,000
哦

2349
01:50:48,000 --> 01:50:50,000
哦

2350
01:50:50,000 --> 01:50:52,000
哦

2351
01:50:52,000 --> 01:50:54,000
哦

2352
01:50:54,000 --> 01:50:56,000
哦

2353
01:50:56,000 --> 01:50:58,000
哦

2354
01:50:58,000 --> 01:51:00,000
哦

2355
01:51:00,000 --> 01:51:02,000
哦

2356
01:51:02,000 --> 01:51:04,000
哦

2357
01:51:04,000 --> 01:51:06,000
哦

2358
01:51:06,000 --> 01:51:08,000
哦

2359
01:51:08,000 --> 01:51:10,000
哦

2360
01:51:10,000 --> 01:51:12,000
哦

2361
01:51:12,000 --> 01:51:14,000
哦

2362
01:51:14,000 --> 01:51:16,000
哦

2363
01:51:16,000 --> 01:51:18,000
哦

2364
01:51:18,000 --> 01:51:20,000
哦

2365
01:51:20,000 --> 01:51:22,000
哦

2366
01:51:22,000 --> 01:51:24,000
哦

2367
01:51:24,000 --> 01:51:26,000
哦

2368
01:51:26,000 --> 01:51:28,000
哦

2369
01:51:28,000 --> 01:51:30,000
哦

2370
01:51:30,000 --> 01:51:32,000
哦

2371
01:51:32,000 --> 01:51:34,000
哦

2372
01:51:34,000 --> 01:51:36,000
哦

2373
01:51:36,000 --> 01:51:38,000
哦

2374
01:51:38,000 --> 01:51:40,000
哦

2375
01:51:40,000 --> 01:51:42,000
哦

2376
01:51:42,000 --> 01:51:44,000
哦

2377
01:51:44,000 --> 01:51:46,000
哦

2378
01:51:46,000 --> 01:51:48,000
哦

2379
01:51:48,000 --> 01:51:50,000
哦

2380
01:51:50,000 --> 01:51:52,000
哦

2381
01:51:52,000 --> 01:51:54,000
哦

2382
01:51:54,000 --> 01:51:56,000
哦

2383
01:51:56,000 --> 01:51:58,000
哦

2384
01:51:58,000 --> 01:52:00,000
哦

2385
01:52:00,000 --> 01:52:02,000
哦

2386
01:52:02,000 --> 01:52:04,000
哦

2387
01:52:04,000 --> 01:52:06,000
哦

2388
01:52:06,000 --> 01:52:08,000
哦

2389
01:52:08,000 --> 01:52:10,000
哦

2390
01:52:10,000 --> 01:52:12,000
哦

2391
01:52:12,000 --> 01:52:14,000
哦

2392
01:52:14,000 --> 01:52:16,000
哦

2393
01:52:16,000 --> 01:52:18,000
哦

2394
01:52:18,000 --> 01:52:20,000
哦

2395
01:52:20,000 --> 01:52:22,000
哦

2396
01:52:22,000 --> 01:52:24,000
哦

2397
01:52:24,000 --> 01:52:26,000
哦

2398
01:52:26,000 --> 01:52:28,000
哦

2399
01:52:28,000 --> 01:52:30,000
哦

2400
01:52:30,000 --> 01:52:32,000
哦

2401
01:52:32,000 --> 01:52:34,000
哦

2402
01:52:34,000 --> 01:52:36,000
哦

2403
01:52:36,000 --> 01:52:38,000
哦

2404
01:52:38,000 --> 01:52:40,000
哦

2405
01:52:40,000 --> 01:52:42,000
哦

2406
01:52:42,000 --> 01:52:44,000
哦

2407
01:52:44,000 --> 01:52:46,000
哦

2408
01:52:46,000 --> 01:52:48,000
哦

2409
01:52:48,000 --> 01:52:50,000
哦

2410
01:52:50,000 --> 01:52:52,000
哦

2411
01:52:52,000 --> 01:52:54,000
哦

2412
01:52:54,000 --> 01:52:56,000
哦

2413
01:52:56,000 --> 01:52:58,000
哦

2414
01:52:58,000 --> 01:53:00,000
哦

2415
01:53:00,000 --> 01:53:02,000
哦

2416
01:53:02,000 --> 01:53:04,000
哦

2417
01:53:04,000 --> 01:53:06,000
哦

2418
01:53:06,000 --> 01:53:08,000
哦

2419
01:53:08,000 --> 01:53:10,000
哦

2420
01:53:10,000 --> 01:53:12,000
哦

2421
01:53:12,000 --> 01:53:14,000
哦

2422
01:53:14,000 --> 01:53:16,000
哦

2423
01:53:16,000 --> 01:53:18,000
哦

2424
01:53:18,000 --> 01:53:20,000
哦

2425
01:53:20,000 --> 01:53:22,000
哦

2426
01:53:22,000 --> 01:53:24,000
哦

2427
01:53:24,000 --> 01:53:26,000
哦

2428
01:53:26,000 --> 01:53:28,000
哦

2429
01:53:28,000 --> 01:53:30,000
哦

2430
01:53:30,000 --> 01:53:32,000
哦

2431
01:53:32,000 --> 01:53:34,000
哦

2432
01:53:34,000 --> 01:53:36,000
哦

2433
01:53:36,000 --> 01:53:38,000
哦

2434
01:53:38,000 --> 01:53:40,000
哦

2435
01:53:40,000 --> 01:53:42,000
哦

2436
01:53:42,000 --> 01:53:44,000
哦

2437
01:53:44,000 --> 01:53:46,000
哦

2438
01:53:46,000 --> 01:53:48,000
哦

2439
01:53:48,000 --> 01:53:50,000
哦

2440
01:53:50,000 --> 01:53:52,000
哦

2441
01:53:52,000 --> 01:53:54,000
哦

2442
01:53:54,000 --> 01:53:56,000
哦

2443
01:53:56,000 --> 01:53:58,000
哦

2444
01:53:58,000 --> 01:54:00,000
哦

2445
01:54:00,000 --> 01:54:02,000
哦

2446
01:54:02,000 --> 01:54:04,000
哦

2447
01:54:04,000 --> 01:54:06,000
哦

2448
01:54:06,000 --> 01:54:08,000
哦

2449
01:54:08,000 --> 01:54:10,000
哦

2450
01:54:10,000 --> 01:54:12,000
哦

2451
01:54:12,000 --> 01:54:14,000
哦

2452
01:54:14,000 --> 01:54:16,000
哦

2453
01:54:16,000 --> 01:54:18,000
哦

2454
01:54:18,000 --> 01:54:20,000
哦

2455
01:54:20,000 --> 01:54:22,000
哦

2456
01:54:22,000 --> 01:54:24,000
哦

2457
01:54:24,000 --> 01:54:26,000
哦

2458
01:54:26,000 --> 01:54:28,000
哦

2459
01:54:28,000 --> 01:54:30,000
哦

2460
01:54:30,000 --> 01:54:32,000
哦

2461
01:54:32,000 --> 01:54:34,000
哦

2462
01:54:34,000 --> 01:54:36,000
哦

2463
01:54:36,000 --> 01:54:38,000
哦

2464
01:54:38,000 --> 01:54:40,000
哦

2465
01:54:40,000 --> 01:54:42,000
哦

2466
01:54:42,000 --> 01:54:44,000
哦

2467
01:54:44,000 --> 01:54:46,000
哦

2468
01:54:46,000 --> 01:54:48,000
哦

2469
01:54:48,000 --> 01:54:50,000
哦

2470
01:54:50,000 --> 01:54:52,000
哦

2471
01:54:52,000 --> 01:54:54,000
哦

2472
01:54:54,000 --> 01:54:56,000
哦

2473
01:54:56,000 --> 01:54:58,000
哦

2474
01:54:58,000 --> 01:55:00,000
哦

2475
01:55:00,000 --> 01:55:02,000
哦

2476
01:55:02,000 --> 01:55:04,000
哦

2477
01:55:04,000 --> 01:55:06,000
哦

2478
01:55:06,000 --> 01:55:08,000
哦

2479
01:55:08,000 --> 01:55:10,000
哦

2480
01:55:10,000 --> 01:55:12,000
哦

2481
01:55:12,000 --> 01:55:14,000
哦

2482
01:55:14,000 --> 01:55:16,000
哦

2483
01:55:16,000 --> 01:55:18,000
哦

2484
01:55:18,000 --> 01:55:20,000
哦

2485
01:55:20,000 --> 01:55:22,000
哦

2486
01:55:22,000 --> 01:55:24,000
哦

2487
01:55:24,000 --> 01:55:26,000
哦

2488
01:55:26,000 --> 01:55:28,000
哦

2489
01:55:28,000 --> 01:55:30,000
哦

2490
01:55:30,000 --> 01:55:32,000
哦

2491
01:55:32,000 --> 01:55:34,000
哦

2492
01:55:34,000 --> 01:55:36,000
哦

2493
01:55:36,000 --> 01:55:38,000
哦

2494
01:55:38,000 --> 01:55:40,000
哦

2495
01:55:40,000 --> 01:55:42,000
哦

2496
01:55:42,000 --> 01:55:44,000
哦

2497
01:55:44,000 --> 01:55:46,000
哦

2498
01:55:46,000 --> 01:55:48,000
哦

2499
01:55:48,000 --> 01:55:50,000
哦

2500
01:55:50,000 --> 01:55:52,000
哦

2501
01:55:52,000 --> 01:55:54,000
哦

2502
01:55:54,000 --> 01:55:56,000
哦

2503
01:55:56,000 --> 01:55:58,000
哦

2504
01:55:58,000 --> 01:56:00,000
哦

2505
01:56:00,000 --> 01:56:02,000
哦

2506
01:56:02,000 --> 01:56:04,000
哦

2507
01:56:04,000 --> 01:56:06,000
哦

2508
01:56:06,000 --> 01:56:08,000
哦

2509
01:56:08,000 --> 01:56:10,000
哦

2510
01:56:10,000 --> 01:56:12,000
哦

2511
01:56:12,000 --> 01:56:14,000
哦

2512
01:56:14,000 --> 01:56:16,000
哦

2513
01:56:16,000 --> 01:56:18,000
哦

2514
01:56:18,000 --> 01:56:20,000
哦

2515
01:56:20,000 --> 01:56:22,000
哦

2516
01:56:22,000 --> 01:56:24,000
哦

2517
01:56:24,000 --> 01:56:26,000
哦

2518
01:56:26,000 --> 01:56:28,000
哦

2519
01:56:28,000 --> 01:56:30,000
哦

2520
01:56:30,000 --> 01:56:32,000
哦

2521
01:56:32,000 --> 01:56:34,000
哦

2522
01:56:34,000 --> 01:56:36,000
哦

2523
01:56:36,000 --> 01:56:38,000
哦

2524
01:56:38,000 --> 01:56:40,000
哦

2525
01:56:40,000 --> 01:56:42,000
哦

2526
01:56:42,000 --> 01:56:44,000
哦

2527
01:56:44,000 --> 01:56:46,000
哦

2528
01:56:46,000 --> 01:56:48,000
哦

2529
01:56:48,000 --> 01:56:50,000
哦

2530
01:56:50,000 --> 01:56:52,000
哦

2531
01:56:52,000 --> 01:56:54,000
哦

2532
01:56:54,000 --> 01:56:56,000
哦

2533
01:56:56,000 --> 01:56:58,000
哦

2534
01:56:58,000 --> 01:57:00,000
哦

2535
01:57:00,000 --> 01:57:02,000
哦

2536
01:57:02,000 --> 01:57:04,000
哦

2537
01:57:04,000 --> 01:57:06,000
哦

2538
01:57:06,000 --> 01:57:08,000
哦

2539
01:57:08,000 --> 01:57:10,000
哦

2540
01:57:10,000 --> 01:57:12,000
哦

2541
01:57:12,000 --> 01:57:14,000
哦

2542
01:57:14,000 --> 01:57:16,000
哦

2543
01:57:16,000 --> 01:57:18,000
哦

2544
01:57:18,000 --> 01:57:20,000
哦

2545
01:57:20,000 --> 01:57:22,000
哦

2546
01:57:22,000 --> 01:57:24,000
哦

2547
01:57:24,000 --> 01:57:26,000
哦

2548
01:57:26,000 --> 01:57:28,000
哦

2549
01:57:28,000 --> 01:57:30,000
哦

2550
01:57:30,000 --> 01:57:32,000
哦

2551
01:57:32,000 --> 01:57:34,000
哦

2552
01:57:34,000 --> 01:57:36,000
哦

2553
01:57:36,000 --> 01:57:38,000
哦

2554
01:57:38,000 --> 01:57:40,000
哦

2555
01:57:40,000 --> 01:57:42,000
哦

2556
01:57:42,000 --> 01:57:44,000
哦

2557
01:57:44,000 --> 01:57:46,000
哦

2558
01:57:46,000 --> 01:57:48,000
哦

2559
01:57:48,000 --> 01:57:50,000
哦

2560
01:57:50,000 --> 01:57:52,000
哦

2561
01:57:52,000 --> 01:57:54,000
哦

2562
01:57:54,000 --> 01:57:56,000
哦

2563
01:57:56,000 --> 01:57:58,000
哦

2564
01:57:58,000 --> 01:58:00,000
哦

2565
01:58:00,000 --> 01:58:02,000
哦

2566
01:58:02,000 --> 01:58:04,000
哦

2567
01:58:04,000 --> 01:58:06,000
哦

2568
01:58:06,000 --> 01:58:08,000
哦

2569
01:58:08,000 --> 01:58:10,000
哦

2570
01:58:10,000 --> 01:58:12,000
哦

2571
01:58:12,000 --> 01:58:14,000
哦

2572
01:58:14,000 --> 01:58:16,000
哦

2573
01:58:16,000 --> 01:58:18,000
哦

2574
01:58:18,000 --> 01:58:20,000
哦

2575
01:58:20,000 --> 01:58:22,000
哦

2576
01:58:22,000 --> 01:58:24,000
哦

2577
01:58:24,000 --> 01:58:26,000
哦

2578
01:58:26,000 --> 01:58:28,000
哦

2579
01:58:28,000 --> 01:58:30,000
哦

2580
01:58:30,000 --> 01:58:32,000
哦

2581
01:58:32,000 --> 01:58:34,000
哦

2582
01:58:34,000 --> 01:58:36,000
哦

2583
01:58:36,000 --> 01:58:38,000
哦

2584
01:58:38,000 --> 01:58:40,000
哦

2585
01:58:40,000 --> 01:58:42,000
哦

2586
01:58:42,000 --> 01:58:44,000
哦

2587
01:58:44,000 --> 01:58:46,000
哦

2588
01:58:46,000 --> 01:58:48,000
哦

2589
01:58:48,000 --> 01:58:50,000
哦

2590
01:58:50,000 --> 01:58:52,000
哦

2591
01:58:52,000 --> 01:58:54,000
哦

2592
01:58:54,000 --> 01:58:56,000
哦

2593
01:58:56,000 --> 01:58:58,000
哦

2594
01:58:58,000 --> 01:59:00,000
哦

2595
01:59:00,000 --> 01:59:02,000
哦

2596
01:59:02,000 --> 01:59:04,000
哦

2597
01:59:04,000 --> 01:59:06,000
哦

2598
01:59:06,000 --> 01:59:08,000
哦

2599
01:59:08,000 --> 01:59:10,000
哦

2600
01:59:10,000 --> 01:59:12,000
哦

2601
01:59:12,000 --> 01:59:14,000
哦

2602
01:59:14,000 --> 01:59:16,000
哦

2603
01:59:16,000 --> 01:59:18,000
哦

2604
01:59:18,000 --> 01:59:20,000
哦

2605
01:59:20,000 --> 01:59:22,000
哦

2606
01:59:22,000 --> 01:59:24,000
哦

2607
01:59:24,000 --> 01:59:26,000
哦

2608
01:59:26,000 --> 01:59:28,000
哦

2609
01:59:28,000 --> 01:59:30,000
哦

2610
01:59:30,000 --> 01:59:32,000
哦

2611
01:59:32,000 --> 01:59:34,000
哦

2612
01:59:34,000 --> 01:59:36,000
哦

2613
01:59:36,000 --> 01:59:38,000
哦

2614
01:59:38,000 --> 01:59:40,000
哦

2615
01:59:40,000 --> 01:59:42,000
哦

2616
01:59:42,000 --> 01:59:44,000
哦

2617
01:59:44,000 --> 01:59:46,000
哦

2618
01:59:46,000 --> 01:59:48,000
哦

2619
01:59:48,000 --> 01:59:50,000
哦

2620
01:59:50,000 --> 01:59:52,000
哦

2621
01:59:52,000 --> 01:59:54,000
哦

2622
01:59:54,000 --> 01:59:56,000
哦

2623
01:59:56,000 --> 01:59:58,000
哦

2624
01:59:58,000 --> 02:00:00,000
哦

2625
02:00:00,000 --> 02:00:02,000
哦

2626
02:00:02,000 --> 02:00:04,000
哦

2627
02:00:04,000 --> 02:00:06,000
哦

2628
02:00:06,000 --> 02:00:08,000
哦

2629
02:00:08,000 --> 02:00:10,000
哦

2630
02:00:10,000 --> 02:00:12,000
哦

2631
02:00:12,000 --> 02:00:14,000
哦

2632
02:00:14,000 --> 02:00:16,000
哦

2633
02:00:16,000 --> 02:00:18,000
哦

2634
02:00:18,000 --> 02:00:20,000
哦

2635
02:00:20,000 --> 02:00:22,000
哦

2636
02:00:22,000 --> 02:00:24,000
哦

2637
02:00:24,000 --> 02:00:26,000
哦

2638
02:00:26,000 --> 02:00:28,000
哦

2639
02:00:28,000 --> 02:00:30,000
哦

2640
02:00:30,000 --> 02:00:32,000
哦

2641
02:00:32,000 --> 02:00:34,000
哦

2642
02:00:34,000 --> 02:00:36,000
哦

2643
02:00:36,000 --> 02:00:38,000
哦

2644
02:00:38,000 --> 02:00:40,000
哦

2645
02:00:40,000 --> 02:00:42,000
哦

2646
02:00:42,000 --> 02:00:44,000
哦

2647
02:00:44,000 --> 02:00:46,000
哦

2648
02:00:46,000 --> 02:00:48,000
哦

2649
02:00:48,000 --> 02:00:50,000
哦

2650
02:00:50,000 --> 02:00:52,000
哦

2651
02:00:52,000 --> 02:00:54,000
哦

2652
02:00:54,000 --> 02:00:56,000
哦

2653
02:00:56,000 --> 02:00:58,000
哦

2654
02:00:58,000 --> 02:01:00,000
哦

2655
02:01:00,000 --> 02:01:02,000
哦

2656
02:01:02,000 --> 02:01:04,000
哦

2657
02:01:04,000 --> 02:01:06,000
哦

2658
02:01:06,000 --> 02:01:08,000
哦

2659
02:01:08,000 --> 02:01:10,000
哦

2660
02:01:10,000 --> 02:01:12,000
哦

2661
02:01:12,000 --> 02:01:14,000
哦

2662
02:01:14,000 --> 02:01:16,000
哦

2663
02:01:16,000 --> 02:01:18,000
哦

2664
02:01:18,000 --> 02:01:20,000
哦

2665
02:01:20,000 --> 02:01:22,000
哦

2666
02:01:22,000 --> 02:01:24,000
哦

2667
02:01:24,000 --> 02:01:26,000
哦

2668
02:01:26,000 --> 02:01:28,000
哦

2669
02:01:28,000 --> 02:01:30,000
哦

2670
02:01:30,000 --> 02:01:32,000
哦

2671
02:01:32,000 --> 02:01:34,000
哦

2672
02:01:34,000 --> 02:01:36,000
哦

2673
02:01:36,000 --> 02:01:38,000
哦

2674
02:01:38,000 --> 02:01:40,000
哦

2675
02:01:40,000 --> 02:01:42,000
哦

2676
02:01:42,000 --> 02:01:44,000
哦

2677
02:01:44,000 --> 02:01:46,000
哦

2678
02:01:46,000 --> 02:01:48,000
哦

2679
02:01:48,000 --> 02:01:50,000
哦

2680
02:01:50,000 --> 02:01:52,000
哦

2681
02:01:52,000 --> 02:01:54,000
哦

2682
02:01:54,000 --> 02:01:56,000
哦

2683
02:01:56,000 --> 02:01:58,000
哦

2684
02:01:58,000 --> 02:02:00,000
哦

2685
02:02:00,000 --> 02:02:02,000
哦

2686
02:02:02,000 --> 02:02:04,000
哦

2687
02:02:04,000 --> 02:02:06,000
哦

2688
02:02:06,000 --> 02:02:08,000
哦

2689
02:02:08,000 --> 02:02:10,000
哦

2690
02:02:10,000 --> 02:02:12,000
哦

2691
02:02:12,000 --> 02:02:14,000
哦

2692
02:02:14,000 --> 02:02:16,000
哦

2693
02:02:16,000 --> 02:02:18,000
哦

2694
02:02:18,000 --> 02:02:20,000
哦

2695
02:02:20,000 --> 02:02:22,000
哦

2696
02:02:22,000 --> 02:02:24,000
哦

2697
02:02:24,000 --> 02:02:26,000
哦

2698
02:02:26,000 --> 02:02:28,000
哦

2699
02:02:28,000 --> 02:02:30,000
哦

2700
02:02:30,000 --> 02:02:32,000
哦

2701
02:02:32,000 --> 02:02:34,000
哦

2702
02:02:34,000 --> 02:02:36,000
哦

2703
02:02:36,000 --> 02:02:38,000
哦

2704
02:02:38,000 --> 02:02:40,000
哦

2705
02:02:40,000 --> 02:02:42,000
哦

2706
02:02:42,000 --> 02:02:44,000
哦

2707
02:02:44,000 --> 02:02:46,000
哦

2708
02:02:46,000 --> 02:02:48,000
哦

2709
02:02:48,000 --> 02:02:50,000
哦

2710
02:02:50,000 --> 02:02:52,000
哦

2711
02:02:52,000 --> 02:02:54,000
哦

2712
02:02:54,000 --> 02:02:56,000
哦

2713
02:02:56,000 --> 02:02:58,000
哦

2714
02:02:58,000 --> 02:03:00,000
哦

2715
02:03:00,000 --> 02:03:02,000
哦

2716
02:03:02,000 --> 02:03:04,000
哦

2717
02:03:04,000 --> 02:03:06,000
哦

2718
02:03:06,000 --> 02:03:08,000
哦

2719
02:03:08,000 --> 02:03:10,000
哦

2720
02:03:10,000 --> 02:03:12,000
哦

2721
02:03:12,000 --> 02:03:14,000
哦

2722
02:03:14,000 --> 02:03:16,000
哦

2723
02:03:16,000 --> 02:03:18,000
哦

2724
02:03:18,000 --> 02:03:20,000
哦

2725
02:03:20,000 --> 02:03:22,000
哦

2726
02:03:22,000 --> 02:03:24,000
哦

2727
02:03:24,000 --> 02:03:26,000
哦

2728
02:03:26,000 --> 02:03:28,000
哦

2729
02:03:28,000 --> 02:03:30,000
哦

2730
02:03:30,000 --> 02:03:32,000
哦

2731
02:03:32,000 --> 02:03:34,000
哦

2732
02:03:34,000 --> 02:03:36,000
哦

2733
02:03:36,000 --> 02:03:38,000
哦

2734
02:03:38,000 --> 02:03:40,000
哦

2735
02:03:40,000 --> 02:03:42,000
哦

2736
02:03:42,000 --> 02:03:44,000
哦

2737
02:03:44,000 --> 02:03:46,000
哦

2738
02:03:46,000 --> 02:03:48,000
哦

2739
02:03:48,000 --> 02:03:50,000
哦

2740
02:03:50,000 --> 02:03:52,000
哦

2741
02:03:52,000 --> 02:03:54,000
哦

