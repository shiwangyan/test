1
00:00:00,000 --> 00:00:04,000
(我用了很多的手机,所以我都没有用到)

2
00:00:04,000 --> 00:00:08,000
(我用了很多的手机,所以我都没有用到)

3
00:00:08,000 --> 00:00:12,000
(我用了很多的手机,所以我都没有用到)

4
00:00:12,000 --> 00:00:16,000
(我用了很多的手机,所以我都没有用到)

5
00:00:16,000 --> 00:00:20,000
(我用了很多的手机,所以我都没有用到)

6
00:00:20,000 --> 00:00:24,000
(我用了很多的手机,所以我都没有用到)

7
00:00:24,000 --> 00:00:28,000
(我用了很多的手机,所以我都没有用到)

8
00:00:28,000 --> 00:00:32,000
(我用了很多的手机,所以我都没有用到)

9
00:00:32,000 --> 00:00:36,000
(我用了很多的手机,所以我都没有用到)

10
00:00:36,000 --> 00:00:40,000
(我用了很多的手机,所以我都没有用到)

11
00:00:40,000 --> 00:00:44,000
(我用了很多的手机,所以我都没有用到)

12
00:00:44,000 --> 00:00:48,000
(我用了很多的手机,所以我都没有用到)

13
00:00:48,000 --> 00:00:52,000
(我用了很多的手机,所以我都没有用到)

14
00:00:52,000 --> 00:00:56,000
(我用了很多的手机,所以我都没有用到)

15
00:00:56,000 --> 00:01:00,000
(我用了很多的手机,所以我都没有用到)

16
00:01:00,000 --> 00:01:04,000
(我用了很多的手机,所以我都没有用到)

17
00:01:04,000 --> 00:01:08,000
(我用了很多的手机,所以我都没有用到)

18
00:01:08,000 --> 00:01:12,000
(我用了很多的手机,所以我都没有用到)

19
00:01:12,000 --> 00:01:16,000
(我用了很多的手机,所以我都没有用到)

20
00:01:16,000 --> 00:01:20,000
(我用了很多的手机,所以我都没有用到)

21
00:01:20,000 --> 00:01:24,000
(我用了很多的手机,所以我都没有用到)

22
00:01:24,000 --> 00:01:28,000
(我用了很多的手机,所以我都没有用到)

23
00:01:28,000 --> 00:01:32,000
(我用了很多的手机,所以我都没有用到)

24
00:01:32,000 --> 00:01:36,000
(我用了很多的手机,所以我都没有用到)

25
00:01:36,000 --> 00:01:40,000
(我用了很多的手机,所以我都没有用到)

26
00:01:40,000 --> 00:01:44,000
(我用了很多的手机,所以我都没有用到)

27
00:01:44,000 --> 00:01:48,000
(我用了很多的手机,所以我都没有用到)

28
00:01:48,000 --> 00:01:52,000
(我用了很多的手机,所以我都没有用到)

29
00:01:52,000 --> 00:01:58,000
现在我们开始基于图像的三位模型重建这门课

30
00:01:58,000 --> 00:02:02,000
第一节课我们主要讲一下课前的预习

31
00:02:02,000 --> 00:02:06,000
然后没有太正式的

32
00:02:06,000 --> 00:02:10,000
没有太正式的

33
00:02:10,000 --> 00:02:12,000
等一下

34
00:02:12,000 --> 00:02:16,000
这节课主要是介绍一下

35
00:02:16,000 --> 00:02:20,000
课前预习,介绍一下这门课所讲的内容

36
00:02:20,000 --> 00:02:22,000
和配套的代码

37
00:02:22,000 --> 00:02:24,000
没有涉及到太多的细节

38
00:02:24,000 --> 00:02:28,000
所以这节课应该是比较轻松的

39
00:02:28,000 --> 00:02:34,000
我先讲一下这节课我们要做什么

40
00:02:34,000 --> 00:02:38,000
基于图像的三位模型重建

41
00:02:38,000 --> 00:02:42,000
其实就是一个基于多视角图像的

42
00:02:42,000 --> 00:02:46,000
应该说是基于多视角图像的三位模型重建

43
00:02:46,000 --> 00:02:48,000
它是一个比较系统的框架

44
00:02:48,000 --> 00:02:52,000
而且共偏向于工程问题

45
00:02:52,000 --> 00:02:56,000
那么三位模型的重建流程

46
00:02:56,000 --> 00:03:00,000
一般包含著三位点云的获取

47
00:03:00,000 --> 00:03:04,000
这些三位点云就是空间中的一些散点

48
00:03:04,000 --> 00:03:06,000
它没有结构

49
00:03:06,000 --> 00:03:08,000
当然它会有一些属性

50
00:03:08,000 --> 00:03:10,000
比如说像颜色或者和法下量

51
00:03:10,000 --> 00:03:14,000
空间坐标加颜色加法下量

52
00:03:14,000 --> 00:03:16,000
这就是我们常见的三位点云的形态

53
00:03:16,000 --> 00:03:18,000
当然得到三位点云之后

54
00:03:18,000 --> 00:03:24,000
我们需要通过一些图形学的方法

55
00:03:24,000 --> 00:03:26,000
去恢复它的几何结构

56
00:03:26,000 --> 00:03:28,000
也就是拓朴结构

57
00:03:28,000 --> 00:03:30,000
因为散乱的三位点的话

58
00:03:30,000 --> 00:03:34,000
数据非常的容易

59
00:03:34,000 --> 00:03:40,000
对数据的存储是一个非常大的挑战

60
00:03:40,000 --> 00:03:44,000
比如说一个简单的墙面

61
00:03:44,000 --> 00:03:50,000
就这样一个很小的场景

62
00:03:50,000 --> 00:03:52,000
它可能有重建上万个点云

63
00:03:52,000 --> 00:03:56,000
但是实际上它的底层的结构

64
00:03:56,000 --> 00:04:00,000
只需要用几个或者几十个面片

65
00:04:00,000 --> 00:04:02,000
就可以表达出来

66
00:04:02,000 --> 00:04:04,000
所以将点云转化成网格

67
00:04:04,000 --> 00:04:08,000
这是重建里面的一个重要的核心模块

68
00:04:08,000 --> 00:04:10,000
它的其中的一个重要的作用

69
00:04:10,000 --> 00:04:12,000
就是减少数据的存储量

70
00:04:12,000 --> 00:04:16,000
另外一个从渲染的角度来讲的话

71
00:04:16,000 --> 00:04:18,000
点云是没有

72
00:04:18,000 --> 00:04:22,000
它的渲染的质量是非常非常差的

73
00:04:22,000 --> 00:04:26,000
如果离得比较远的话

74
00:04:26,000 --> 00:04:28,000
如果相机离得比较远的话

75
00:04:28,000 --> 00:04:30,000
还能够大致的看出它是一个建筑

76
00:04:30,000 --> 00:04:32,000
但如果我们把相机离得很近

77
00:04:32,000 --> 00:04:34,000
你就会看到

78
00:04:34,000 --> 00:04:38,000
屏幕里面渲染的都是些很散乱的点

79
00:04:38,000 --> 00:04:40,000
是因为它是没有结构的

80
00:04:40,000 --> 00:04:46,000
所以从提升渲染逼真度的角度来讲的话

81
00:04:46,000 --> 00:04:50,000
我们也必须把点云先转化成网格

82
00:04:50,000 --> 00:04:56,000
从点云转化成网格之后

83
00:04:56,000 --> 00:05:00,000
这个场景就有了这个TOP结构

84
00:05:00,000 --> 00:05:04,000
然后我们如果进一步的想提升它的渲染效果的话

85
00:05:04,000 --> 00:05:08,000
可以给这个网格贴上一些纹理

86
00:05:08,000 --> 00:05:12,000
贴纹理的方法有很多种

87
00:05:12,000 --> 00:05:14,000
像我们常用的一些软件

88
00:05:14,000 --> 00:05:18,000
AutoDesk系列的一些软件

89
00:05:18,000 --> 00:05:20,000
像Blender、Maya这些软件

90
00:05:20,000 --> 00:05:24,000
都可以提供一些交互式的贴纹理

91
00:05:24,000 --> 00:05:26,000
但是我们多视角的重建

92
00:05:26,000 --> 00:05:30,000
是可以知道相机的参数的

93
00:05:30,000 --> 00:05:34,000
因此就是可以通过自动的方法去创建纹理

94
00:05:34,000 --> 00:05:38,000
并且对纹理进行一些图像处理方面的一些编辑

95
00:05:38,000 --> 00:05:42,000
然后来提升渲染的逼真重度

96
00:05:42,000 --> 00:05:52,000
常见的点云的获取方式

97
00:05:52,000 --> 00:05:58,000
有激光雷达、Connect扫描

98
00:05:58,000 --> 00:06:00,000
还有单目多视角

99
00:06:00,000 --> 00:06:02,000
以及双目立体视觉

100
00:06:02,000 --> 00:06:12,000
像激光点云它可以非常快速地获取比较准确的点云

101
00:06:12,000 --> 00:06:16,000
而且它可以使用不同规模的场景

102
00:06:16,000 --> 00:06:22,000
比如说采用车载的雷达

103
00:06:22,000 --> 00:06:26,000
或者是采用机载的

104
00:06:26,000 --> 00:06:30,000
就是放在无人机上的这种雷达

105
00:06:30,000 --> 00:06:36,000
那我就可以对这些大规模的场景进行点云的扫描

106
00:06:36,000 --> 00:06:40,000
包括现在无人驾驶

107
00:06:40,000 --> 00:06:46,000
也是采用这种激光雷达的方式去获取周围环境的一些点云

108
00:06:46,000 --> 00:06:48,000
这种方法效率很高

109
00:06:48,000 --> 00:06:50,000
得到的点云也比较准确

110
00:06:50,000 --> 00:06:54,000
但是唯一的缺陷就是成本特别高

111
00:06:54,000 --> 00:06:58,000
还有一种就是Connect扫描

112
00:06:58,000 --> 00:07:04,000
Connect是微软开发的一款设备

113
00:07:04,000 --> 00:07:12,000
它是通过Time Flies这种手势

114
00:07:12,000 --> 00:07:20,000
TF的这种方式去获取周围环境的点云数据

115
00:07:20,000 --> 00:07:24,000
而且它可以同时得到图像

116
00:07:24,000 --> 00:07:28,000
得到一幅彩色图和深度图

117
00:07:28,000 --> 00:07:32,000
彩色图和深度图其实就是一个一帧的点云

118
00:07:32,000 --> 00:07:36,000
Connect它获取的点云的速度也是非常快

119
00:07:36,000 --> 00:07:40,000
但是精度不是特别高

120
00:07:40,000 --> 00:07:44,000
而且它的有限范围非常的有限

121
00:07:44,000 --> 00:07:48,000
一般都是从几十厘米到一两米之间

122
00:07:48,000 --> 00:07:52,000
所以对一些室内的场景

123
00:07:52,000 --> 00:07:54,000
对一些精度要求不是很高的场景

124
00:07:54,000 --> 00:07:56,000
Connect还是比较合适的

125
00:07:56,000 --> 00:07:58,000
Connect的价格也不是很贵

126
00:07:58,000 --> 00:08:02,000
二代的话也就一两千块钱

127
00:08:02,000 --> 00:08:04,000
现在的话应该会更便宜一些

128
00:08:04,000 --> 00:08:08,000
我说的是几年前的一些价格

129
00:08:08,000 --> 00:08:12,000
Connect里面有一个特别好的算法框架

130
00:08:12,000 --> 00:08:16,000
之前就是一个实时建模的一个算法框架

131
00:08:16,000 --> 00:08:18,000
叫Confusion

132
00:08:18,000 --> 00:08:22,000
它在GPU上可以达到实时的建模效果

133
00:08:22,000 --> 00:08:26,000
用Connect对周围环境进行一个扫描

134
00:08:26,000 --> 00:08:28,000
实时的可以得到环境的mesh

135
00:08:28,000 --> 00:08:32,000
就是后面改进版的Kfusion

136
00:08:32,000 --> 00:08:38,000
直接可以得到彩色的mesh

137
00:08:38,000 --> 00:08:42,000
其实它的整个框架也是和

138
00:08:42,000 --> 00:08:47,000
Slam+Slam+建模的框架其实是类似的

139
00:08:47,000 --> 00:08:50,000
因为它也用到一些跟踪的思想

140
00:08:50,000 --> 00:08:53,000
需要实时的估计相机的姿态

141
00:08:53,000 --> 00:08:55,000
然后它后面的Mapping部分

142
00:08:55,000 --> 00:08:57,000
用的不是点云

143
00:08:57,000 --> 00:08:59,000
而是用到三维建模

144
00:08:59,000 --> 00:09:03,000
就是符号距离场的方式进行三维的建模

145
00:09:03,000 --> 00:09:07,000
这个框架其实还是比较经典的

146
00:09:07,000 --> 00:09:09,000
因为它基本上涵盖了

147
00:09:09,000 --> 00:09:11,000
目前三维重建

148
00:09:11,000 --> 00:09:15,000
还有Slam这两个方向的

149
00:09:15,000 --> 00:09:17,000
基本的知识

150
00:09:17,000 --> 00:09:21,000
可以说核心知识都在这个框架里面

151
00:09:21,000 --> 00:09:25,000
然后第三种方法就是一个单目多视角

152
00:09:25,000 --> 00:09:29,000
这也是目前比较火的一个方向

153
00:09:29,000 --> 00:09:31,000
从工业界里也是必要

154
00:09:31,000 --> 00:09:35,000
工业界里也一直在利用这些

155
00:09:35,000 --> 00:09:37,000
方面的技术

156
00:09:37,000 --> 00:09:43,000
单目多视角就是通过多视角的视频

157
00:09:43,000 --> 00:09:47,000
或者是多视角的无序的图像进行

158
00:09:47,000 --> 00:09:51,000
对这个场景进行一个建模

159
00:09:51,000 --> 00:09:57,000
我们在这节课程里面讲的都是无序的图像

160
00:09:57,000 --> 00:09:59,000
无序的图像的话

161
00:09:59,000 --> 00:10:02,000
就是说我得到的这些图像

162
00:10:02,000 --> 00:10:06,000
是不知道事先不知道它的地点

163
00:10:06,000 --> 00:10:08,000
也不知道它的拍摄的时间

164
00:10:08,000 --> 00:10:13,000
所以这个和Slam或跟踪的话

165
00:10:13,000 --> 00:10:16,000
就是一个比较重要的区别

166
00:10:16,000 --> 00:10:20,000
大家这个地方可以说仔细的回想一下

167
00:10:20,000 --> 00:10:23,000
因为如果你出去找工作面试的话

168
00:10:23,000 --> 00:10:28,000
这个应该是比较大的概率会被问到的一个问题

169
00:10:28,000 --> 00:10:32,000
就是这种多视角的重建

170
00:10:32,000 --> 00:10:34,000
三维建模和Slam的一个区别

171
00:10:34,000 --> 00:10:36,000
多视角的话

172
00:10:36,000 --> 00:10:38,000
它图像是无序的

173
00:10:38,000 --> 00:10:40,000
无序的话在匹配的时候

174
00:10:40,000 --> 00:10:43,000
要进行一个非常暴力的匹配

175
00:10:43,000 --> 00:10:46,000
两两图像都要进行匹配

176
00:10:46,000 --> 00:10:48,000
但是这个视频序列

177
00:10:48,000 --> 00:10:52,000
或者说是Slam里面应用到的

178
00:10:52,000 --> 00:10:54,000
它是一个有序的图像序列

179
00:10:54,000 --> 00:10:57,000
所以它在匹配的时候就不需要暴力匹配

180
00:10:57,000 --> 00:10:59,000
而是可以通过前后针

181
00:10:59,000 --> 00:11:02,000
或者通过一个局部窗口的方式

182
00:11:02,000 --> 00:11:04,000
去进行一个匹配

183
00:11:04,000 --> 00:11:07,000
那它只有在汇换检测的时候

184
00:11:07,000 --> 00:11:13,000
会用到一些匹配的范围会比较广一些

185
00:11:13,000 --> 00:11:17,000
单目多视角的话

186
00:11:17,000 --> 00:11:22,000
基本上现在可以完成这个重建的整个流程

187
00:11:22,000 --> 00:11:24,000
输的是图片

188
00:11:24,000 --> 00:11:28,000
然后得到的是带有纹理的三维模型

189
00:11:28,000 --> 00:11:33,000
我们的这个课程也是要走通这个流程

190
00:11:33,000 --> 00:11:35,000
然后就是双目立体视觉

191
00:11:35,000 --> 00:11:40,000
双目立体视觉是通过两个已经标定好的相机

192
00:11:40,000 --> 00:11:43,000
通过视差得到深度图

193
00:11:43,000 --> 00:11:46,000
然后得到三维点云

194
00:11:46,000 --> 00:11:52,000
也是比较常用的一种获取三维点云的方式

195
00:11:52,000 --> 00:12:02,000
所以如果我们是基于图像的方法

196
00:12:02,000 --> 00:12:05,000
基於单目多视角的方法进行建模

197
00:12:05,000 --> 00:12:08,000
它的整个流程就是这样的

198
00:12:08,000 --> 00:12:10,000
就是我先得到图像

199
00:12:10,000 --> 00:12:16,000
然后基于这个图像生成西数点云

200
00:12:16,000 --> 00:12:19,000
其实西数点云也是运动恢复结构

201
00:12:19,000 --> 00:12:22,000
主要采用的是这个运动恢复结构技术

202
00:12:22,000 --> 00:12:27,000
它主要是通过这些图像的匹配

203
00:12:27,000 --> 00:12:34,000
来恢复所有的这个视角所对应的相机的参数

204
00:12:34,000 --> 00:12:36,000
也就是对所有的相机进行注册

205
00:12:36,000 --> 00:12:40,000
同时可以得到相机的内外参数

206
00:12:40,000 --> 00:12:45,000
然后再得到了相机的参数之后

207
00:12:45,000 --> 00:12:48,000
其实也就是对相机进行了标定之后

208
00:12:48,000 --> 00:12:52,000
然后在这个基础之上可以通过多视角立体技术

209
00:12:52,000 --> 00:12:55,000
去得到稠密的点云

210
00:12:55,000 --> 00:13:02,000
在得到稠密的点云之后

211
00:13:02,000 --> 00:13:05,000
然后就是上我们讲的3V充电的一般的流程

212
00:13:05,000 --> 00:13:10,000
通过图文学的一些技术一些算法

213
00:13:10,000 --> 00:13:13,000
去得到3V的这个模型Mesh

214
00:13:13,000 --> 00:13:15,000
三个的网格Mesh

215
00:13:15,000 --> 00:13:19,000
得到Mesh主要是为了便于数据的存储编辑

216
00:13:19,000 --> 00:13:26,000
同时也可以提升渲染的效率和稳定性

217
00:13:26,000 --> 00:13:28,000
在得到Mesh之后

218
00:13:28,000 --> 00:13:33,000
然后我们也可以同时可以通过多视角的这些图像

219
00:13:33,000 --> 00:13:38,000
以及相机的参数进行一个文理的创建

220
00:13:38,000 --> 00:13:40,000
当然这个过程也是全自动的

221
00:13:40,000 --> 00:13:42,000
进行文理的创建

222
00:13:42,000 --> 00:13:45,000
因为如果只是初始创建的文理

223
00:13:45,000 --> 00:13:47,000
它会存在的一些问题

224
00:13:47,000 --> 00:13:52,000
比如说光照不变化引起的缝隙

225
00:13:52,000 --> 00:13:56,000
造成的缝隙会影响集中渲染的逼真程度

226
00:13:56,000 --> 00:13:58,000
所以这个时候就需要

227
00:13:58,000 --> 00:14:03,000
采用一些图像处理的一些算法

228
00:14:03,000 --> 00:14:05,000
对文理进行处理

229
00:14:05,000 --> 00:14:11,000
来去除图像里的缝隙

230
00:14:11,000 --> 00:14:14,000
来提高渲染的逼真度

231
00:14:14,000 --> 00:14:17,000
所以我们这节课就是走这样一个流程

232
00:14:17,000 --> 00:14:22,000
在基于图像的点云生成这里面

233
00:14:22,000 --> 00:14:24,000
会用到特征点特征匹配

234
00:14:24,000 --> 00:14:27,000
以及相机的几何知识

235
00:14:27,000 --> 00:14:33,000
我们这里面主要用的是透视

236
00:14:33,000 --> 00:14:37,000
主要用的是相机的透视模型

237
00:14:41,000 --> 00:14:44,000
所以基于图像的点云生成这部分

238
00:14:44,000 --> 00:14:47,000
尤其是西书点云重建这一部分

239
00:14:47,000 --> 00:14:51,000
基本上是可以学到

240
00:14:51,000 --> 00:14:55,000
我们常用的计算机视觉里的技术

241
00:14:55,000 --> 00:14:57,000
像特征点特征匹配

242
00:14:57,000 --> 00:14:59,000
以及相机的几何模型

243
00:14:59,000 --> 00:15:02,000
以及相机几何模型的约束

244
00:15:02,000 --> 00:15:04,000
像亏蟒调整

245
00:15:04,000 --> 00:15:06,000
也就是BA亏蟒调整

246
00:15:06,000 --> 00:15:11,000
一些数学的模型和优化的方法

247
00:15:11,000 --> 00:15:14,000
以及运动恢复结构

248
00:15:14,000 --> 00:15:17,000
运动恢复结构实际上是一个框架

249
00:15:17,000 --> 00:15:20,000
里面其实包含了相机的匹配

250
00:15:20,000 --> 00:15:23,000
相机初始参数的恢复

251
00:15:23,000 --> 00:15:26,000
就像怎么样

252
00:15:26,000 --> 00:15:28,000
或者讲的再具体一点就是

253
00:15:28,000 --> 00:15:30,000
怎么样从两幅匹配的图像里面

254
00:15:30,000 --> 00:15:33,000
去恢复相机的初始的参数

255
00:15:33,000 --> 00:15:36,000
然后怎么样对相机的参数利用多个视角

256
00:15:36,000 --> 00:15:41,000
对相机的内外参数进行一个非线性的优化

257
00:15:41,000 --> 00:15:47,000
都是在西书点云重建这一部分会讲到

258
00:15:47,000 --> 00:15:49,000
然后稠密点云重建

259
00:15:49,000 --> 00:15:54,000
主要是用到多视角的立体技术

260
00:15:54,000 --> 00:15:57,000
其实就是深度图的估计

261
00:15:57,000 --> 00:15:59,000
每个像素深度的估计

262
00:15:59,000 --> 00:16:04,000
会运到多个视角之间的一个深度3D的约束

263
00:16:04,000 --> 00:16:07,000
比如说我们常用的光度一致性约束

264
00:16:07,000 --> 00:16:10,000
就是两个三维中的物体

265
00:16:10,000 --> 00:16:13,000
在不同的视角之中他们的投影

266
00:16:13,000 --> 00:16:16,000
他们的光度应该是相似的

267
00:16:16,000 --> 00:16:21,000
其实整个的稠密成建这个过程中

268
00:16:21,000 --> 00:16:28,000
基本上都是运到了光度一致性约束

269
00:16:28,000 --> 00:16:30,000
运的非常的频繁

270
00:16:30,000 --> 00:16:36,000
然后到点到模型的重建

271
00:16:36,000 --> 00:16:39,000
会运到一些图形学的一些知识

272
00:16:39,000 --> 00:16:41,000
就是把点云转换成mesh

273
00:16:41,000 --> 00:16:44,000
这个其实是一个非常非常难

274
00:16:44,000 --> 00:16:47,000
也是功能量非常大的一个问题

275
00:16:47,000 --> 00:16:49,000
所以我们讲的时候

276
00:16:49,000 --> 00:16:53,000
只讲一些比较基础的便于实现的一些方法

277
00:16:53,000 --> 00:16:57,000
后面主要涉及到图像的拼接

278
00:16:57,000 --> 00:17:05,000
这个在图像拼接

279
00:17:05,000 --> 00:17:11,000
就是image stitching大规模的场景的图像拼接里面

280
00:17:11,000 --> 00:17:13,000
会经常运到的

281
00:17:13,000 --> 00:17:17,000
这个有好多的技术重叠的地方

282
00:17:17,000 --> 00:17:21,000
包括图像的编辑

283
00:17:21,000 --> 00:17:24,000
比如说我们常用的博宗图像编辑算法

284
00:17:24,000 --> 00:17:30,000
这个也是属于图像融合里面的一些技术

285
00:17:30,000 --> 00:17:32,000
所以就是总共三维模型重建

286
00:17:32,000 --> 00:17:36,000
其实它是一个偏工虫是一个系统框架

287
00:17:36,000 --> 00:17:39,000
但是同时也涉及到多个学科

288
00:17:39,000 --> 00:17:41,000
比如说计算机视觉

289
00:17:41,000 --> 00:17:43,000
图像处理

290
00:17:43,000 --> 00:17:45,000
还有这个计算机图形学

291
00:17:45,000 --> 00:17:47,000
这也是为什么这个三维模型重建

292
00:17:47,000 --> 00:17:51,000
它的学起来比较有难度的地方

293
00:17:51,000 --> 00:17:54,000
因为它确实涉及到多个学科交叉

294
00:17:54,000 --> 00:17:57,000
同时它的知识点也都比较散乱

295
00:17:57,000 --> 00:17:59,000
所以其实如果说

296
00:17:59,000 --> 00:18:03,000
能从头到尾的学我们这门课

297
00:18:03,000 --> 00:18:08,000
然后从头到尾的把配它的代码给看一遍

298
00:18:08,000 --> 00:18:11,000
甚至有些地方公式可以推一遍

299
00:18:11,000 --> 00:18:16,000
其实基本上就这个领域内的所有的这些问题

300
00:18:16,000 --> 00:18:18,000
基本上你都会了解到

301
00:18:18,000 --> 00:18:21,000
而且就是相关的技术

302
00:18:21,000 --> 00:18:23,000
也可以很好地掌握

303
00:18:23,000 --> 00:18:36,000
这是一些重建的案例

304
00:18:36,000 --> 00:18:42,000
就是用我们配套的这些代码跑出来的结果

305
00:18:42,000 --> 00:18:44,000
这个是一个倾斜摄影的

306
00:18:44,000 --> 00:18:47,000
三摄影头的数据重建的效果

307
00:18:47,000 --> 00:18:58,000
是对一个山地的局部场景进行的建模

308
00:18:58,000 --> 00:19:02,000
倾斜摄影就是我们常见的黄拍数据

309
00:19:02,000 --> 00:19:04,000
比如说单摄像头的

310
00:19:04,000 --> 00:19:06,000
那就是一个摄像头朝下

311
00:19:06,000 --> 00:19:09,000
这种摄像头它拍不到建筑的侧面

312
00:19:09,000 --> 00:19:13,000
所以重建出来的建筑只有屋顶没有侧面

313
00:19:13,000 --> 00:19:15,000
所以你就看上去的话

314
00:19:15,000 --> 00:19:17,000
它很像一个融化的巧克力

315
00:19:17,000 --> 00:19:19,000
摊在地上的

316
00:19:19,000 --> 00:19:22,000
而倾斜摄影它不单有

317
00:19:22,000 --> 00:19:25,000
同时它同时会获取三张图片

318
00:19:25,000 --> 00:19:27,000
比如说这个倾斜摄影三摄像头的

319
00:19:27,000 --> 00:19:28,000
一个摄像头朝下

320
00:19:28,000 --> 00:19:30,000
两个摄像头朝侧面

321
00:19:30,000 --> 00:19:32,000
所以就是运来建模的时候

322
00:19:32,000 --> 00:19:35,000
它不单可以得到房景信息

323
00:19:35,000 --> 00:19:37,000
也可以得到这个墙面的信息

324
00:19:37,000 --> 00:19:40,000
所以它重建出来的模型就会比较完整

325
00:19:40,000 --> 00:19:43,000
这是我们重建的一个案例

326
00:19:43,000 --> 00:19:53,000
跟我们这节课相关的一些商业软件

327
00:19:53,000 --> 00:19:55,000
就是RQ3D

328
00:19:55,000 --> 00:19:57,000
这个是比较早的

329
00:19:57,000 --> 00:20:00,000
一个法国的创意公司做的一款产品

330
00:20:00,000 --> 00:20:03,000
在2011年的时候

331
00:20:03,000 --> 00:20:05,000
他们已经开始发布这款产品

332
00:20:05,000 --> 00:20:11,000
后来这个软件

333
00:20:11,000 --> 00:20:16,000
这公司被美国一家做3D的公司收购了

334
00:20:16,000 --> 00:20:21,000
所以他们这个算是在三维建模的商业软件方面

335
00:20:21,000 --> 00:20:23,000
走得比较早

336
00:20:23,000 --> 00:20:25,000
而且也算是走得比较成功

337
00:20:25,000 --> 00:20:30,000
后面这个第二款软件

338
00:20:30,000 --> 00:20:34,000
是香港科技大学全龙老师他们组开发的

339
00:20:34,000 --> 00:20:39,000
一个跟大家无人机合作的这样一个项目

340
00:20:41,000 --> 00:20:44,000
可以通过无人机上传视频序列

341
00:20:44,000 --> 00:20:46,000
然后重建模型

342
00:20:46,000 --> 00:20:51,000
他们的效果和RQ3D其实已经完全接近了

343
00:20:51,000 --> 00:21:00,000
最后这个是俄罗斯的一款单机版的建模软件

344
00:21:00,000 --> 00:21:04,000
它这个效果也还可以

345
00:21:04,000 --> 00:21:06,000
这个效果也还可以

346
00:21:07,000 --> 00:21:12,000
所有的这些商业软件的技术路线都是

347
00:21:12,000 --> 00:21:15,000
他们的技术路线都是这样的

348
00:21:15,000 --> 00:21:18,000
当然他们有些细节会做得比较好

349
00:21:18,000 --> 00:21:20,000
比如说

350
00:21:20,000 --> 00:21:23,000
在点云到模型重建之后

351
00:21:23,000 --> 00:21:25,000
他们会利用多视角

352
00:21:25,000 --> 00:21:29,000
在对网格进行多视角的优化

353
00:21:29,000 --> 00:21:34,000
因为如果点云

354
00:21:36,000 --> 00:21:38,000
存在这些空洞的话

355
00:21:38,000 --> 00:21:41,000
那么我重建出来的网格就会失真

356
00:21:41,000 --> 00:21:44,000
比如说像建筑的面

357
00:21:44,000 --> 00:21:46,000
就有可能会发生一些形变

358
00:21:46,000 --> 00:21:48,000
像面包那样的膨胀起来

359
00:21:48,000 --> 00:21:52,000
这样的话就是它会影响最终的一个效果

360
00:21:52,000 --> 00:21:57,000
所以为了进一步提升它的精度

361
00:21:57,000 --> 00:21:59,000
就可以利用多视角

362
00:21:59,000 --> 00:22:02,000
和利用它已经得到的这些TOP的信息

363
00:22:02,000 --> 00:22:05,000
来进行一个多视角的优化

364
00:22:05,000 --> 00:22:08,000
这个是一个非常重要

365
00:22:08,000 --> 00:22:10,000
对提升效果是非常重要的一步

366
00:22:10,000 --> 00:22:13,000
尤其是对呈现一些建筑的场景

367
00:22:13,000 --> 00:22:17,000
可以大幅度的提高一些它的避震重度

368
00:22:17,000 --> 00:22:22,000
这是商业软件里面的好多一些技术细节

369
00:22:22,000 --> 00:22:25,000
那这节课程根据

370
00:22:25,000 --> 00:22:29,000
这个在没呈现的一些流程

371
00:22:29,000 --> 00:22:33,000
我们设置了这样一些八个小节的课程

372
00:22:33,000 --> 00:22:35,000
这八个小节其实都可以分布在上面

373
00:22:35,000 --> 00:22:37,000
我们介绍的那几个模块当中

374
00:22:37,000 --> 00:22:42,000
第一个课程我们讲一个特种点的检测与匹配

375
00:22:42,000 --> 00:22:46,000
就是在3V充电里面用到的一些特种点

376
00:22:46,000 --> 00:22:50,000
其实现在来说

377
00:22:50,000 --> 00:22:54,000
很长时间可以说特种点

378
00:22:54,000 --> 00:22:58,000
就是原先在生物学习之前

379
00:22:58,000 --> 00:23:01,000
基本上都是人工设计的一些特种点

380
00:23:01,000 --> 00:23:04,000
就是花费好多的时间

381
00:23:04,000 --> 00:23:07,000
然后要很多的人力

382
00:23:07,000 --> 00:23:10,000
很长的时间去验证一种特种点

383
00:23:10,000 --> 00:23:14,000
包括到现在我们能数的上来的比较熟悉的这些特种点

384
00:23:14,000 --> 00:23:17,000
也就是ZIP,SURF,还有就是

385
00:23:17,000 --> 00:23:21,000
像这个ORB这些快速的FAST

386
00:23:21,000 --> 00:23:22,000
这些特种点

387
00:23:22,000 --> 00:23:26,000
其实到目前为止没有太大的一些发展

388
00:23:26,000 --> 00:23:29,000
但是这些设计出的特种点

389
00:23:29,000 --> 00:23:32,000
比如像ZIP的确实是比较

390
00:23:32,000 --> 00:23:36,000
是到目前为止还是比较重要的一些特种点

391
00:23:36,000 --> 00:23:39,000
当然根据一些不同的需求

392
00:23:39,000 --> 00:23:41,000
我们选择特种点也不一样

393
00:23:41,000 --> 00:23:44,000
比如说如果我对实质性没有要求

394
00:23:44,000 --> 00:23:50,000
我们就可以采用ZIP的或者SURF这些特种点

395
00:23:50,000 --> 00:23:51,000
因为它确实比较稳定

396
00:23:51,000 --> 00:23:53,000
但如果你对实质性的要求

397
00:23:53,000 --> 00:23:56,000
我要求它重建的

398
00:23:56,000 --> 00:23:59,000
或者相机参数恢复是实时的

399
00:23:59,000 --> 00:24:01,000
那么我们就可以用一些ORB或者FAST

400
00:24:01,000 --> 00:24:04,000
这种思路的一些特种点

401
00:24:04,000 --> 00:24:07,000
当然现在也会有一些

402
00:24:07,000 --> 00:24:09,000
基于深度学习的人工的

403
00:24:09,000 --> 00:24:14,000
学习的一些特种点或者关键点

404
00:24:14,000 --> 00:24:18,000
这些一般都是针对一些特定的应用

405
00:24:18,000 --> 00:24:21,000
比如说像人脸观念的检测

406
00:24:21,000 --> 00:24:24,000
其实也是属于其中的一个范畴

407
00:24:24,000 --> 00:24:29,000
但是它不是完全符合特种点

408
00:24:29,000 --> 00:24:34,000
当然你可以如果说有针对你的实际应用

409
00:24:34,000 --> 00:24:36,000
你也可以去学一些特种点

410
00:24:36,000 --> 00:24:39,000
比如说像现在在做地图定位的时候

411
00:24:39,000 --> 00:24:42,000
就可以通过深度学习去学一些特种点

412
00:24:42,000 --> 00:24:43,000
学一些描述字

413
00:24:43,000 --> 00:24:47,000
然后进行一个在进行定位的时候

414
00:24:47,000 --> 00:24:50,000
我们可以通过特种点的匹配

415
00:24:50,000 --> 00:24:52,000
来得到这个相机的位置

416
00:24:52,000 --> 00:24:54,000
但是就是深度学习

417
00:24:54,000 --> 00:24:56,000
目前来说它的主要的问题

418
00:24:56,000 --> 00:24:59,000
就是应用场景还是比较受限

419
00:24:59,000 --> 00:25:03,000
比如说像计算能力和实时性这一块的话

420
00:25:03,000 --> 00:25:05,000
就是到目前为止还没有满足

421
00:25:05,000 --> 00:25:08,000
实际场景的一个需求

422
00:25:08,000 --> 00:25:12,000
这是第一节课

423
00:25:12,000 --> 00:25:17,000
第二节课是讲相机的模型和对极几何

424
00:25:17,000 --> 00:25:21,000
这里面我们主要讲相机的透视模型

425
00:25:21,000 --> 00:25:27,000
对极几何主要就是讲两个相机之间的相对的约束

426
00:25:27,000 --> 00:25:31,000
其实这节课主要是解决的一个问题是什么呢

427
00:25:31,000 --> 00:25:35,000
就是我告诉你我的相机是透视的模型

428
00:25:35,000 --> 00:25:40,000
然后告诉你两幅已经匹配好的图像

429
00:25:40,000 --> 00:25:43,000
通过我们第一节课中检测到的特种点

430
00:25:43,000 --> 00:25:46,000
和匹配之后的匹配对

431
00:25:46,000 --> 00:25:51,000
然后我要恢复这两个相机之间的一个相对的位置

432
00:25:51,000 --> 00:25:56,000
也就是说要知道相机的一个相对的参数

433
00:25:56,000 --> 00:25:58,000
那么我们就需要用到这个对极几何

434
00:25:58,000 --> 00:26:02,000
这个是比较核心的

435
00:26:02,000 --> 00:26:05,000
是这个三维专机视觉里面比较核心的

436
00:26:05,000 --> 00:26:09,000
对极几何里面最主要的

437
00:26:09,000 --> 00:26:12,000
比如说两个相机之间的一个模型

438
00:26:12,000 --> 00:26:15,000
像这个本中矩阵和本质矩阵

439
00:26:15,000 --> 00:26:19,000
这个是里面是最长硬的

440
00:26:19,000 --> 00:26:23,000
同时我们也会讲到本中矩阵和本质矩阵

441
00:26:23,000 --> 00:26:27,000
是怎么来描述这两个相机

442
00:26:27,000 --> 00:26:29,000
两个相机之间的一个约束

443
00:26:29,000 --> 00:26:34,000
同时怎么通过本质矩阵或者是本中矩阵

444
00:26:34,000 --> 00:26:37,000
去恢复相机的相对参数

445
00:26:37,000 --> 00:26:39,000
比如旋征矩阵和频线量

446
00:26:39,000 --> 00:26:42,000
这个是这节课讲的

447
00:26:42,000 --> 00:26:47,000
第三节课和第四节课主要是讲运动恢复结构

448
00:26:47,000 --> 00:26:49,000
就是Dragwell模式

449
00:26:49,000 --> 00:26:55,000
通过多视角的图像去得到相机的

450
00:26:55,000 --> 00:26:59,000
对所有场景的相机进行对齐

451
00:26:59,000 --> 00:27:02,000
也就是恢复所有相机的一个参数

452
00:27:02,000 --> 00:27:04,000
对相机进行标定

453
00:27:04,000 --> 00:27:06,000
第三节课从运动恢复

454
00:27:06,000 --> 00:27:08,000
从运动到结构的第一节课

455
00:27:08,000 --> 00:27:15,000
我们主要是讲一些基本的算法

456
00:27:15,000 --> 00:27:18,000
比如说PnP算法

457
00:27:18,000 --> 00:27:24,000
就是在得到3D特种点和2D图像上的对应点

458
00:27:24,000 --> 00:27:26,000
来恢复相机的参数

459
00:27:26,000 --> 00:27:29,000
比如说像捆绑调整

460
00:27:29,000 --> 00:27:32,000
也是BA优化

461
00:27:32,000 --> 00:27:40,000
就是在得到多个相机的初始参数之后

462
00:27:40,000 --> 00:27:45,000
然后对所有的参数同时进行非线性的优化

463
00:27:45,000 --> 00:27:52,000
这里面我们会提供BA问题的推导公式

464
00:27:52,000 --> 00:27:55,000
就是具体的是怎么优化的

465
00:27:55,000 --> 00:27:57,000
比如说我们用IM算法

466
00:27:57,000 --> 00:27:59,000
一种比较特殊的梯度下降的算法

467
00:27:59,000 --> 00:28:01,000
对它进行优化

468
00:28:01,000 --> 00:28:06,000
这个LM算法的原理

469
00:28:06,000 --> 00:28:09,000
实现的细节我们都会提供

470
00:28:09,000 --> 00:28:15,000
同时也会提供捆绑调整的推导

471
00:28:15,000 --> 00:28:18,000
就是给你这样一个公式

472
00:28:18,000 --> 00:28:21,000
你要去应用梯度下降法进行优化

473
00:28:21,000 --> 00:28:25,000
首先你要得到它的亚克比矩阵

474
00:28:25,000 --> 00:28:31,000
我们这个课程里面会提供如何去推导

475
00:28:31,000 --> 00:28:36,000
关于相机参数和三维点的亚克比矩阵

476
00:28:36,000 --> 00:28:38,000
所以这一课也是特别特别重要

477
00:28:38,000 --> 00:28:41,000
基本上如果你能够自己推出亚克比矩阵

478
00:28:41,000 --> 00:28:44,000
然后自己去实现优化

479
00:28:44,000 --> 00:28:47,000
那么基本上最核心的一些细节你就掌握了

480
00:28:47,000 --> 00:28:50,000
那第四节课呢

481
00:28:50,000 --> 00:28:52,000
是在第三节课的基础之上

482
00:28:52,000 --> 00:28:53,000
从运动到结构

483
00:28:53,000 --> 00:28:57,000
第三节课我们是讲了两个视角之间的约束

484
00:28:57,000 --> 00:29:01,000
就是在得到两个

485
00:29:01,000 --> 00:29:03,000
在一对匹配的图像

486
00:29:03,000 --> 00:29:06,000
以及图像里面的匹配的特种点

487
00:29:06,000 --> 00:29:08,000
然后我们要恢复

488
00:29:08,000 --> 00:29:11,000
通过第二节课恢复

489
00:29:11,000 --> 00:29:14,000
两个相机之间的相对的参数

490
00:29:14,000 --> 00:29:17,000
同时也进行一个非线性的优化

491
00:29:17,000 --> 00:29:20,000
就是BA优化

492
00:29:20,000 --> 00:29:23,000
最后来得到比较准确的相机模型

493
00:29:23,000 --> 00:29:25,000
那第四节课呢

494
00:29:25,000 --> 00:29:28,000
我们要进行多视角的重建

495
00:29:28,000 --> 00:29:31,000
在两个视角的基础之上

496
00:29:31,000 --> 00:29:34,000
怎么样去添加其他的视角

497
00:29:34,000 --> 00:29:38,000
怎么样去得到新添加视角的初始的参数

498
00:29:38,000 --> 00:29:45,000
然后怎么样对所有的相机参数进行一个全局的非线性优化

499
00:29:45,000 --> 00:29:47,000
就是BA优化

500
00:29:47,000 --> 00:29:50,000
这是第四节课里面要讲的

501
00:29:50,000 --> 00:29:53,000
但其实呢

502
00:29:53,000 --> 00:29:55,000
这个BA问题呢

503
00:29:55,000 --> 00:29:57,000
是一个

504
00:29:57,000 --> 00:30:01,000
它其实可以说是一种优化的框架

505
00:30:01,000 --> 00:30:03,000
因为针对不同的场景

506
00:30:03,000 --> 00:30:06,000
我们所需要的具体的这个

507
00:30:06,000 --> 00:30:07,000
不同的任务

508
00:30:07,000 --> 00:30:09,000
我们需要的具体的模型也不一样

509
00:30:09,000 --> 00:30:12,000
比如说最常用的quantum调整

510
00:30:12,000 --> 00:30:15,000
我们需要对相机的内参数

511
00:30:15,000 --> 00:30:18,000
外参数还有三位点的座标

512
00:30:18,000 --> 00:30:19,000
同时进行优化

513
00:30:19,000 --> 00:30:21,000
但是也有的一些场景呢

514
00:30:21,000 --> 00:30:22,000
不需要对三位点

515
00:30:22,000 --> 00:30:26,000
只需要对相机的参数进行优化

516
00:30:26,000 --> 00:30:27,000
还有一些场景

517
00:30:27,000 --> 00:30:29,000
只需要对相机的外参数进行优化

518
00:30:29,000 --> 00:30:31,000
内参数固定的

519
00:30:31,000 --> 00:30:33,000
如果你想

520
00:30:33,000 --> 00:30:38,000
可以很熟练的解决这些问题的话

521
00:30:38,000 --> 00:30:40,000
那么你就需要对BA问题

522
00:30:40,000 --> 00:30:42,000
有一个非常深刻的一个理解

523
00:30:42,000 --> 00:30:43,000
这个时候呢

524
00:30:43,000 --> 00:30:45,000
你自己去推一下公式

525
00:30:45,000 --> 00:30:47,000
自己去实现一下就比较必要

526
00:30:47,000 --> 00:30:50,000
那第三次节课就掌握了

527
00:30:50,000 --> 00:30:52,000
三次节课的这些知识呢

528
00:30:52,000 --> 00:30:55,000
你基本上就可以完成这些任务

529
00:30:55,000 --> 00:30:58,000
第五节课是这个重密点营的重建

530
00:30:58,000 --> 00:30:59,000
重密点营的重建

531
00:30:59,000 --> 00:31:02,000
就是在也是在前面这些基础之上

532
00:31:02,000 --> 00:31:04,000
因为我们其实讲的这个课呢

533
00:31:04,000 --> 00:31:06,000
其实它是有一个逻辑关系的

534
00:31:06,000 --> 00:31:08,000
就是从头到尾下来

535
00:31:08,000 --> 00:31:10,000
就是完成了3V重建的这个流程

536
00:31:10,000 --> 00:31:11,000
所以第五节课呢

537
00:31:11,000 --> 00:31:14,000
也是依赖于前面这些课的结果

538
00:31:14,000 --> 00:31:16,000
比如说

539
00:31:16,000 --> 00:31:19,000
我进行重密点营的重建

540
00:31:19,000 --> 00:31:22,000
那么我就需要每个相机的参数

541
00:31:22,000 --> 00:31:24,000
也就是说我要求这个相机呢

542
00:31:24,000 --> 00:31:26,000
已经是注册好的

543
00:31:26,000 --> 00:31:29,000
它的内外参数我已经是知道的

544
00:31:29,000 --> 00:31:31,000
然后呢

545
00:31:31,000 --> 00:31:34,000
进行重密点营的重建

546
00:31:34,000 --> 00:31:38,000
它会用到这个光度一致性的约束

547
00:31:38,000 --> 00:31:39,000
这个约束呢

548
00:31:39,000 --> 00:31:42,000
是基本上是这个

549
00:31:42,000 --> 00:31:45,000
所有的DOM是个立体视觉里面

550
00:31:45,000 --> 00:31:48,000
立体视觉技术里面是必备的

551
00:31:48,000 --> 00:31:49,000
一个技术

552
00:31:49,000 --> 00:31:51,000
然后

553
00:31:51,000 --> 00:31:54,000
在得到这个光度一致性约束之后呢

554
00:31:54,000 --> 00:32:00,000
也要对这个深度进行优化

555
00:32:00,000 --> 00:32:03,000
因为我们要得到3V点营

556
00:32:03,000 --> 00:32:04,000
其实呢

557
00:32:04,000 --> 00:32:08,000
一种常用的方法就是恢复每个相数的深度

558
00:32:08,000 --> 00:32:10,000
有了这个深度之后

559
00:32:10,000 --> 00:32:13,000
我们就可以得到它的3D空间中的位置

560
00:32:13,000 --> 00:32:17,000
所以就是相当于是这个重密点营重建呢

561
00:32:17,000 --> 00:32:19,000
就是对每个视角进行一个深度的

562
00:32:19,000 --> 00:32:21,000
深度图的一个重建

563
00:32:21,000 --> 00:32:24,000
那么这里面就会涉及到一个基本的一些视觉建模

564
00:32:24,000 --> 00:32:28,000
比如说基本上现在的一些算法呢

565
00:32:28,000 --> 00:32:32,000
都会把深度

566
00:32:32,000 --> 00:32:36,000
都会把这个3D点营呢

567
00:32:36,000 --> 00:32:39,000
建模成为一个3D空间中的3V点

568
00:32:39,000 --> 00:32:43,000
然后建模成为一个3D的空间的patch

569
00:32:43,000 --> 00:32:47,000
这个patch的中心呢就是3V点的空间位置

570
00:32:47,000 --> 00:32:49,000
这个patch的法线量

571
00:32:49,000 --> 00:32:52,000
就是这个

572
00:32:52,000 --> 00:32:54,000
这个patch的朝向

573
00:32:54,000 --> 00:32:56,000
所以说呢

574
00:32:56,000 --> 00:32:58,000
有一个很小的patch

575
00:32:58,000 --> 00:33:01,000
也就是你可以列成空间中的一个很小的巨型

576
00:33:01,000 --> 00:33:04,000
那么其实它同时就包含了

577
00:33:04,000 --> 00:33:07,000
3D的位置和法线量这两个信息

578
00:33:07,000 --> 00:33:09,000
那通过调整

579
00:33:09,000 --> 00:33:12,000
通过调整这个

580
00:33:12,000 --> 00:33:16,000
空间的位置和这个法线量的朝向

581
00:33:16,000 --> 00:33:19,000
那么我们就可以得到这个

582
00:33:19,000 --> 00:33:24,000
这个patch在不同的视角里面的一个投影

583
00:33:24,000 --> 00:33:28,000
通过计算这个投影之间的光度一致性

584
00:33:28,000 --> 00:33:31,000
就可以找到一个最优的

585
00:33:31,000 --> 00:33:34,000
深度值或者是这个

586
00:33:34,000 --> 00:33:37,000
这个空间位置和法线量

587
00:33:37,000 --> 00:33:40,000
那这个呢其实就是虫蜜重建里面最核心的一个技术

588
00:33:40,000 --> 00:33:43,000
最核心的一个技术

589
00:33:43,000 --> 00:33:46,000
然后得到虫蜜点营和法线量之后

590
00:33:46,000 --> 00:33:49,000
就会完成点营到网格的表面重建

591
00:33:49,000 --> 00:33:53,000
这个地方呢我们主要是讲这个隐含数的一个重建

592
00:33:53,000 --> 00:33:56,000
从点营到网格的重建

593
00:33:56,000 --> 00:33:59,000
其实还有一些像得了内

594
00:33:59,000 --> 00:34:02,000
像得了内的一些重建

595
00:34:02,000 --> 00:34:05,000
这些都是一些比较简单的方法

596
00:34:05,000 --> 00:34:08,000
隐含数相对来说比较稳定

597
00:34:08,000 --> 00:34:11,000
比较稳定然后能够描述我们常见的

598
00:34:11,000 --> 00:34:14,000
几乎我们常见的这些物体的形状

599
00:34:14,000 --> 00:34:17,000
几乎我们常见的这些物体的形状

600
00:34:17,000 --> 00:34:20,000
隐含数也分局部的隐含数和全局的隐含数

601
00:34:20,000 --> 00:34:23,000
这里面我们这节课里面主要讲这个

602
00:34:23,000 --> 00:34:26,000
基于局部的隐含数的一些重建方法

603
00:34:26,000 --> 00:34:29,000
主要的优势就是速度比较快

604
00:34:29,000 --> 00:34:32,000
也是实现起来相对简单一些

605
00:34:32,000 --> 00:34:35,000
在得到网格之后然后进行一个

606
00:34:35,000 --> 00:34:38,000
文体的重建和文体图像的重建

607
00:34:38,000 --> 00:34:41,000
和编辑那这里面主要用到了一些

608
00:34:41,000 --> 00:34:44,000
图文学的一些知识当然也会用到一些

609
00:34:44,000 --> 00:34:47,000
优化比如说全局的颜色调整

610
00:34:47,000 --> 00:34:50,000
和薄松的薄松图像

611
00:34:50,000 --> 00:34:53,000
编辑这节课里面

612
00:34:53,000 --> 00:34:56,000
如果你自己去实现的话你就会知道

613
00:34:56,000 --> 00:34:59,000
怎么样去构建薄松方程

614
00:34:59,000 --> 00:35:02,000
怎么样去解这个线性方程

615
00:35:02,000 --> 00:35:05,000
这是第七八节课里面有的

616
00:35:05,000 --> 00:35:08,000
其实现在来说我们讲的这些课程

617
00:35:08,000 --> 00:35:11,000
都是一些比较基础的

618
00:35:11,000 --> 00:35:14,000
因为在深度学习之前

619
00:35:14,000 --> 00:35:17,000
因为在深度学习之前

620
00:35:17,000 --> 00:35:20,000
基本上三面重建就是这样一个技术路线

621
00:35:20,000 --> 00:35:23,000
其实深度学习兴起之后也在

622
00:35:23,000 --> 00:35:26,000
跟三维去做一些结合

623
00:35:26,000 --> 00:35:29,000
其实可以这样说就是现在的工业界

624
00:35:29,000 --> 00:35:32,000
仅仅是只做2D的深度学习

625
00:35:32,000 --> 00:35:35,000
其实基本上已经发展到了一个

626
00:35:35,000 --> 00:35:38,000
一个很顶端就很难再有提升

627
00:35:38,000 --> 00:35:41,000
或者改进了所以如果你关注

628
00:35:41,000 --> 00:35:44,000
现在的会议的话你会发现

629
00:35:44,000 --> 00:35:47,000
在3D的任务上这个深度学习在慢慢的

630
00:35:47,000 --> 00:35:50,000
而且工作特别多

631
00:35:50,000 --> 00:35:53,000
18年的ECCV应该有50%以上的

632
00:35:53,000 --> 00:35:56,000
都是3D视觉相关的深度学习的拥有

633
00:35:56,000 --> 00:35:59,000
在这里面其实我们每一个模块都可以

634
00:35:59,000 --> 00:36:02,000
用深度学习去做一些任务

635
00:36:02,000 --> 00:36:05,000
当然不管它是不是实用

636
00:36:05,000 --> 00:36:08,000
但是至少可以做一些工作

637
00:36:08,000 --> 00:36:11,000
比如说像特重点的检测与匹配

638
00:36:11,000 --> 00:36:14,000
在人脸观念点里面其实已经可以提供一些思路

639
00:36:14,000 --> 00:36:17,000
另外也有一些工作去做描述仔细的生存

640
00:36:17,000 --> 00:36:20,000
比如说我不是检测特重点

641
00:36:20,000 --> 00:36:23,000
我是检测空间中的一个面片

642
00:36:23,000 --> 00:36:26,000
一个patch我去进行

643
00:36:26,000 --> 00:36:29,000
一个patch之间的匹配与异级别的匹配

644
00:36:29,000 --> 00:36:32,000
这个也是我们

645
00:36:32,000 --> 00:36:35,000
在ECV2018里面的一个工作

646
00:36:35,000 --> 00:36:38,000
进行patch匹配之后

647
00:36:38,000 --> 00:36:41,000
实际上每匹配上一个patch

648
00:36:41,000 --> 00:36:44,000
其实我就可以得到空间中的3D面片

649
00:36:44,000 --> 00:36:47,000
这样的话建模起来会更加方便一些

650
00:36:47,000 --> 00:36:50,000
而且就是

651
00:36:50,000 --> 00:36:53,000
与异级别更高的匹配的话

652
00:36:53,000 --> 00:36:56,000
它也更加准确对于恢复相机的参数模型

653
00:36:56,000 --> 00:36:59,000
比仅仅是用特重点工具有优势

654
00:36:59,000 --> 00:37:02,000
当然提供一些

655
00:37:02,000 --> 00:37:05,000
与异信息也可以为匹配提供

656
00:37:05,000 --> 00:37:08,000
一些帮助

657
00:37:08,000 --> 00:37:11,000
比如说在两幅图像之间

658
00:37:11,000 --> 00:37:14,000
我可以先通过与异一些分割进行一些分析

659
00:37:14,000 --> 00:37:17,000
那么我特重点的匹配肯定是在同类物体之间

660
00:37:17,000 --> 00:37:20,000
如果发生了一些交叉

661
00:37:20,000 --> 00:37:23,000
比如说我房子匹配在树上

662
00:37:23,000 --> 00:37:26,000
那么这个匹配可以事先进行删除掉

663
00:37:26,000 --> 00:37:29,000
来提升这个匹配的准确率

664
00:37:29,000 --> 00:37:32,000
这些是与异的一些重建

665
00:37:32,000 --> 00:37:35,000
现在应该是比较前沿的一些探索

666
00:37:35,000 --> 00:37:38,000
很多机构

667
00:37:38,000 --> 00:37:41,000
包括公司

668
00:37:41,000 --> 00:37:44,000
包括一些很牛的一些学术机构

669
00:37:44,000 --> 00:37:47,000
现在都在做一些与异的

670
00:37:47,000 --> 00:37:50,000
与三维建模或是与异与SAM

671
00:37:50,000 --> 00:37:53,000
结合的一些工作

672
00:37:53,000 --> 00:37:56,000
现在都在尝试

673
00:37:56,000 --> 00:37:59,000
所以如果是做学术的话

674
00:37:59,000 --> 00:38:02,000
可以去探索一下这个方向

675
00:38:02,000 --> 00:38:05,000
这个领域也有可能会被做大调

676
00:38:05,000 --> 00:38:08,000
还有相机模型和对机结合

677
00:38:08,000 --> 00:38:11,000
包括下面的运动

678
00:38:11,000 --> 00:38:14,000
运动会议结构

679
00:38:14,000 --> 00:38:17,000
现在也有在做深度学习

680
00:38:17,000 --> 00:38:20,000
做BA、深度学习、做重力电源重建

681
00:38:20,000 --> 00:38:23,000
深度学习、做BA呢

682
00:38:23,000 --> 00:38:26,000
你要知道什么是可以学习的

683
00:38:26,000 --> 00:38:29,000
什么是不能学习的

684
00:38:29,000 --> 00:38:32,000
什么是可以学习的

685
00:38:32,000 --> 00:38:35,000
这些就是一个问题的本质

686
00:38:35,000 --> 00:38:38,000
重力电源重建这一部分

687
00:38:38,000 --> 00:38:41,000
你可以去做

688
00:38:41,000 --> 00:38:44,000
看一些关注一些深度学习的

689
00:38:44,000 --> 00:38:47,000
光流估计或者深度学习的

690
00:38:47,000 --> 00:38:50,000
直接做深度估计这些工作

691
00:38:50,000 --> 00:38:53,000
据我了解的是

692
00:38:53,000 --> 00:38:56,000
现在仅仅在2D图像上去做一些强行的回归

693
00:38:56,000 --> 00:38:59,000
深度值现在还并不是十分准确

694
00:38:59,000 --> 00:39:02,000
也没有到了一些可用的程度

695
00:39:02,000 --> 00:39:05,000
所以把3D的一些约束

696
00:39:05,000 --> 00:39:08,000
几何的约束去放到

697
00:39:08,000 --> 00:39:11,000
深度图的估计或者光流的估计里面

698
00:39:11,000 --> 00:39:14,000
应该是一个比较有价值的研究方向

699
00:39:14,000 --> 00:39:17,000
当然现在也有一些工作

700
00:39:17,000 --> 00:39:20,000
做点一大网格的隐含数的回归

701
00:39:20,000 --> 00:39:23,000
最近我看了一篇叫

702
00:39:23,000 --> 00:39:26,000
C-Dip

703
00:39:26,000 --> 00:39:29,000
就是用深度

704
00:39:29,000 --> 00:39:32,000
用这个神经网络去做隐含数的

705
00:39:32,000 --> 00:39:35,000
一个重建

706
00:39:35,000 --> 00:39:38,000
隐含数的一个重建

707
00:39:38,000 --> 00:39:41,000
就是输入的是点云

708
00:39:41,000 --> 00:39:44,000
然后得到的是一个隐含数

709
00:39:44,000 --> 00:39:47,000
其实得到隐含数之后基本上就是得到网格

710
00:39:47,000 --> 00:39:50,000
所以基本上在做深度学习再往各个领域深透

711
00:39:50,000 --> 00:39:53,000
文理图像的创建与编辑也有

712
00:39:53,000 --> 00:39:56,000
比如说会用这个GAN

713
00:39:56,000 --> 00:39:59,000
用对抗网络去做文理图像的一些区缝操作

714
00:39:59,000 --> 00:40:02,000
也有一些这样的相关的工作

715
00:40:02,000 --> 00:40:05,000
所以其实呢

716
00:40:05,000 --> 00:40:08,000
我们在讲三位重建现在不光是

717
00:40:08,000 --> 00:40:11,000
仅仅是三位重建这个问题

718
00:40:11,000 --> 00:40:14,000
其实也是包含著其他的一些相关的

719
00:40:14,000 --> 00:40:17,000
比如说现身的深度学习相关的一些内容

720
00:40:17,000 --> 00:40:20,000
甚至如果你是做研究的话

721
00:40:20,000 --> 00:40:23,000
你可以往这个方向掌握了3D

722
00:40:23,000 --> 00:40:26,000
三位建模的这些基本的技术之后

723
00:40:26,000 --> 00:40:29,000
那么你就可以去做一些

724
00:40:29,000 --> 00:40:32,000
碰家的前沿的一些技术

725
00:40:32,000 --> 00:40:35,000
未来几年之内

726
00:40:35,000 --> 00:40:38,000
3D视觉应该是比较火的一个方向

727
00:40:38,000 --> 00:40:44,000
这是我们课程的一些

728
00:40:44,000 --> 00:40:47,000
参考书

729
00:40:47,000 --> 00:40:50,000
这里面是一些计算机视觉

730
00:40:50,000 --> 00:40:53,000
这两个是一个比较新的

731
00:40:53,000 --> 00:40:56,000
一些计算机视觉的参考书

732
00:40:56,000 --> 00:40:59,000
这两个难以重度不太一样

733
00:40:59,000 --> 00:41:02,000
第一本是偏重于工业型的

734
00:41:02,000 --> 00:41:05,000
一些工业中长远的问题

735
00:41:05,000 --> 00:41:08,000
比如说在特征点的检测这一方面的话

736
00:41:08,000 --> 00:41:11,000
它会给你提供一些比较有意思的思路

737
00:41:11,000 --> 00:41:14,000
我用工业界里面解决问题的一些思路

738
00:41:14,000 --> 00:41:17,000
比如说我们长远的特征点Zift

739
00:41:17,000 --> 00:41:20,000
长远的特征点Zift这种

740
00:41:20,000 --> 00:41:23,000
它都是要求是朗博面

741
00:41:23,000 --> 00:41:26,000
要求我的这个场景的文体比较丰富

742
00:41:26,000 --> 00:41:29,000
但是放到光速度的墙上

743
00:41:29,000 --> 00:41:32,000
比如说室内的场景

744
00:41:32,000 --> 00:41:35,000
那么它基本上就检测不出来了

745
00:41:35,000 --> 00:41:38,000
就失效了

746
00:41:38,000 --> 00:41:41,000
那么这种情况下怎么办

747
00:41:41,000 --> 00:41:44,000
这里面就会提供一些比较巧妙的招数

748
00:41:44,000 --> 00:41:47,000
比如说我直接用一些汉明板

749
00:41:47,000 --> 00:41:50,000
人工的一些特征点直接贴上去

750
00:41:50,000 --> 00:41:53,000
其实这个也就是一些

751
00:41:53,000 --> 00:41:56,000
我们平常如果传统的思路方法

752
00:41:56,000 --> 00:41:59,000
可能想不到的方法完全是工程性的思维

753
00:41:59,000 --> 00:42:02,000
所以如果说有这样一些场景

754
00:42:02,000 --> 00:42:05,000
我要对室内进行一个建模

755
00:42:05,000 --> 00:42:08,000
有可能传统的这些特征点都失效

756
00:42:08,000 --> 00:42:11,000
强度是无稳定的

757
00:42:11,000 --> 00:42:14,000
那么我用这个人工设计的特征点

758
00:42:14,000 --> 00:42:17,000
去往上贴一下汉明板

759
00:42:17,000 --> 00:42:20,000
然后进行图像一个拍照

760
00:42:20,000 --> 00:42:23,000
那么就可以自动识别里面的一些关键点

761
00:42:23,000 --> 00:42:26,000
然后再走下面的一个建模的流程

762
00:42:26,000 --> 00:42:29,000
这也是一个可能的路线

763
00:42:29,000 --> 00:42:32,000
当然也可能有别的一些其他的方法

764
00:42:32,000 --> 00:42:35,000
这个也是其中一个比较有意思的地方

765
00:42:35,000 --> 00:42:38,000
就是三维建模其实有好多地方

766
00:42:38,000 --> 00:42:40,000
你选完这个框架之后

767
00:42:40,000 --> 00:42:43,000
你发现真正的用的地方并不是

768
00:42:43,000 --> 00:42:46,000
我真正的就是我们这个教程里面的框架

769
00:42:46,000 --> 00:42:49,000
并不能真正的用到每个场景里面

770
00:42:49,000 --> 00:42:52,000
每个场景不同的任务都需要你去做一些改动

771
00:42:52,000 --> 00:42:55,000
这个时候就需要你去对这个

772
00:42:55,000 --> 00:42:58,000
核心问题对一些问题理解的比较深刻

773
00:42:58,000 --> 00:43:01,000
对一些技术掌握的比较熟练

774
00:43:01,000 --> 00:43:04,000
这个时候你就可以去从容的解决各种问题

775
00:43:04,000 --> 00:43:07,000
第二个是这个第二本书是Cabinavision

776
00:43:07,000 --> 00:43:10,000
这本书讲的比较全面一些

777
00:43:10,000 --> 00:43:13,000
里面也有一些关于3D的一些知识

778
00:43:13,000 --> 00:43:16,000
第三本这个是

779
00:43:16,000 --> 00:43:19,000
三维成建里面圣经式的一些书籍

780
00:43:19,000 --> 00:43:22,000
但这个书其实不太建议通读

781
00:43:22,000 --> 00:43:25,000
只是用到哪一个部分的时候过去看一下就可以了

782
00:43:25,000 --> 00:43:28,000
比如说像建模里面Translation

783
00:43:28,000 --> 00:43:31,000
Translation就是

784
00:43:31,000 --> 00:43:34,000
当我知道两副相机的参数和对应的特重点的时候

785
00:43:34,000 --> 00:43:37,000
我要得到3V点的座标

786
00:43:37,000 --> 00:43:40,000
Translation的一些建模

787
00:43:40,000 --> 00:43:43,000
在这本书里面讲的公式就比较熟悉

788
00:43:43,000 --> 00:43:46,000
这本书我觉得有什么特点就是你一开始看的时候会很头痛

789
00:43:46,000 --> 00:43:49,000
真的是你要看下来的话

790
00:43:49,000 --> 00:43:52,000
你可能要咬著头皮往下看

791
00:43:52,000 --> 00:43:55,000
用著头皮往下看

792
00:43:55,000 --> 00:43:58,000
写的什么样真的是难看死了

793
00:43:58,000 --> 00:44:01,000
但是当你有了一些共同实验经验的时候

794
00:44:01,000 --> 00:44:04,000
你再回来看这本书你就发现还是这本书写的好

795
00:44:04,000 --> 00:44:07,000
真的有这样的感觉

796
00:44:07,000 --> 00:44:10,000
后面这两本都比较老了

797
00:44:10,000 --> 00:44:13,000
这个是马毅老师写的一本书

798
00:44:13,000 --> 00:44:16,000
后面这个

799
00:44:16,000 --> 00:44:19,000
一种现代的方法

800
00:44:19,000 --> 00:44:22,000
这是我之前在读研究书的时候用的一本书

801
00:44:22,000 --> 00:44:25,000
这本书里面

802
00:44:25,000 --> 00:44:28,000
我印象最深刻的是相机模型的推导

803
00:44:28,000 --> 00:44:31,000
就是图示模型的推导

804
00:44:31,000 --> 00:44:34,000
内外参数

805
00:44:34,000 --> 00:44:37,000
还有线性的优化

806
00:44:37,000 --> 00:44:40,000
还有深度和积线的关系

807
00:44:40,000 --> 00:44:43,000
这本书里面讲的比较好一些

808
00:44:43,000 --> 00:44:46,000
当时意见还特别深刻

809
00:44:46,000 --> 00:44:49,000
还有一本书

810
00:44:49,000 --> 00:44:52,000
也是我们学院的老师高翔博士写的

811
00:44:52,000 --> 00:44:55,000
Standard十字讲

812
00:44:55,000 --> 00:44:58,000
这本书也非常不错

813
00:44:58,000 --> 00:45:01,000
里面有好多的三维建模里面的基础知识

814
00:45:01,000 --> 00:45:04,000
也在这里面讲的非常详细

815
00:45:04,000 --> 00:45:07,000
这个都可以作为一些参考

816
00:45:07,000 --> 00:45:10,000
我们这节课

817
00:45:10,000 --> 00:45:13,000
三维建模是一个非常工程的

818
00:45:13,000 --> 00:45:16,000
偏工程的问题

819
00:45:16,000 --> 00:45:19,000
对编程有一定的要求

820
00:45:19,000 --> 00:45:22,000
比如说像我们所用的都是CIA+的编程

821
00:45:22,000 --> 00:45:25,000
也会用到CMake的管理

822
00:45:25,000 --> 00:45:28,000
CMake和GitHub

823
00:45:28,000 --> 00:45:31,000
这些都是做工程

824
00:45:31,000 --> 00:45:34,000
经常用到的一些工具

825
00:45:34,000 --> 00:45:37,000
CIA+编程

826
00:45:37,000 --> 00:45:40,000
要求你首先要看懂代码

827
00:45:40,000 --> 00:45:43,000
要自己会写一些基本的函数

828
00:45:43,000 --> 00:45:46,000
因为现在CIA+98之后

829
00:45:46,000 --> 00:45:49,000
CIA+最重要的思想

830
00:45:49,000 --> 00:45:52,000
就是类的思想

831
00:45:52,000 --> 00:45:55,000
所以你要会写类

832
00:45:55,000 --> 00:45:58,000
然后要知道一些类的基本的应用

833
00:45:58,000 --> 00:46:01,000
比如说像继承

834
00:46:01,000 --> 00:46:07,000
像模板

835
00:46:07,000 --> 00:46:10,000
模板我们用的比较少

836
00:46:10,000 --> 00:46:13,000
这块技术

837
00:46:13,000 --> 00:46:16,000
然后呢

838
00:46:16,000 --> 00:46:19,000
也会设计到一点点的设计模式

839
00:46:19,000 --> 00:46:22,000
设计模式其实用的不是很多

840
00:46:22,000 --> 00:46:25,000
我们也没有单独的去做一些强调

841
00:46:25,000 --> 00:46:28,000
但是其实如果我个人

842
00:46:28,000 --> 00:46:31,000
来讲的话其实CIA+

843
00:46:31,000 --> 00:46:34,000
要学CIA+的话也是有一个逐渐的低声的过程

844
00:46:34,000 --> 00:46:37,000
比如说第一步

845
00:46:37,000 --> 00:46:40,000
你要了解CIA+的基本语言

846
00:46:40,000 --> 00:46:43,000
它的基本结构

847
00:46:43,000 --> 00:46:46,000
你要会写类

848
00:46:46,000 --> 00:46:49,000
你要会写继承就是CIA+Premium里面的基本技术

849
00:46:49,000 --> 00:46:52,000
然后再往上进阶

850
00:46:52,000 --> 00:46:55,000
你要了解CIA+的一些

851
00:46:55,000 --> 00:46:58,000
基本的一些效益的问题

852
00:46:58,000 --> 00:47:01,000
或者怎么样把CIA+写的比较规范

853
00:47:01,000 --> 00:47:04,000
那么这里面就像

854
00:47:04,000 --> 00:47:07,000
有些参考书

855
00:47:07,000 --> 00:47:10,000
像CIA+

856
00:47:10,000 --> 00:47:13,000
Effective CIA+

857
00:47:13,000 --> 00:47:16,000
或是More Effective

858
00:47:16,000 --> 00:47:19,000
这些书都是可以去看一下

859
00:47:19,000 --> 00:47:22,000
然后再往上走

860
00:47:22,000 --> 00:47:25,000
你就需要去设计模式

861
00:47:25,000 --> 00:47:28,000
比如说像单键

862
00:47:28,000 --> 00:47:31,000
单键的设计模式

863
00:47:31,000 --> 00:47:34,000
然后长音的

864
00:47:34,000 --> 00:47:37,000
像工厂模式

865
00:47:37,000 --> 00:47:40,000
这些长音的模式

866
00:47:40,000 --> 00:47:43,000
掌握了这些之后

867
00:47:43,000 --> 00:47:46,000
你的CIA+基本上就可以有一定的套路了

868
00:47:46,000 --> 00:47:49,000
当然再往上的话更高阶层的

869
00:47:49,000 --> 00:47:52,000
更高阶的那就是你的架构

870
00:47:52,000 --> 00:47:55,000
比如说长音的MVC什么架构

871
00:47:55,000 --> 00:47:58,000
Model,View,Control这种写大型的工程

872
00:47:58,000 --> 00:48:01,000
大家也是这样一级一级的上去

873
00:48:01,000 --> 00:48:04,000
到了最高层的话

874
00:48:04,000 --> 00:48:07,000
就一个比较全面的了解

875
00:48:07,000 --> 00:48:10,000
如果你对设计模式了解比较好的话

876
00:48:10,000 --> 00:48:13,000
你可以去看可飞的这个阶层代码

877
00:48:13,000 --> 00:48:16,000
可飞里面用了14种设计模式

878
00:48:16,000 --> 00:48:19,000
可以去对这去参考一下

879
00:48:19,000 --> 00:48:22,000
当然我们这节课的话

880
00:48:22,000 --> 00:48:25,000
你看完了这节课的代码

881
00:48:25,000 --> 00:48:28,000
第一个阶层可以掌握

882
00:48:28,000 --> 00:48:31,000
绝对可以到第一个阶层

883
00:48:31,000 --> 00:48:34,000
长音的CIA+的基本技术基本上都会知道

884
00:48:34,000 --> 00:48:37,000
当然部分的设计模式

885
00:48:37,000 --> 00:48:40,000
也会设计到部分的设计模式

886
00:48:40,000 --> 00:48:43,000
另外我们这个课程

887
00:48:43,000 --> 00:48:46,000
用的是CMake管理的

888
00:48:46,000 --> 00:48:49,000
要求你对CMake会有一些基本的了解

889
00:48:49,000 --> 00:48:52,000
比如说怎么样用CMake

890
00:48:52,000 --> 00:48:55,000
怎么样进行链接

891
00:48:55,000 --> 00:48:58,000
怎么样去找配置库

892
00:48:58,000 --> 00:49:01,000
这个是必须的

893
00:49:01,000 --> 00:49:04,000
而且CMake确实有很多的优势

894
00:49:04,000 --> 00:49:07,000
比如说它是跨平台的

895
00:49:07,000 --> 00:49:10,000
我们的代码在Linux

896
00:49:10,000 --> 00:49:13,000
Ubuntu和ios系统下

897
00:49:13,000 --> 00:49:16,000
都编译没有问题

898
00:49:16,000 --> 00:49:19,000
当然在Windows下还没有尝试过

899
00:49:19,000 --> 00:49:22,000
我自己很久也不在Windows下做开发了

900
00:49:22,000 --> 00:49:25,000
所以你用的时候

901
00:49:25,000 --> 00:49:28,000
Windows系统的话也是可以的

902
00:49:28,000 --> 00:49:31,000
只不过会有很多的问题

903
00:49:31,000 --> 00:49:34,000
Linux和ios系统

904
00:49:34,000 --> 00:49:37,000
MacOS系统的话

905
00:49:37,000 --> 00:49:40,000
有问题的话我这边可以比较

906
00:49:40,000 --> 00:49:43,000
反馈的比较即时

907
00:49:43,000 --> 00:49:46,000
但是Windows下编译如果有问题的话

908
00:49:46,000 --> 00:49:49,000
我会比较快解决了

909
00:49:49,000 --> 00:49:52,000
然后后面就会要求

910
00:49:52,000 --> 00:49:55,000
一些图样处理和镜头视觉的基本知识

911
00:49:55,000 --> 00:49:58,000
另外从优化的角度来讲的话

912
00:49:58,000 --> 00:50:01,000
像非线性优化

913
00:50:01,000 --> 00:50:04,000
主要是PA里面

914
00:50:04,000 --> 00:50:07,000
还有T度向降的优化方法

915
00:50:07,000 --> 00:50:10,000
LM的优化方法

916
00:50:10,000 --> 00:50:13,000
这些是需要你掌握的基本知识

917
00:50:13,000 --> 00:50:16,000
现在已经全部放到网站上了

918
00:50:16,000 --> 00:50:19,000
大家可以通过Github面上去下载

919
00:50:19,000 --> 00:50:22,000
然后

920
00:50:22,000 --> 00:50:25,000
我建议大家可以试一下这个软件

921
00:50:25,000 --> 00:50:28,000
这个软件

922
00:50:28,000 --> 00:50:31,000
我自己用的比较多

923
00:50:31,000 --> 00:50:34,000
它可以很方便的进行Git的一个配置

924
00:50:34,000 --> 00:50:37,000
可以通过这个软件直接

925
00:50:37,000 --> 00:50:40,000
将我们这个

926
00:50:40,000 --> 00:50:43,000
控制文件下载下来

927
00:50:43,000 --> 00:50:46,000
而且这个软件本身它是SIMA配置的

928
00:50:46,000 --> 00:50:49,000
所以用起来会比较方便一些

929
00:50:49,000 --> 00:50:58,000
如果你要用Git的这个版本控制的话

930
00:50:58,000 --> 00:51:01,000
那么你首先要下载Git

931
00:51:01,000 --> 00:51:04,000
这个应用程序

932
00:51:04,000 --> 00:51:07,000
在Ubuntu和MacOS下都有

933
00:51:07,000 --> 00:51:10,000
你就可以通过Cline的

934
00:51:10,000 --> 00:51:13,000
版本控制里面Git,Column

935
00:51:13,000 --> 00:51:16,000
然后将这个代码拷贝到自己的文言夹下

936
00:51:16,000 --> 00:51:22,000
这些课我要讲的内容就这么多

937
00:51:22,000 --> 00:51:25,000
大概就是讲了一下文课程里面的

938
00:51:25,000 --> 00:51:28,000
一些基本的内容

939
00:51:28,000 --> 00:51:31,000
以及跟现在的一些

940
00:51:31,000 --> 00:51:34,000
比较先进的

941
00:51:34,000 --> 00:51:37,000
跟现在的一些深度这些技术的一些关联

942
00:51:37,000 --> 00:51:40,000
然后我们中间休息一下

943
00:51:40,000 --> 00:51:43,000
后面的话我会

944
00:51:43,000 --> 00:51:46,000
带著大家把这个代码去下载和配置一下

945
00:51:46,000 --> 00:51:52,000
有什么问题的话大家也可以在这个聊天室里

946
00:51:52,000 --> 00:51:55,000
问一下

947
00:51:55,000 --> 00:51:58,000
(开机声)

948
00:51:58,000 --> 00:52:01,000
(开机声)

949
00:52:26,000 --> 00:52:29,000
(开机声)

950
00:52:29,000 --> 00:52:49,000
(开机声)

951
00:52:49,000 --> 00:52:52,000
(开机声)

952
00:52:52,000 --> 00:52:58,000
(开机声)

953
00:52:58,000 --> 00:53:01,000
(开机声)

954
00:53:01,000 --> 00:53:04,000
(开机声)

955
00:53:04,000 --> 00:53:07,000
(开机声)

956
00:53:07,000 --> 00:53:10,000
(开机声)

957
00:53:10,000 --> 00:53:13,000
(开机声)

958
00:53:13,000 --> 00:53:16,000
(开机声)

959
00:53:16,000 --> 00:53:19,000
(开机声)

960
00:53:19,000 --> 00:53:22,000
(开机声)

961
00:53:22,000 --> 00:53:25,000
(开机声)

962
00:53:25,000 --> 00:53:28,000
(开机声)

963
00:53:28,000 --> 00:53:31,000
(开机声)

964
00:53:31,000 --> 00:53:34,000
(开机声)

965
00:53:34,000 --> 00:53:37,000
(开机声)

966
00:53:37,000 --> 00:53:40,000
(开机声)

967
00:53:40,000 --> 00:53:43,000
(开机声)

968
00:53:43,000 --> 00:53:46,000
(开机声)

969
00:53:46,000 --> 00:53:49,000
(开机声)

970
00:53:49,000 --> 00:53:52,000
(开机声)

971
00:53:52,000 --> 00:53:55,000
(开机声)

972
00:53:55,000 --> 00:53:58,000
(开机声)

973
00:53:58,000 --> 00:54:01,000
(开机声)

974
00:54:01,000 --> 00:54:04,000
(开机声)

975
00:54:04,000 --> 00:54:07,000
(开机声)

976
00:54:07,000 --> 00:54:10,000
(开机声)

977
00:54:10,000 --> 00:54:13,000
(开机声)

978
00:54:13,000 --> 00:54:16,000
(开机声)

979
00:54:16,000 --> 00:54:19,000
(开机声)

980
00:54:19,000 --> 00:54:22,000
(开机声)

981
00:54:22,000 --> 00:54:25,000
(开机声)

982
00:54:25,000 --> 00:54:28,000
(开机声)

983
00:54:28,000 --> 00:54:31,000
(开机声)

984
00:54:31,000 --> 00:54:34,000
(开机声)

985
00:54:34,000 --> 00:54:37,000
(开机声)

986
00:54:37,000 --> 00:54:40,000
(开机声)

987
00:54:40,000 --> 00:54:43,000
(开机声)

988
00:54:43,000 --> 00:54:46,000
(开机声)

989
00:54:46,000 --> 00:54:49,000
(开机声)

990
00:54:49,000 --> 00:54:52,000
(开机声)

991
00:54:52,000 --> 00:54:55,000
(开机声)

992
00:54:55,000 --> 00:54:58,000
(开机声)

993
00:54:58,000 --> 00:55:01,000
(开机声)

994
00:55:01,000 --> 00:55:04,000
(开机声)

995
00:55:04,000 --> 00:55:07,000
(开机声)

996
00:55:07,000 --> 00:55:10,000
(开机声)

997
00:55:10,000 --> 00:55:13,000
(开机声)

998
00:55:13,000 --> 00:55:16,000
(开机声)

999
00:55:16,000 --> 00:55:19,000
(开机声)

1000
00:55:19,000 --> 00:55:22,000
(开机声)

1001
00:55:22,000 --> 00:55:25,000
(开机声)

1002
00:55:25,000 --> 00:55:28,000
(开机声)

1003
00:55:28,000 --> 00:55:31,000
(开机声)

1004
00:55:31,000 --> 00:55:34,000
(开机声)

1005
00:55:34,000 --> 00:55:37,000
(开机声)

1006
00:55:37,000 --> 00:55:40,000
(开机声)

1007
00:55:40,000 --> 00:55:43,000
(开机声)

1008
00:55:43,000 --> 00:55:46,000
(开机声)

1009
00:55:46,000 --> 00:55:49,000
(开机声)

1010
00:55:49,000 --> 00:55:52,000
(开机声)

1011
00:55:52,000 --> 00:55:55,000
(开机声)

1012
00:55:55,000 --> 00:55:58,000
(开机声)

1013
00:55:58,000 --> 00:56:01,000
(开机声)

1014
00:56:01,000 --> 00:56:04,000
(开机声)

1015
00:56:04,000 --> 00:56:07,000
(开机声)

1016
00:56:07,000 --> 00:56:10,000
(开机声)

1017
00:56:10,000 --> 00:56:13,000
(开机声)

1018
00:56:13,000 --> 00:56:16,000
(开机声)

1019
00:56:16,000 --> 00:56:19,000
(开机声)

1020
00:56:19,000 --> 00:56:22,000
(开机声)

1021
00:56:22,000 --> 00:56:25,000
(开机声)

1022
00:56:25,000 --> 00:56:28,000
(开机声)

1023
00:56:28,000 --> 00:56:31,000
(开机声)

1024
00:56:31,000 --> 00:56:34,000
(开机声)

1025
00:56:34,000 --> 00:56:37,000
(开机声)

1026
00:56:37,000 --> 00:56:40,000
(开机声)

1027
00:56:40,000 --> 00:56:43,000
(开机声)

1028
00:56:43,000 --> 00:56:46,000
(开机声)

1029
00:56:46,000 --> 00:56:49,000
(开机声)

1030
00:56:49,000 --> 00:56:52,000
(开机声)

1031
00:56:52,000 --> 00:56:55,000
(开机声)

1032
00:56:55,000 --> 00:56:58,000
(开机声)

1033
00:56:58,000 --> 00:57:01,000
(开机声)

1034
00:57:01,000 --> 00:57:04,000
(开机声)

1035
00:57:04,000 --> 00:57:07,000
(开机声)

1036
00:57:07,000 --> 00:57:10,000
(开机声)

1037
00:57:10,000 --> 00:57:13,000
(开机声)

1038
00:57:13,000 --> 00:57:16,000
(开机声)

1039
00:57:16,000 --> 00:57:19,000
(开机声)

1040
00:57:19,000 --> 00:57:22,000
(开机声)

1041
00:57:22,000 --> 00:57:25,000
(开机声)

1042
00:57:25,000 --> 00:57:28,000
(开机声)

1043
00:57:28,000 --> 00:57:31,000
(开机声)

1044
00:57:31,000 --> 00:57:34,000
(开机声)

1045
00:57:34,000 --> 00:57:37,000
(开机声)

1046
00:57:37,000 --> 00:57:40,000
(开机声)

1047
00:57:40,000 --> 00:57:43,000
(开机声)

1048
00:57:43,000 --> 00:57:46,000
(开机声)

1049
00:57:46,000 --> 00:57:49,000
(开机声)

1050
00:57:49,000 --> 00:57:52,000
(开机声)

1051
00:57:52,000 --> 00:57:55,000
(开机声)

1052
00:57:55,000 --> 00:57:58,000
(开机声)

1053
00:57:58,000 --> 00:58:01,000
(开机声)

1054
00:58:01,000 --> 00:58:04,000
(开机声)

1055
00:58:04,000 --> 00:58:07,000
(开机声)

1056
00:58:07,000 --> 00:58:10,000
(开机声)

1057
00:58:10,000 --> 00:58:13,000
(开机声)

1058
00:58:13,000 --> 00:58:16,000
(开机声)

1059
00:58:16,000 --> 00:58:19,000
(开机声)

1060
00:58:19,000 --> 00:58:22,000
(开机声)

1061
00:58:22,000 --> 00:58:25,000
(开机声)

1062
00:58:25,000 --> 00:58:28,000
(开机声)

1063
00:58:28,000 --> 00:58:31,000
(开机声)

1064
00:58:31,000 --> 00:58:34,000
(开机声)

1065
00:58:34,000 --> 00:58:37,000
(开机声)

1066
00:58:37,000 --> 00:58:40,000
(开机声)

1067
00:58:40,000 --> 00:58:43,000
(开机声)

1068
00:58:43,000 --> 00:58:46,000
(开机声)

1069
00:58:46,000 --> 00:58:49,000
(开机声)

1070
00:58:49,000 --> 00:58:52,000
(开机声)

1071
00:58:52,000 --> 00:58:55,000
(开机声)

1072
00:58:55,000 --> 00:58:58,000
(开机声)

1073
00:58:58,000 --> 00:59:01,000
(开机声)

1074
00:59:01,000 --> 00:59:04,000
(开机声)

1075
00:59:04,000 --> 00:59:07,000
(开机声)

1076
00:59:07,000 --> 00:59:10,000
(开机声)

1077
00:59:10,000 --> 00:59:13,000
(开机声)

1078
00:59:13,000 --> 00:59:16,000
(开机声)

1079
00:59:16,000 --> 00:59:19,000
(开机声)

1080
00:59:19,000 --> 00:59:22,000
(开机声)

1081
00:59:22,000 --> 00:59:25,000
(开机声)

1082
00:59:25,000 --> 00:59:28,000
(开机声)

1083
00:59:28,000 --> 00:59:31,000
(开机声)

1084
00:59:31,000 --> 00:59:34,000
(开机声)

1085
00:59:34,000 --> 00:59:37,000
(开机声)

1086
00:59:37,000 --> 00:59:40,000
(开机声)

1087
00:59:40,000 --> 00:59:43,000
(开机声)

1088
00:59:43,000 --> 00:59:46,000
(开机声)

1089
00:59:46,000 --> 00:59:49,000
(开机声)

1090
00:59:49,000 --> 00:59:52,000
(开机声)

1091
00:59:52,000 --> 00:59:55,000
(开机声)

1092
00:59:55,000 --> 00:59:58,000
(开机声)

1093
00:59:58,000 --> 01:00:01,000
(开机声)

1094
01:00:01,000 --> 01:00:04,000
(开机声)

1095
01:00:04,000 --> 01:00:07,000
(开机声)

1096
01:00:07,000 --> 01:00:10,000
(开机声)

1097
01:00:10,000 --> 01:00:13,000
(开机声)

1098
01:00:13,000 --> 01:00:16,000
(开机声)

1099
01:00:16,000 --> 01:00:19,000
(开机声)

1100
01:00:19,000 --> 01:00:22,000
(开机声)

1101
01:00:22,000 --> 01:00:25,000
(开机声)

1102
01:00:25,000 --> 01:00:28,000
(开机声)

1103
01:00:28,000 --> 01:00:31,000
(开机声)

1104
01:00:31,000 --> 01:00:34,000
(开机声)

1105
01:00:34,000 --> 01:00:37,000
(开机声)

1106
01:00:37,000 --> 01:00:40,000
(开机声)

1107
01:00:40,000 --> 01:00:43,000
(开机声)

1108
01:00:43,000 --> 01:00:46,000
(开机声)

1109
01:00:46,000 --> 01:00:49,000
(开机声)

1110
01:00:49,000 --> 01:00:52,000
(开机声)

1111
01:00:52,000 --> 01:00:55,000
(开机声)

1112
01:00:55,000 --> 01:00:58,000
(开机声)

1113
01:00:58,000 --> 01:01:01,000
(开机声)

1114
01:01:01,000 --> 01:01:04,000
(开机声)

1115
01:01:04,000 --> 01:01:07,000
(开机声)

1116
01:01:07,000 --> 01:01:10,000
(开机声)

1117
01:01:10,000 --> 01:01:13,000
(开机声)

1118
01:01:13,000 --> 01:01:16,000
(开机声)

1119
01:01:16,000 --> 01:01:19,000
(开机声)

1120
01:01:19,000 --> 01:01:22,000
(开机声)

1121
01:01:22,000 --> 01:01:25,000
(开机声)

1122
01:01:25,000 --> 01:01:28,000
(开机声)

1123
01:01:28,000 --> 01:01:31,000
(开机声)

1124
01:01:31,000 --> 01:01:34,000
(开机声)

1125
01:01:34,000 --> 01:01:37,000
(开机声)

1126
01:01:37,000 --> 01:01:40,000
(开机声)

1127
01:01:40,000 --> 01:01:43,000
(开机声)

1128
01:01:43,000 --> 01:01:46,000
(开机声)

1129
01:01:46,000 --> 01:01:49,000
(开机声)

1130
01:01:49,000 --> 01:01:52,000
(开机声)

1131
01:01:52,000 --> 01:01:55,000
(开机声)

1132
01:01:55,000 --> 01:01:58,000
(开机声)

1133
01:01:58,000 --> 01:02:01,000
(开机声)

1134
01:02:01,000 --> 01:02:04,000
(开机声)

1135
01:02:04,000 --> 01:02:07,000
(开机声)

1136
01:02:07,000 --> 01:02:10,000
(开机声)

1137
01:02:10,000 --> 01:02:13,000
(开机声)

1138
01:02:13,000 --> 01:02:16,000
(开机声)

1139
01:02:16,000 --> 01:02:19,000
(开机声)

1140
01:02:19,000 --> 01:02:22,000
(开机声)

1141
01:02:22,000 --> 01:02:25,000
(开机声)

1142
01:02:25,000 --> 01:02:28,000
(开机声)

1143
01:02:28,000 --> 01:02:31,000
(开机声)

1144
01:02:31,000 --> 01:02:34,000
(开机声)

1145
01:02:34,000 --> 01:02:37,000
(开机声)

1146
01:02:37,000 --> 01:02:40,000
(开机声)

1147
01:02:40,000 --> 01:02:43,000
(开机声)

1148
01:02:43,000 --> 01:02:46,000
(开机声)

1149
01:02:46,000 --> 01:02:49,000
(开机声)

1150
01:02:49,000 --> 01:02:52,000
(开机声)

1151
01:02:52,000 --> 01:02:55,000
(开机声)

1152
01:02:55,000 --> 01:02:58,000
(开机声)

1153
01:02:58,000 --> 01:03:01,000
(开机声)

1154
01:03:01,000 --> 01:03:04,000
(开机声)

1155
01:03:04,000 --> 01:03:07,000
(开机声)

1156
01:03:07,000 --> 01:03:10,000
(开机声)

1157
01:03:10,000 --> 01:03:13,000
(开机声)

1158
01:03:13,000 --> 01:03:16,000
(开机声)

1159
01:03:16,000 --> 01:03:19,000
(开机声)

1160
01:03:19,000 --> 01:03:22,000
(开机声)

1161
01:03:22,000 --> 01:03:25,000
(开机声)

1162
01:03:25,000 --> 01:03:28,000
(开机声)

1163
01:03:28,000 --> 01:03:31,000
(开机声)

1164
01:03:31,000 --> 01:03:34,000
(开机声)

1165
01:03:34,000 --> 01:03:37,000
(开机声)

1166
01:03:37,000 --> 01:03:40,000
(开机声)

1167
01:03:40,000 --> 01:03:43,000
(开机声)

1168
01:03:43,000 --> 01:03:46,000
(开机声)

1169
01:03:46,000 --> 01:03:49,000
(开机声)

1170
01:03:49,000 --> 01:03:52,000
(开机声)

1171
01:03:52,000 --> 01:03:55,000
(开机声)

1172
01:03:55,000 --> 01:03:58,000
(开机声)

1173
01:03:58,000 --> 01:04:01,000
(开机声)

1174
01:04:01,000 --> 01:04:04,000
(开机声)

1175
01:04:04,000 --> 01:04:07,000
(开机声)

1176
01:04:07,000 --> 01:04:10,000
(开机声)

1177
01:04:10,000 --> 01:04:13,000
(开机声)

1178
01:04:13,000 --> 01:04:16,000
(开机声)

1179
01:04:16,000 --> 01:04:19,000
(开机声)

1180
01:04:19,000 --> 01:04:22,000
(开机声)

1181
01:04:22,000 --> 01:04:25,000
(开机声)

1182
01:04:25,000 --> 01:04:28,000
(开机声)

1183
01:04:28,000 --> 01:04:31,000
(开机声)

1184
01:04:31,000 --> 01:04:34,000
(开机声)

1185
01:04:34,000 --> 01:04:37,000
(开机声)

1186
01:04:37,000 --> 01:04:40,000
(开机声)

1187
01:04:40,000 --> 01:04:43,000
(开机声)

1188
01:04:43,000 --> 01:04:46,000
(开机声)

1189
01:04:46,000 --> 01:04:49,000
(开机声)

1190
01:04:49,000 --> 01:04:52,000
(开机声)

1191
01:04:52,000 --> 01:04:55,000
(开机声)

1192
01:04:55,000 --> 01:04:58,000
(开机声)

1193
01:04:58,000 --> 01:05:01,000
(开机声)

1194
01:05:01,000 --> 01:05:04,000
(开机声)

1195
01:05:04,000 --> 01:05:07,000
(开机声)

1196
01:05:07,000 --> 01:05:10,000
(开机声)

1197
01:05:10,000 --> 01:05:13,000
(开机声)

1198
01:05:13,000 --> 01:05:16,000
(开机声)

1199
01:05:16,000 --> 01:05:19,000
(开机声)

1200
01:05:19,000 --> 01:05:22,000
(开机声)

1201
01:05:22,000 --> 01:05:25,000
(开机声)

1202
01:05:25,000 --> 01:05:28,000
(开机声)

1203
01:05:28,000 --> 01:05:31,000
(开机声)

1204
01:05:31,000 --> 01:05:34,000
(开机声)

1205
01:05:34,000 --> 01:05:37,000
(开机声)

1206
01:05:37,000 --> 01:05:40,000
(开机声)

1207
01:05:40,000 --> 01:05:43,000
(开机声)

1208
01:05:43,000 --> 01:05:46,000
(开机声)

1209
01:05:46,000 --> 01:05:49,000
(开机声)

1210
01:05:49,000 --> 01:05:52,000
(开机声)

1211
01:05:52,000 --> 01:05:55,000
(开机声)

1212
01:05:55,000 --> 01:05:58,000
(开机声)

1213
01:05:58,000 --> 01:06:01,000
(开机声)

1214
01:06:01,000 --> 01:06:04,000
(开机声)

1215
01:06:04,000 --> 01:06:07,000
(开机声)

1216
01:06:07,000 --> 01:06:10,000
(开机声)

1217
01:06:10,000 --> 01:06:13,000
(开机声)

1218
01:06:13,000 --> 01:06:16,000
(开机声)

1219
01:06:16,000 --> 01:06:19,000
(开机声)

1220
01:06:19,000 --> 01:06:22,000
(开机声)

1221
01:06:22,000 --> 01:06:25,000
(开机声)

1222
01:06:25,000 --> 01:06:28,000
(开机声)

1223
01:06:28,000 --> 01:06:31,000
(开机声)

1224
01:06:31,000 --> 01:06:34,000
(开机声)

1225
01:06:34,000 --> 01:06:37,000
(开机声)

1226
01:06:37,000 --> 01:06:40,000
(开机声)

1227
01:06:40,000 --> 01:06:43,000
(开机声)

1228
01:06:43,000 --> 01:06:46,000
(开机声)

1229
01:06:46,000 --> 01:06:49,000
(开机声)

1230
01:06:49,000 --> 01:06:52,000
(开机声)

1231
01:06:52,000 --> 01:06:55,000
(开机声)

1232
01:06:55,000 --> 01:06:58,000
(开机声)

1233
01:06:58,000 --> 01:07:01,000
(开机声)

1234
01:07:01,000 --> 01:07:04,000
(开机声)

1235
01:07:04,000 --> 01:07:07,000
(开机声)

1236
01:07:07,000 --> 01:07:10,000
(开机声)

1237
01:07:10,000 --> 01:07:13,000
(开机声)

1238
01:07:13,000 --> 01:07:16,000
(开机声)

1239
01:07:16,000 --> 01:07:19,000
(开机声)

1240
01:07:19,000 --> 01:07:22,000
(开机声)

1241
01:07:22,000 --> 01:07:25,000
(开机声)

1242
01:07:25,000 --> 01:07:28,000
(开机声)

1243
01:07:28,000 --> 01:07:31,000
(开机声)

1244
01:07:31,000 --> 01:07:34,000
(开机声)

1245
01:07:34,000 --> 01:07:37,000
(开机声)

1246
01:07:37,000 --> 01:07:40,000
(开机声)

1247
01:07:40,000 --> 01:07:43,000
好,我们来继续讲

1248
01:07:43,000 --> 01:07:45,000
一会儿我们直接讲代码

1249
01:07:45,000 --> 01:07:48,000
刚才跟几个同学交流了一下

1250
01:07:48,000 --> 01:07:50,000
然后这是我能想到的

1251
01:07:50,000 --> 01:07:53,000
大家对这个3D重建和

1252
01:07:53,000 --> 01:07:56,000
把声音调大一点

1253
01:07:56,000 --> 01:07:59,000
现在不知道现在有没有好一些

1254
01:07:59,000 --> 01:08:07,000
把声音调大一些

1255
01:08:07,000 --> 01:08:10,000
因为那个有时候讲课讲两个小时后面的话

1256
01:08:10,000 --> 01:08:13,000
可能声音就会有些小

1257
01:08:13,000 --> 01:08:16,000
我尽量把声音放大一下

1258
01:08:16,000 --> 01:08:19,000
刚才跟几个同学交流

1259
01:08:19,000 --> 01:08:22,000
他们对深度学习和

1260
01:08:22,000 --> 01:08:25,000
3D重建比较感兴趣

1261
01:08:25,000 --> 01:08:28,000
确实这个也是当前的一个热点

1262
01:08:28,000 --> 01:08:31,000
如果现在你对这块掌握比较好的话

1263
01:08:31,000 --> 01:08:34,000
那么你出去找工作

1264
01:08:34,000 --> 01:08:37,000
这些公司不管是智能驾驶这些公司

1265
01:08:37,000 --> 01:08:40,000
或者是坐无人车的这些公司

1266
01:08:40,000 --> 01:08:43,000
基本上都很抢手

1267
01:08:43,000 --> 01:08:52,000
这是刚才我跟几个同学交流一下之后

1268
01:08:52,000 --> 01:08:55,000
我能想到的

1269
01:08:55,000 --> 01:08:58,000
深度学习做一些任务

1270
01:08:58,000 --> 01:09:01,000
比如说深度学习做一些关键点的检测

1271
01:09:01,000 --> 01:09:04,000
目前有做人脸的关键点检测

1272
01:09:04,000 --> 01:09:07,000
有做手指的关键点检测

1273
01:09:07,000 --> 01:09:10,000
也有做人体的23个

1274
01:09:10,000 --> 01:09:13,000
骨节的关键点检测

1275
01:09:13,000 --> 01:09:16,000
做人脸的关键点检测

1276
01:09:16,000 --> 01:09:19,000
可以方便对人脸进行一些编辑

1277
01:09:19,000 --> 01:09:22,000
比如说像换脸这些任务

1278
01:09:22,000 --> 01:09:25,000
都可以通过关键点去做

1279
01:09:25,000 --> 01:09:28,000
对手指也是类似的

1280
01:09:28,000 --> 01:09:31,000
可以进行关键点检测

1281
01:09:31,000 --> 01:09:34,000
现在有一些

1282
01:09:34,000 --> 01:09:37,000
有一个数据库

1283
01:09:37,000 --> 01:09:40,000
针对人体的3DMesh数据库

1284
01:09:40,000 --> 01:09:43,000
如果大家做过3D人脸成件

1285
01:09:43,000 --> 01:09:46,000
应该知道用这种PCA的方法

1286
01:09:46,000 --> 01:09:49,000
可以把这个数据库

1287
01:09:49,000 --> 01:09:52,000
通过非监测方法去学一些迹象量

1288
01:09:52,000 --> 01:09:55,000
然后这个迹象量

1289
01:09:55,000 --> 01:09:58,000
对人体或人脸进行一个表达

1290
01:09:58,000 --> 01:10:01,000
也就是说我给你一组系数

1291
01:10:01,000 --> 01:10:04,000
我就通过这些迹象量可以得到

1292
01:10:04,000 --> 01:10:07,000
人脸的三维模型

1293
01:10:07,000 --> 01:10:10,000
当然这个人体的话数据库比较新

1294
01:10:10,000 --> 01:10:13,000
也就是17年开始的

1295
01:10:13,000 --> 01:10:16,000
那么我学习这些关键点

1296
01:10:16,000 --> 01:10:19,000
我就可以做一些很有意思的任务

1297
01:10:19,000 --> 01:10:22,000
比如说我把3D的

1298
01:10:22,000 --> 01:10:25,000
23个关键点

1299
01:10:25,000 --> 01:10:28,000
那么我通过给你一个人体的图像

1300
01:10:28,000 --> 01:10:31,000
给你一个人体的一张照片

1301
01:10:31,000 --> 01:10:34,000
我检测出了23个骨骼点

1302
01:10:34,000 --> 01:10:37,000
那么我就可以通过3D和2D之间的对应

1303
01:10:37,000 --> 01:10:40,000
然后来恢复

1304
01:10:40,000 --> 01:10:43,000
来得到3D人体的姿态

1305
01:10:43,000 --> 01:10:46,000
同样的任务也可以用在

1306
01:10:46,000 --> 01:10:49,000
人脸单幅图像的中间

1307
01:10:49,000 --> 01:10:52,000
为什么我们说建模要多视角

1308
01:10:52,000 --> 01:10:55,000
一个视角连基本的深度都没有

1309
01:10:55,000 --> 01:10:58,000
都没有办法恢复

1310
01:10:58,000 --> 01:11:01,000
但是对一些特殊的场景

1311
01:11:01,000 --> 01:11:04,000
比如说我有很强的显眼约束

1312
01:11:04,000 --> 01:11:07,000
像人脸这种我就有很强的显眼约束

1313
01:11:07,000 --> 01:11:10,000
那么我刚才说过的就是通过人脸的数据库

1314
01:11:10,000 --> 01:11:13,000
可以学到一些迹象量

1315
01:11:13,000 --> 01:11:16,000
那是一个人脸的三维模型

1316
01:11:16,000 --> 01:11:19,000
其实就相当于是我有一个很强的显眼约束

1317
01:11:19,000 --> 01:11:22,000
我优化的目标就是这几个系数

1318
01:11:22,000 --> 01:11:25,000
然后我再把这个三维模型去投入到图像上

1319
01:11:25,000 --> 01:11:28,000
通过这些关键点之间的

1320
01:11:28,000 --> 01:11:31,000
一个重头有误差

1321
01:11:31,000 --> 01:11:34,000
去约束这个重头有误差

1322
01:11:34,000 --> 01:11:37,000
然后去对这个迹象量进行约束

1323
01:11:37,000 --> 01:11:40,000
那么我就可以进行单幅图像的人脸重建

1324
01:11:40,000 --> 01:11:43,000
这个是一个单幅图像人脸重建的

1325
01:11:43,000 --> 01:11:46,000
基本的思路

1326
01:11:46,000 --> 01:11:49,000
那原先我在重建的时候我需要手工去标记特征点

1327
01:11:49,000 --> 01:11:52,000
来一幅图像手工标记特征点

1328
01:11:52,000 --> 01:11:55,000
之前也可以用一些技术

1329
01:11:55,000 --> 01:11:58,000
比如像主动轮廓模型去做一些人脸关键点的检测

1330
01:11:58,000 --> 01:12:01,000
但是有了深度学习之后

1331
01:12:01,000 --> 01:12:04,000
我们就可以通过深度学习很稳定的

1332
01:12:04,000 --> 01:12:07,000
检测出人脸关键点

1333
01:12:07,000 --> 01:12:10,000
而且可以通过不同的需要去设计不同的关键点的个数

1334
01:12:10,000 --> 01:12:13,000
人脸关键点的个数越多

1335
01:12:13,000 --> 01:12:16,000
它检测到的这个它变形的重建的准确率

1336
01:12:16,000 --> 01:12:19,000
感觉会越高

1337
01:12:19,000 --> 01:12:22,000
所以这个是人脸关键

1338
01:12:22,000 --> 01:12:25,000
还有一些应用现在在做3D的

1339
01:12:25,000 --> 01:12:28,000
就是做高精度地图的一些定位

1340
01:12:28,000 --> 01:12:31,000
也在用这方面的技术

1341
01:12:31,000 --> 01:12:34,000
比如说我先见图通过Mapping见图之后

1342
01:12:34,000 --> 01:12:37,000
存储了一些图像的关键点

1343
01:12:37,000 --> 01:12:40,000
特种点

1344
01:12:40,000 --> 01:12:43,000
然后再来一副图像的时候我也检测这些特种点

1345
01:12:43,000 --> 01:12:46,000
然后在这个图像里面去做一些匹配

1346
01:12:46,000 --> 01:12:49,000
这个也是现在在用的一些技术

1347
01:12:49,000 --> 01:12:52,000
但是总体来说的话深度学习效率还达不到

1348
01:12:52,000 --> 01:12:55,000
精度还可以但是效率达不到

1349
01:12:55,000 --> 01:12:58,000
就是用深度学习检测一个特种点的话

1350
01:12:58,000 --> 01:13:01,000
速度会比较慢而且计算的量比较大

1351
01:13:01,000 --> 01:13:04,000
到目前为止呢

1352
01:13:04,000 --> 01:13:07,000
我还在做特种点的检测

1353
01:13:07,000 --> 01:13:10,000
在做重建

1354
01:13:10,000 --> 01:13:13,000
还没有见到这样的工作

1355
01:13:13,000 --> 01:13:16,000
因为我们在做设计到Ziv的时候

1356
01:13:16,000 --> 01:13:19,000
其实它是通用的一种关键点

1357
01:13:19,000 --> 01:13:22,000
就是什么样的场景都可以

1358
01:13:22,000 --> 01:13:25,000
只要检测出来我就可以通过方法比较每天的匹配上

1359
01:13:25,000 --> 01:13:28,000
但是深度学习的话还达不到这样的场景

1360
01:13:28,000 --> 01:13:31,000
因为学习毕竟是依赖数据的

1361
01:13:31,000 --> 01:13:36,000
那么我们其实就得不到一个很好的效果

1362
01:13:36,000 --> 01:13:41,000
这也是其实这涉及到一个深度学习和统计学的关系

1363
01:13:41,000 --> 01:13:44,000
比如说我能够用一个公式

1364
01:13:44,000 --> 01:13:47,000
很简单简单的表达出

1365
01:13:47,000 --> 01:13:50,000
描述某一项任务

1366
01:13:50,000 --> 01:13:53,000
那么其实这个时候根本就不需要学习的

1367
01:13:53,000 --> 01:13:56,000
而且它是一个放之四海

1368
01:13:56,000 --> 01:13:59,000
就是接准的一个准则很简单很有效

1369
01:13:59,000 --> 01:14:03,000
但是如果当我们没法用公式去描述的时候

1370
01:14:03,000 --> 01:14:07,000
这个时候就要用大量的数据去学习

1371
01:14:07,000 --> 01:14:11,000
所以说我们去学习的任务通常来说都是一些

1372
01:14:11,000 --> 01:14:14,000
没有明确的表达形式的一些任务

1373
01:14:14,000 --> 01:14:18,000
所以它就会对数据的依赖就会比较广

1374
01:14:18,000 --> 01:14:24,000
在这种情况下的话尤其3D建模的场景可能都是多种多样的

1375
01:14:24,000 --> 01:14:27,000
那么仅靠学习去得到一个稳定的关键点

1376
01:14:27,000 --> 01:14:29,000
这个其实还是很有挑战性的

1377
01:14:29,000 --> 01:14:32,000
但是这里面其实我简单列几个

1378
01:14:32,000 --> 01:14:35,000
除了这个deep point还有deep b.a.

1379
01:14:35,000 --> 01:14:43,000
这是那个弹屏就是加拿大大学的那个弹屏老师组他们做的一个工作

1380
01:14:43,000 --> 01:14:45,000
因为深度学习去做b.a.

1381
01:14:45,000 --> 01:14:48,000
还有deep mvs这个是那个全龙老师组

1382
01:14:48,000 --> 01:14:51,000
就是香港K大学全龙老师组他们做的一个工作

1383
01:14:51,000 --> 01:14:55,000
但deep m这两个其实都是同源的

1384
01:14:55,000 --> 01:14:59,000
因为弹屏老师也是和那个也是香港K大学出去的

1385
01:14:59,000 --> 01:15:03,000
他们之前是同一个组deep ms也是他们做的一个工作

1386
01:15:03,000 --> 01:15:07,000
还有一个就是用深度学习去做表面重建的

1387
01:15:07,000 --> 01:15:11,000
这个叫应该是叫deep in place function

1388
01:15:11,000 --> 01:15:15,000
好像是我最近看到的在那个运营版的那个

1389
01:15:15,000 --> 01:15:18,000
运营版的文章先挂出来的

1390
01:15:18,000 --> 01:15:20,000
我忘了具体的名字

1391
01:15:20,000 --> 01:15:22,000
我就暂且叫它deep service了

1392
01:15:22,000 --> 01:15:26,000
就是用深度学习去做表面重建的

1393
01:15:26,000 --> 01:15:29,000
其实我们说过就是深度学习

1394
01:15:29,000 --> 01:15:31,000
我之前有这样的思路

1395
01:15:31,000 --> 01:15:34,000
但是我一直没有去做这样的工作

1396
01:15:34,000 --> 01:15:40,000
就是深度学习就是做表面重建的一个很重要的一个救助手段

1397
01:15:40,000 --> 01:15:42,000
就是来得到它的一个隐含数

1398
01:15:42,000 --> 01:15:46,000
隐含数就是物体表面

1399
01:15:46,000 --> 01:15:49,000
物体表面上隐含数的符号距离是0

1400
01:15:49,000 --> 01:15:54,000
然后根据这个距离这个表面的远近

1401
01:15:54,000 --> 01:15:57,000
去得到一个这样一个符号距离场

1402
01:15:57,000 --> 01:15:59,000
内部是负号外部是重号

1403
01:15:59,000 --> 01:16:01,000
得到这样一个符号距离场

1404
01:16:01,000 --> 01:16:05,000
我们就可以恢复相机的这个物体的一个模型

1405
01:16:05,000 --> 01:16:09,000
所以就是用deep service其实就是恢复这样一个符号距离场

1406
01:16:09,000 --> 01:16:14,000
这个应该我觉得学术的话可以去做一做

1407
01:16:14,000 --> 01:16:17,000
但是实际运营的话我倒是并不是很看好

1408
01:16:17,000 --> 01:16:22,000
然后最后就是一个就是做这个文理圈的一个处理

1409
01:16:22,000 --> 01:16:24,000
比如说用GAN

1410
01:16:24,000 --> 01:16:27,000
用这个对抗网络去做屈缝的操作

1411
01:16:27,000 --> 01:16:29,000
去做亮度的恢复

1412
01:16:29,000 --> 01:16:31,000
这些都是可以的

1413
01:16:31,000 --> 01:16:33,000
比如说光照的调整

1414
01:16:33,000 --> 01:16:35,000
这些应该都是有工作可以做的

1415
01:16:35,000 --> 01:16:37,000
用GAN去做这个文理圈的处理

1416
01:16:37,000 --> 01:16:40,000
好

1417
01:16:40,000 --> 01:16:43,000
我们讲了这些之后

1418
01:16:43,000 --> 01:16:47,000
我们来看一下这一节课的配套的代码

1419
01:16:49,000 --> 01:16:51,000
再看一下

1420
01:16:51,000 --> 01:16:53,000
我们可以看到这个

1421
01:16:53,000 --> 01:16:55,000
这个就是我们用的这个

1422
01:16:55,000 --> 01:16:57,000
这个就是我们用的这个

1423
01:16:57,000 --> 01:16:59,000
这个就是我们用的这个

1424
01:16:59,000 --> 01:17:01,000
这个就是我们用的这个

1425
01:17:01,000 --> 01:17:03,000
这个就是我们用的这个

1426
01:17:03,000 --> 01:17:05,000
这个就是我们用的这个

1427
01:17:05,000 --> 01:17:07,000
这个就是我们用的这个

1428
01:17:07,000 --> 01:17:09,000
这个就是我们用的这个

1429
01:17:09,000 --> 01:17:11,000
这个就是我们用的这个

1430
01:17:11,000 --> 01:17:13,000
这个就是我们用的这个

1431
01:17:13,000 --> 01:17:15,000
这个就是我们用的这个

1432
01:17:15,000 --> 01:17:17,000
再看一下

1433
01:17:17,000 --> 01:17:19,000
刚才有朋友问说

1434
01:17:19,000 --> 01:17:21,000
3D重建三维建模和计算机视觉里面

1435
01:17:21,000 --> 01:17:23,000
识别怎么可以结合

1436
01:17:23,000 --> 01:17:25,000
其实你说到这个地方的话

1437
01:17:25,000 --> 01:17:27,000
其实你说到这个地方的话

1438
01:17:27,000 --> 01:17:29,000
其实我最近在做一些公众的项目

1439
01:17:29,000 --> 01:17:31,000
其实我最近在做一些公众的项目

1440
01:17:31,000 --> 01:17:33,000
就是包括我和我之间一些同事也在探讨

1441
01:17:33,000 --> 01:17:35,000
就是包括我和我之间一些同事也在探讨

1442
01:17:35,000 --> 01:17:37,000
三维重建

1443
01:17:37,000 --> 01:17:39,000
因为现在的识别任务

1444
01:17:39,000 --> 01:17:41,000
都是需要大人的样本

1445
01:17:41,000 --> 01:17:43,000
样本去做

1446
01:17:43,000 --> 01:17:45,000
三D建模模型重建出来之后

1447
01:17:45,000 --> 01:17:47,000
三D建模模型重建出来之后

1448
01:17:47,000 --> 01:17:49,000
其实也可以为这个识别去提供

1449
01:17:49,000 --> 01:17:51,000
其实也可以为这个识别去提供

1450
01:17:51,000 --> 01:17:53,000
很多的这样的样本

1451
01:17:53,000 --> 01:17:55,000
比如说我们可以做这样一个

1452
01:17:55,000 --> 01:17:57,000
假设一个场景

1453
01:17:57,000 --> 01:17:59,000
比如说我要识别

1454
01:17:59,000 --> 01:18:01,000
一个水果

1455
01:18:01,000 --> 01:18:03,000
桃子

1456
01:18:03,000 --> 01:18:05,000
那么我可以把这个桃子的模型

1457
01:18:05,000 --> 01:18:07,000
先重建出来

1458
01:18:07,000 --> 01:18:09,000
重建出来之后

1459
01:18:09,000 --> 01:18:11,000
那么不同的纹理的变化

1460
01:18:11,000 --> 01:18:13,000
不同的光照的变化

1461
01:18:13,000 --> 01:18:15,000
甚至是这个桃子本身形状的变化

1462
01:18:15,000 --> 01:18:17,000
都是一些样本

1463
01:18:17,000 --> 01:18:19,000
就是从不同的相机去观测

1464
01:18:19,000 --> 01:18:21,000
就是从不同的相机去观测这个

1465
01:18:21,000 --> 01:18:23,000
桃子它都会生成不同的图片

1466
01:18:23,000 --> 01:18:25,000
实际上有了这样一个仿真器之后

1467
01:18:25,000 --> 01:18:27,000
其实这个样本的数量就会无情多

1468
01:18:27,000 --> 01:18:29,000
因为目前来说

1469
01:18:29,000 --> 01:18:31,000
做深度学习的话还是基于样本数据

1470
01:18:31,000 --> 01:18:33,000
所以如果

1471
01:18:33,000 --> 01:18:35,000
通过三维建模去做一些

1472
01:18:35,000 --> 01:18:37,000
样本的话

1473
01:18:37,000 --> 01:18:39,000
就是

1474
01:18:39,000 --> 01:18:41,000
可以很直接的生存

1475
01:18:41,000 --> 01:18:43,000
很多的水源数据

1476
01:18:43,000 --> 01:18:45,000
这也是一个比较直接的应用

1477
01:18:45,000 --> 01:18:47,000
当然就是还有其他的

1478
01:18:47,000 --> 01:18:49,000
一些

1479
01:18:49,000 --> 01:18:51,000
一些方式比如说从3D的

1480
01:18:51,000 --> 01:18:53,000
角度去理解识别

1481
01:18:53,000 --> 01:18:55,000
因为我们本身人看到的这个世界

1482
01:18:55,000 --> 01:18:57,000
本身这个世界

1483
01:18:57,000 --> 01:18:59,000
是三维的只不过我们相机

1484
01:18:59,000 --> 01:19:01,000
去重向的时候去变成一个二维的

1485
01:19:01,000 --> 01:19:03,000
那怎么样去从3D的这个

1486
01:19:03,000 --> 01:19:05,000
角度去思考

1487
01:19:05,000 --> 01:19:07,000
因为3D建模的话如果你掌握的比较熟练

1488
01:19:07,000 --> 01:19:09,000
肯定对这个问题了解会比较深刻

1489
01:19:09,000 --> 01:19:11,000
我觉得这也是一个比较好的

1490
01:19:11,000 --> 01:19:13,000
一个方向

1491
01:19:13,000 --> 01:19:21,000
还有一个就是

1492
01:19:21,000 --> 01:19:23,000
说到这个仿真器

1493
01:19:23,000 --> 01:19:25,000
我也是最近在做的一个工作

1494
01:19:25,000 --> 01:19:27,000
就是做Mesh的一个分割

1495
01:19:27,000 --> 01:19:29,000
通过多个视角

1496
01:19:29,000 --> 01:19:31,000
多个视角去分割这个

1497
01:19:31,000 --> 01:19:33,000
Mesh因为我们直接在Mesh上

1498
01:19:33,000 --> 01:19:35,000
做的话目前的方法都不是

1499
01:19:35,000 --> 01:19:37,000
特别的稳定

1500
01:19:37,000 --> 01:19:39,000
包括转换成点云的话

1501
01:19:39,000 --> 01:19:41,000
PointNet来做

1502
01:19:41,000 --> 01:19:43,000
PointNet对输入是有要求的

1503
01:19:43,000 --> 01:19:45,000
1024个或2048个点

1504
01:19:45,000 --> 01:19:47,000
这样的话就是

1505
01:19:47,000 --> 01:19:49,000
我们一般的一个Mesh都是几万个点

1506
01:19:49,000 --> 01:19:51,000
或几十万个点这样来做显然就不太合适

1507
01:19:51,000 --> 01:19:53,000
或者是用这个JCN

1508
01:19:53,000 --> 01:19:55,000
图这个卷机

1509
01:19:55,000 --> 01:19:57,000
目前也没有到了一个特别

1510
01:19:57,000 --> 01:19:59,000
稳定的实用的一个程度

1511
01:19:59,000 --> 01:20:01,000
所以我们能想到的就是用

1512
01:20:01,000 --> 01:20:03,000
多视角的方法通过控制

1513
01:20:03,000 --> 01:20:05,000
相机的一个姿态

1514
01:20:05,000 --> 01:20:07,000
去双重一些图片

1515
01:20:07,000 --> 01:20:09,000
然后在图片上去做一些2D的分割

1516
01:20:09,000 --> 01:20:11,000
然后再把分割的结果

1517
01:20:11,000 --> 01:20:13,000
整合到三维上

1518
01:20:13,000 --> 01:20:15,000
这个是我们目前正在做的一个任务

1519
01:20:15,000 --> 01:20:17,000
当然目前来说有了初步的效果

1520
01:20:17,000 --> 01:20:19,000
初步的效果还不错

1521
01:20:19,000 --> 01:20:21,000
但是还不是特别

1522
01:20:21,000 --> 01:20:23,000
稳定因为我们的训练数据比较少

1523
01:20:23,000 --> 01:20:25,000
还有一个就是

1524
01:20:25,000 --> 01:20:27,000
通过不同的渲染的方法

1525
01:20:27,000 --> 01:20:31,000
应该也可以去

1526
01:20:31,000 --> 01:20:33,000
提升一些可辨别的信息

1527
01:20:33,000 --> 01:20:35,000
其实我们在判断

1528
01:20:35,000 --> 01:20:37,000
深度学习能做到什么程度

1529
01:20:37,000 --> 01:20:39,000
很简单的一个方法就是

1530
01:20:39,000 --> 01:20:41,000
就是看人眼能识别到什么程度

1531
01:20:41,000 --> 01:20:43,000
如果人眼能够识别出来的话

1532
01:20:43,000 --> 01:20:45,000
那么基本上深度学习的话

1533
01:20:45,000 --> 01:20:47,000
深度学习

1534
01:20:47,000 --> 01:20:49,000
都是有可能去做的

1535
01:20:49,000 --> 01:20:51,000
但如果说人眼都分不出来的话

1536
01:20:51,000 --> 01:20:53,000
那深度学习肯定是也是解决不了的

1537
01:20:53,000 --> 01:20:55,000
传统的优化方法

1538
01:20:55,000 --> 01:20:57,000
就是像这个IMG优化方法

1539
01:20:57,000 --> 01:20:59,000
其实我最近也在思考一些问题

1540
01:20:59,000 --> 01:21:01,000
如果大家感兴趣的话

1541
01:21:01,000 --> 01:21:03,000
可以一起思考一下

1542
01:21:03,000 --> 01:21:05,000
其实这个深度学习

1543
01:21:05,000 --> 01:21:07,000
也是在做这个

1544
01:21:07,000 --> 01:21:09,000
也是在做

1545
01:21:09,000 --> 01:21:11,000
一个我们知道它常用的这个方法

1546
01:21:11,000 --> 01:21:13,000
就是随机提度下降

1547
01:21:13,000 --> 01:21:15,000
所以我们就去看

1548
01:21:15,000 --> 01:21:17,000
我们就去看

1549
01:21:17,000 --> 01:21:19,000
我们就去看

1550
01:21:19,000 --> 01:21:21,000
我们就去看

1551
01:21:21,000 --> 01:21:23,000
我们就去看

1552
01:21:23,000 --> 01:21:25,000
这个LM计划里面

1553
01:21:25,000 --> 01:21:27,000
我们做的这些能量函数的优化

1554
01:21:27,000 --> 01:21:29,000
它也是一个提度下降

1555
01:21:29,000 --> 01:21:31,000
我不知道大家有没有思考一下

1556
01:21:31,000 --> 01:21:33,000
这两个提度下降

1557
01:21:33,000 --> 01:21:35,000
到底有没有什么关联

1558
01:21:35,000 --> 01:21:37,000
它们本质的区别在什么地方

1559
01:21:37,000 --> 01:21:39,000
如果大家

1560
01:21:39,000 --> 01:21:41,000
有思考的结果的话

1561
01:21:41,000 --> 01:21:43,000
也可以跟我联系我们去探讨一下

1562
01:21:43,000 --> 01:21:45,000
就这个问题

1563
01:21:45,000 --> 01:21:47,000
我最近一直在想的这个问题

1564
01:21:47,000 --> 01:21:49,000
那如果说

1565
01:21:49,000 --> 01:21:51,000
有没有

1566
01:21:51,000 --> 01:21:53,000
就是后端的

1567
01:21:53,000 --> 01:21:55,000
过程中

1568
01:21:55,000 --> 01:21:57,000
有没有可能被深度学习替代

1569
01:21:57,000 --> 01:21:59,000
那么其实还是回到这个问题上

1570
01:21:59,000 --> 01:22:01,000
你首先要搞清楚

1571
01:22:01,000 --> 01:22:03,000
什么是可以学习的

1572
01:22:03,000 --> 01:22:05,000
什么是不可以学习的

1573
01:22:05,000 --> 01:22:07,000
统计的信息是可以学习的

1574
01:22:07,000 --> 01:22:09,000
比如说里面的一些参数

1575
01:22:09,000 --> 01:22:11,000
我们是可以学

1576
01:22:11,000 --> 01:22:13,000
可能是可以学习的

1577
01:22:13,000 --> 01:22:15,000
但是有一些东西确实是不能学

1578
01:22:15,000 --> 01:22:17,000
所以就是你要想

1579
01:22:17,000 --> 01:22:19,000
找一些可以替代的任务

1580
01:22:19,000 --> 01:22:21,000
那你就跟这个整组去判断就可以了

1581
01:22:21,000 --> 01:22:29,000
好我们讲这么多

1582
01:22:29,000 --> 01:22:31,000
然后现在来看一下这个

1583
01:22:31,000 --> 01:22:33,000
代码

1584
01:22:33,000 --> 01:22:37,000
我这个代码呢放在

1585
01:22:37,000 --> 01:22:41,000
放在这个GitHub上

1586
01:22:41,000 --> 01:22:43,000
这个

1587
01:22:43,000 --> 01:22:45,000
这个地址呢

1588
01:22:45,000 --> 01:22:47,000
这个我在社交上已经

1589
01:22:47,000 --> 01:22:49,000
已经写到了

1590
01:22:49,000 --> 01:22:51,000
这个地址

1591
01:22:51,000 --> 01:22:55,000
所以这个

1592
01:22:55,000 --> 01:22:57,000
应该不需要

1593
01:22:57,000 --> 01:22:59,000
直接下载文件就行了

1594
01:22:59,000 --> 01:23:01,000
每一次的任务已经在里面了

1595
01:23:01,000 --> 01:23:03,000
可以大家通过

1596
01:23:03,000 --> 01:23:07,000
下载一个GitHub

1597
01:23:07,000 --> 01:23:09,000
然后直接GitClean

1598
01:23:09,000 --> 01:23:13,000
GitClean一行命令

1599
01:23:13,000 --> 01:23:15,000
这样就可以直接下载

1600
01:23:15,000 --> 01:23:17,000
我这里面已经存在了

1601
01:23:17,000 --> 01:23:27,000
通过这个命令

1602
01:23:27,000 --> 01:23:29,000
你可以把这个所有的代码

1603
01:23:29,000 --> 01:23:31,000
下载到这个

1604
01:23:31,000 --> 01:23:33,000
下载到这个文件夹下

1605
01:23:33,000 --> 01:23:35,000
下载完了之后

1606
01:23:35,000 --> 01:23:37,000
打开你可以看到这样一个

1607
01:23:37,000 --> 01:23:39,000
架构

1608
01:23:39,000 --> 01:23:41,000
其实我觉得

1609
01:23:41,000 --> 01:23:43,000
通过我们这个课程呢

1610
01:23:43,000 --> 01:23:45,000
你还可以学到一点就是

1611
01:23:45,000 --> 01:23:47,000
我们在常用的一些工程的部署

1612
01:23:47,000 --> 01:23:49,000
工程的文件

1613
01:23:49,000 --> 01:23:51,000
其实我个人比较喜欢

1614
01:23:51,000 --> 01:23:53,000
OpenCV和这个

1615
01:23:53,000 --> 01:23:55,000
PCL就是那个

1616
01:23:55,000 --> 01:23:57,000
点云的就是点云处理的

1617
01:23:57,000 --> 01:23:59,000
PointCave Library

1618
01:23:59,000 --> 01:24:01,000
它这些架构

1619
01:24:01,000 --> 01:24:03,000
包括它的一些命名的方式

1620
01:24:03,000 --> 01:24:05,000
这个我觉得都是比较清晰

1621
01:24:05,000 --> 01:24:07,000
比较易学习的

1622
01:24:07,000 --> 01:24:09,000
所以我在

1623
01:24:09,000 --> 01:24:11,000
写这个框架的时候

1624
01:24:11,000 --> 01:24:13,000
在重新编辑这个框架的时候

1625
01:24:13,000 --> 01:24:15,000
也多多少少参考他们的一些思路

1626
01:24:15,000 --> 01:24:17,000
我们看这个

1627
01:24:17,000 --> 01:24:19,000
这个架构

1628
01:24:19,000 --> 01:24:21,000
这个架构下面有这个

1629
01:24:21,000 --> 01:24:23,000
它用CMake管理的

1630
01:24:23,000 --> 01:24:25,000
然后

1631
01:24:25,000 --> 01:24:27,000
里面

1632
01:24:27,000 --> 01:24:29,000
会有不同的这些文件夹

1633
01:24:29,000 --> 01:24:31,000
比如Utl它提供的一些

1634
01:24:31,000 --> 01:24:33,000
基本的框架

1635
01:24:33,000 --> 01:24:35,000
Core然后提供基本的数据结构

1636
01:24:35,000 --> 01:24:37,000
Example然后所有的

1637
01:24:37,000 --> 01:24:39,000
我们的任务都在这里面

1638
01:24:39,000 --> 01:24:41,000
然后CMake这个是用来

1639
01:24:41,000 --> 01:24:43,000
做一些基本的配置的

1640
01:24:43,000 --> 01:24:45,000
寻找库的时候

1641
01:24:45,000 --> 01:24:47,000
比如说像

1642
01:24:47,000 --> 01:24:49,000
寻找库的时候需要这样一些文件

1643
01:24:49,000 --> 01:24:51,000
比如说Fund Engine,Fund TBB

1644
01:24:51,000 --> 01:24:53,000
一般来说

1645
01:24:53,000 --> 01:24:55,000
我们在装这个CMake

1646
01:24:55,000 --> 01:24:57,000
这个软件的时候它会自带很多

1647
01:24:57,000 --> 01:24:59,000
Fund的什么什么

1648
01:24:59,000 --> 01:25:01,000
就常用的都会有

1649
01:25:01,000 --> 01:25:03,000
比如说Fund Boost

1650
01:25:03,000 --> 01:25:05,000
当你装了这个BOOST库的时候

1651
01:25:05,000 --> 01:25:07,000
它会把这个

1652
01:25:07,000 --> 01:25:09,000
当你装这个不用装BOOST

1653
01:25:09,000 --> 01:25:11,000
就是

1654
01:25:11,000 --> 01:25:13,000
你装CMake之后它常用的

1655
01:25:13,000 --> 01:25:15,000
这些寻找库的都会在里面

1656
01:25:15,000 --> 01:25:17,000
比如说Fund

1657
01:25:17,000 --> 01:25:19,000
BOOST这种

1658
01:25:19,000 --> 01:25:21,000
还有这个

1659
01:25:21,000 --> 01:25:23,000
TBB是我们这里面

1660
01:25:23,000 --> 01:25:25,000
用的

1661
01:25:25,000 --> 01:25:27,000
Fund BOOST,Fund

1662
01:25:27,000 --> 01:25:29,000
OpenCV或者是其他的

1663
01:25:29,000 --> 01:25:31,000
基本的一些常用的库都会有

1664
01:25:31,000 --> 01:25:33,000
但是有一些没有

1665
01:25:33,000 --> 01:25:35,000
Fund Engine有时候会出问题

1666
01:25:35,000 --> 01:25:37,000
所以你这时候需要自己放一个

1667
01:25:37,000 --> 01:25:39,000
Engine,CMake在里面供信一下

1668
01:25:39,000 --> 01:25:41,000
这个里面CMake

1669
01:25:41,000 --> 01:25:43,000
然后你把你这个CMake的路径

1670
01:25:43,000 --> 01:25:45,000
放到这个CMake List里面

1671
01:25:45,000 --> 01:25:47,000
它就会默认的把这些模块都加在上去

1672
01:25:47,000 --> 01:25:49,000
而这3D Parties

1673
01:25:49,000 --> 01:25:51,000
就是我依赖的一些库

1674
01:25:51,000 --> 01:25:53,000
我需要自己编译的

1675
01:25:53,000 --> 01:25:55,000
比如说MRF就是Marcov

1676
01:25:55,000 --> 01:25:57,000
随机场的优化

1677
01:25:57,000 --> 01:25:59,000
Jflank这是做调试用的

1678
01:25:59,000 --> 01:26:01,000
还有JCO

1679
01:26:01,000 --> 01:26:03,000
这是做碰撞检测用的

1680
01:26:03,000 --> 01:26:05,000
这是我这个工程里面用到的

1681
01:26:05,000 --> 01:26:07,000
我都放在这里面了

1682
01:26:07,000 --> 01:26:09,000
然后其他的就是

1683
01:26:09,000 --> 01:26:11,000
还有一个Math,Math的话是一些基本的数学库

1684
01:26:11,000 --> 01:26:13,000
包括像亮

1685
01:26:13,000 --> 01:26:15,000
矩阵,四元束

1686
01:26:15,000 --> 01:26:17,000
还有这个

1687
01:26:17,000 --> 01:26:19,000
几何

1688
01:26:19,000 --> 01:26:21,000
还有这些基本的几何结构

1689
01:26:21,000 --> 01:26:23,000
线,矩阵,SVD分解

1690
01:26:23,000 --> 01:26:25,000
基本常用的数学运算

1691
01:26:25,000 --> 01:26:27,000
都在这里面

1692
01:26:27,000 --> 01:26:29,000
然后有了这些基础之后

1693
01:26:29,000 --> 01:26:34,000
然后就是我们这节课的一些基本的一些架构

1694
01:26:34,000 --> 01:26:36,000
就是那个流程3分之1的流程

1695
01:26:36,000 --> 01:26:37,000
Fetcher

1696
01:26:37,000 --> 01:26:39,000
它就提供了特种检测

1697
01:26:39,000 --> 01:26:41,000
提供Serve和ZF特种检测

1698
01:26:41,000 --> 01:26:45,000
然后后面就是一个匹配的方法

1699
01:26:45,000 --> 01:26:47,000
这里面用到了

1700
01:26:47,000 --> 01:26:49,000
Bolly匹配

1701
01:26:49,000 --> 01:26:51,000
还有最近您的一些

1702
01:26:51,000 --> 01:26:53,000
最近您的一些

1703
01:26:53,000 --> 01:26:55,000
计算的方法

1704
01:26:55,000 --> 01:26:57,000
当然还有一些哈希

1705
01:26:57,000 --> 01:26:59,000
这节课我们没有讲到

1706
01:26:59,000 --> 01:27:01,000
它其实就是一个提速的方法

1707
01:27:01,000 --> 01:27:03,000
Fetcher

1708
01:27:03,000 --> 01:27:05,000
然后后面的话就是一个

1709
01:27:05,000 --> 01:27:07,000
相机几何的一个约束

1710
01:27:07,000 --> 01:27:09,000
就是全都放在这个

1711
01:27:09,000 --> 01:27:11,000
Sraffle Motion里面

1712
01:27:11,000 --> 01:27:13,000
这里面包含的常用的

1713
01:27:13,000 --> 01:27:15,000
就是BA

1714
01:27:15,000 --> 01:27:17,000
还有这个

1715
01:27:17,000 --> 01:27:19,000
对极几何的约束

1716
01:27:19,000 --> 01:27:21,000
相机的模型

1717
01:27:21,000 --> 01:27:23,000
还有这个Sraffle Motion的框架

1718
01:27:23,000 --> 01:27:25,000
基本上都在这里面

1719
01:27:25,000 --> 01:27:27,000
它有它的优化方法

1720
01:27:27,000 --> 01:27:29,000
比如说吸收矩阵的优化方法

1721
01:27:29,000 --> 01:27:31,000
吸收的线性方程

1722
01:27:31,000 --> 01:27:33,000
大规模的吸收线性方程优化方法

1723
01:27:33,000 --> 01:27:35,000
都在这里面

1724
01:27:35,000 --> 01:27:37,000
这个是本节课的一个核心

1725
01:27:37,000 --> 01:27:39,000
其实如果你能够把这里面的每个代码

1726
01:27:39,000 --> 01:27:41,000
全部都看明白掌握了

1727
01:27:41,000 --> 01:27:45,000
然后能把里面的相关公式推导出来

1728
01:27:45,000 --> 01:27:47,000
其实

1729
01:27:47,000 --> 01:27:49,000
基本上

1730
01:27:49,000 --> 01:27:51,000
不管是三维建模也好

1731
01:27:51,000 --> 01:27:53,000
不管是Slam也好

1732
01:27:53,000 --> 01:27:55,000
基本上就入阶了

1733
01:27:55,000 --> 01:27:57,000
基本上知识已经掌握了

1734
01:27:57,000 --> 01:27:59,000
然后这个Sraffle Motion之后

1735
01:27:59,000 --> 01:28:01,000
有一个MVS

1736
01:28:01,000 --> 01:28:03,000
就是重蜜点云的一个重建

1737
01:28:03,000 --> 01:28:07,000
MVS是用了深度图的约束

1738
01:28:07,000 --> 01:28:11,000
实际上用的是深度图重建的思路

1739
01:28:11,000 --> 01:28:15,000
MVS现在是目前计算量最大的一个过程

1740
01:28:15,000 --> 01:28:19,000
而且现在也很难去做到一个事实

1741
01:28:19,000 --> 01:28:21,000
所以我说就是用3D约束去做

1742
01:28:21,000 --> 01:28:25,000
这个基于深度学习的深度估计

1743
01:28:25,000 --> 01:28:27,000
倒是有可能解决这个问题

1744
01:28:27,000 --> 01:28:29,000
但前期是这个深度估计做的比较准

1745
01:28:29,000 --> 01:28:31,000
如果是能做的比较准的话

1746
01:28:31,000 --> 01:28:33,000
那么这个问题倒是可以解决

1747
01:28:33,000 --> 01:28:37,000
那我们就不需要通过这么复杂的匹配方法

1748
01:28:37,000 --> 01:28:39,000
去生长的这样一个匹配方法

1749
01:28:39,000 --> 01:28:43,000
去做每个像素的一个多视角的一个匹配

1750
01:28:43,000 --> 01:28:45,000
如果说有一天真的这个深度学习

1751
01:28:45,000 --> 01:28:47,000
深度估计能够做的比较准确

1752
01:28:47,000 --> 01:28:49,000
这个真的是有可能

1753
01:28:49,000 --> 01:28:51,000
实施的重建

1754
01:28:51,000 --> 01:28:53,000
还有就是这个Surface

1755
01:28:53,000 --> 01:28:57,000
Surface的话就是来做重新点的重建

1756
01:28:57,000 --> 01:28:59,000
这里面用到一个比较复杂的数据结构

1757
01:28:59,000 --> 01:29:01,000
Octree 8X数

1758
01:29:01,000 --> 01:29:05,000
4X数,2X数大家应该很熟悉

1759
01:29:05,000 --> 01:29:07,000
再往上的话就是4X数

1760
01:29:07,000 --> 01:29:09,000
4X数还是一个二维档

1761
01:29:09,000 --> 01:29:11,000
然后再往上就是8X数

1762
01:29:11,000 --> 01:29:13,000
这个是非常非常考验你的想像能力

1763
01:29:13,000 --> 01:29:15,000
所以你可能会想到

1764
01:29:15,000 --> 01:29:19,000
再往上就是8X数,这个是非常非常考验你的想像能力的

1765
01:29:19,000 --> 01:29:21,000
还有编程能力的

1766
01:29:21,000 --> 01:29:23,000
就是怎么样构建8X数

1767
01:29:23,000 --> 01:29:25,000
怎么样进行8X数的编例

1768
01:29:25,000 --> 01:29:29,000
这个顶点的,每个节点的一个构建

1769
01:29:29,000 --> 01:29:35,000
节点的局部的索引和全局的索引的一个计算

1770
01:29:35,000 --> 01:29:37,000
这一块下来之后

1771
01:29:37,000 --> 01:29:41,000
我觉得你的数据结构基本上就可以差不多了

1772
01:29:41,000 --> 01:29:43,000
至少数字一块的数据结构就差不多了

1773
01:29:45,000 --> 01:29:47,000
好

1774
01:29:47,000 --> 01:30:05,000
然后Cephas后面就是

1775
01:30:05,000 --> 01:30:07,000
就是这个

1776
01:30:07,000 --> 01:30:09,000
文理的一个重建

1777
01:30:09,000 --> 01:30:11,000
文理的创建与编辑

1778
01:30:11,000 --> 01:30:13,000
这里面也包含著好多的技术路线

1779
01:30:13,000 --> 01:30:15,000
比如说

1780
01:30:15,000 --> 01:30:17,000
就是这个

1781
01:30:17,000 --> 01:30:19,000
马尔科夫厂的一个

1782
01:30:19,000 --> 01:30:21,000
基于马尔科夫厂的一个优化

1783
01:30:21,000 --> 01:30:23,000
就是我要把这些

1784
01:30:23,000 --> 01:30:25,000
每个顶点对应不同的视角

1785
01:30:25,000 --> 01:30:27,000
怎么样给每个顶点选一个最佳的一个视角

1786
01:30:27,000 --> 01:30:31,000
也包含著全局的一个非限性的优化

1787
01:30:31,000 --> 01:30:33,000
还包含著这个

1788
01:30:33,000 --> 01:30:35,000
博松的一个重建

1789
01:30:35,000 --> 01:30:37,000
博松的编辑

1790
01:30:37,000 --> 01:30:39,000
博松编辑主要是

1791
01:30:39,000 --> 01:30:41,000
图像融合

1792
01:30:41,000 --> 01:30:43,000
怎么样把两幅图像融合在一起

1793
01:30:43,000 --> 01:30:45,000
然后又没有缝隙

1794
01:30:45,000 --> 01:30:47,000
这个是博松编辑

1795
01:30:47,000 --> 01:30:49,000
需要做的一个事情

1796
01:30:49,000 --> 01:30:51,000
所以文理重建里面也有三个技术点

1797
01:30:51,000 --> 01:30:53,000
这三个技术点做完之后

1798
01:30:53,000 --> 01:30:57,000
你就可以做好多的应用

1799
01:30:57,000 --> 01:30:59,000
比如说做换脸

1800
01:30:59,000 --> 01:31:01,000
比如说做换脸我要把一个人的人脸

1801
01:31:01,000 --> 01:31:03,000
换到另一个人的人脸上

1802
01:31:03,000 --> 01:31:05,000
那你直接换上去之后

1803
01:31:05,000 --> 01:31:07,000
它肯定会有缝隙

1804
01:31:07,000 --> 01:31:09,000
但是博松的计算量很大

1805
01:31:09,000 --> 01:31:11,000
每个像素都是一个位置量

1806
01:31:11,000 --> 01:31:13,000
所以说如果你是一个1000x1000的像素

1807
01:31:13,000 --> 01:31:15,000
你想想它有多少的位置量

1808
01:31:15,000 --> 01:31:17,000
这个过程就很慢

1809
01:31:17,000 --> 01:31:19,000
所以怎么办呢

1810
01:31:19,000 --> 01:31:21,000
要想知道解决方法的话

1811
01:31:21,000 --> 01:31:23,000
你就看一下我们这节课的

1812
01:31:23,000 --> 01:31:25,000
这个技术路线

1813
01:31:25,000 --> 01:31:27,000
我们这节课是怎么样

1814
01:31:27,000 --> 01:31:29,000
去做一个很快速的这样一个编辑的

1815
01:31:29,000 --> 01:31:39,000
这个就是一个代码的整体的一个架构

1816
01:31:39,000 --> 01:31:41,000
下载下来之后

1817
01:31:41,000 --> 01:31:43,000
你就可以去用这个Cline

1818
01:31:43,000 --> 01:31:45,000
我比较喜欢用Cline

1819
01:31:45,000 --> 01:31:47,000
如果你不用Cline

1820
01:31:47,000 --> 01:31:49,000
只是想运行的话

1821
01:31:49,000 --> 01:31:51,000
也可以一般来说

1822
01:31:51,000 --> 01:31:53,000
用Cmake管理的所有的软件

1823
01:31:53,000 --> 01:31:55,000
你都可以通过这种方式编辑

1824
01:31:55,000 --> 01:31:57,000
比如说

1825
01:31:57,000 --> 01:31:59,000
进去之后

1826
01:31:59,000 --> 01:32:01,000
进到这个文件夹里面

1827
01:32:01,000 --> 01:32:05,000
基本上我们现在用的这些

1828
01:32:05,000 --> 01:32:07,000
Linux或者ROS下载的酷

1829
01:32:07,000 --> 01:32:09,000
大部分

1830
01:32:09,000 --> 01:32:11,000
绝大部分都是用Cmake管理的

1831
01:32:11,000 --> 01:32:13,000
所有的用Cmake管理的

1832
01:32:13,000 --> 01:32:15,000
怎么判断用Cmake管理呢

1833
01:32:15,000 --> 01:32:17,000
就是打开解压之后

1834
01:32:17,000 --> 01:32:19,000
就有一个Cmake list

1835
01:32:19,000 --> 01:32:21,000
这样一个文件

1836
01:32:21,000 --> 01:32:23,000
这个时候你就可以用Cmake

1837
01:32:23,000 --> 01:32:25,000
去编译

1838
01:32:25,000 --> 01:32:27,000
编译这个酷

1839
01:32:27,000 --> 01:32:29,000
编译的方法就是

1840
01:32:29,000 --> 01:32:31,000
进到这个文件夹里面

1841
01:32:31,000 --> 01:32:35,000
存进一个文件夹

1842
01:32:35,000 --> 01:32:37,000
必要的文件夹

1843
01:32:37,000 --> 01:32:39,000
然后进行一个编译

1844
01:32:39,000 --> 01:32:41,000
当然也可以提供一些常用的参数

1845
01:32:41,000 --> 01:32:43,000
比如说

1846
01:32:43,000 --> 01:32:45,000
我要编译

1847
01:32:45,000 --> 01:32:49,000
编译release模型

1848
01:32:49,000 --> 01:32:51,000
release模型

1849
01:32:51,000 --> 01:33:01,000
刷了一个字幕

1850
01:33:01,000 --> 01:33:07,000
我要编译release模型

1851
01:33:07,000 --> 01:33:09,000
那么我就可以

1852
01:33:09,000 --> 01:33:11,000
这样就是编译出来的

1853
01:33:11,000 --> 01:33:13,000
release模型

1854
01:33:13,000 --> 01:33:15,000
如果是在

1855
01:33:15,000 --> 01:33:17,000
Linux下的话

1856
01:33:17,000 --> 01:33:19,000
就是编译出来的

1857
01:33:19,000 --> 01:33:21,000
就是

1858
01:33:21,000 --> 01:33:23,000
在Linux下的话

1859
01:33:23,000 --> 01:33:25,000
就是编译出来

1860
01:33:25,000 --> 01:33:27,000
直接是用make文件

1861
01:33:27,000 --> 01:33:29,000
直接用make就可以进行

1862
01:33:29,000 --> 01:33:31,000
ROS下也是一样的

1863
01:33:31,000 --> 01:33:33,000
make就可以直接

1864
01:33:33,000 --> 01:33:35,000
这个文件进行

1865
01:33:35,000 --> 01:33:37,000
这个文件进行编译

1866
01:33:37,000 --> 01:33:39,000
当然如果要进行一个多信息

1867
01:33:39,000 --> 01:33:41,000
编译的话

1868
01:33:41,000 --> 01:33:43,000
就make4j8+这样一个命令

1869
01:33:43,000 --> 01:33:45,000
那么就可以编译成可视用文件

1870
01:33:45,000 --> 01:33:47,000
在Windows下的话你用cmake

1871
01:33:47,000 --> 01:33:49,000
而且你选的是

1872
01:33:49,000 --> 01:33:51,000
编译器,选的是VS的话

1873
01:33:51,000 --> 01:33:53,000
那么你编译出来就是一个

1874
01:33:53,000 --> 01:33:55,000
SLN的一个

1875
01:33:55,000 --> 01:33:57,000
解决方案的文件

1876
01:33:57,000 --> 01:33:59,000
你打开之后,然后就直接可以

1877
01:33:59,000 --> 01:34:01,000
用VS相关的版本

1878
01:34:01,000 --> 01:34:03,000
然后进行一个管理

1879
01:34:03,000 --> 01:34:07,000
其实我公司推荐的是用Cline

1880
01:34:07,000 --> 01:34:09,000
Cline这个软件

1881
01:34:09,000 --> 01:34:11,000
它本身就是用cmake管理的

1882
01:34:11,000 --> 01:34:13,000
所以你打开之后

1883
01:34:13,000 --> 01:34:15,000
就可以看到是这样的一个界面

1884
01:34:15,000 --> 01:34:19,000
每个模块都很清楚

1885
01:34:19,000 --> 01:34:21,000
而且它

1886
01:34:21,000 --> 01:34:23,000
不管是做一些

1887
01:34:23,000 --> 01:34:25,000
文件的

1888
01:34:25,000 --> 01:34:27,000
就是编列名的公改

1889
01:34:27,000 --> 01:34:29,000
都特别方便

1890
01:34:29,000 --> 01:34:31,000
比如说我要公改的话

1891
01:34:31,000 --> 01:34:33,000
refactor就是改它的名字

1892
01:34:33,000 --> 01:34:35,000
它会自动的把所有的这些位置都进行一个

1893
01:34:35,000 --> 01:34:37,000
名字的公改

1894
01:34:37,000 --> 01:34:39,000
当然你要用cmake添加一些文件的时候

1895
01:34:39,000 --> 01:34:41,000
也很方便

1896
01:34:41,000 --> 01:34:43,000
我现在就用cmake的

1897
01:34:43,000 --> 01:34:45,000
一个总共的工程

1898
01:34:45,000 --> 01:34:47,000
project表示这个工程的名字

1899
01:34:47,000 --> 01:34:49,000
然后

1900
01:34:49,000 --> 01:34:51,000
刚才我讲过了

1901
01:34:51,000 --> 01:34:53,000
有一些酷的配置

1902
01:34:53,000 --> 01:34:55,000
放你的cmake

1903
01:34:55,000 --> 01:34:57,000
需要你自己去添加一些文件

1904
01:34:57,000 --> 01:34:59,000
那么这一句话的

1905
01:34:59,000 --> 01:35:01,000
作用就是把cmake的

1906
01:35:01,000 --> 01:35:03,000
路径去加到这个工程里面

1907
01:35:03,000 --> 01:35:05,000
那么它加上这句话之后

1908
01:35:05,000 --> 01:35:07,000
它就会自动的访问cmake文件家

1909
01:35:07,000 --> 01:35:09,000
下面的这两个文件

1910
01:35:09,000 --> 01:35:11,000
如果我要去找engine库的话

1911
01:35:11,000 --> 01:35:13,000
那么它就会自动的定义这个文件

1912
01:35:13,000 --> 01:35:15,000
说到定义engine库

1913
01:35:15,000 --> 01:35:17,000
下面就是当我来找一个库的时候

1914
01:35:17,000 --> 01:35:19,000
就是用这个函数

1915
01:35:19,000 --> 01:35:21,000
FundPankageEngine

1916
01:35:21,000 --> 01:35:23,000
比如说我要找engine库

1917
01:35:23,000 --> 01:35:25,000
就是engine

1918
01:35:25,000 --> 01:35:27,000
所以你会看到

1919
01:35:27,000 --> 01:35:29,000
这个文件的名字

1920
01:35:29,000 --> 01:35:31,000
Fund后面这个名字

1921
01:35:31,000 --> 01:35:33,000
一般就是我要找到

1922
01:35:33,000 --> 01:35:35,000
FundPankage后面的这个名字

1923
01:35:35,000 --> 01:35:37,000
它俩是一样的

1924
01:35:37,000 --> 01:35:39,000
然后这个required

1925
01:35:39,000 --> 01:35:41,000
就表示我这个库是必须的

1926
01:35:41,000 --> 01:35:43,000
如果我加了这个关键词

1927
01:35:43,000 --> 01:35:45,000
那么当我找不到

1928
01:35:45,000 --> 01:35:47,000
从我这个系统文件里面找不到

1929
01:35:47,000 --> 01:35:49,000
这个库的时候它就会报错

1930
01:35:49,000 --> 01:35:51,000
那如果我不加这个词的话

1931
01:35:51,000 --> 01:35:53,000
那就说我找不到的时候

1932
01:35:53,000 --> 01:35:55,000
我

1933
01:35:55,000 --> 01:35:57,000
就不会报错

1934
01:35:57,000 --> 01:35:59,000
不会报错

1935
01:35:59,000 --> 01:36:01,000
如果是你必须的

1936
01:36:01,000 --> 01:36:03,000
这个库是必须的

1937
01:36:03,000 --> 01:36:05,000
那么就建议你加上这个关键词

1938
01:36:05,000 --> 01:36:07,000
说到这里的话

1939
01:36:07,000 --> 01:36:09,000
我再讲一下这个FundPankage的

1940
01:36:09,000 --> 01:36:11,000
工作的原理

1941
01:36:11,000 --> 01:36:13,000
当我

1942
01:36:13,000 --> 01:36:15,000
运行这个命令的时候

1943
01:36:15,000 --> 01:36:17,000
它就会

1944
01:36:17,000 --> 01:36:19,000
当我这个FundPankage运行命令的时候

1945
01:36:19,000 --> 01:36:21,000
它就会自动的找

1946
01:36:21,000 --> 01:36:23,000
这个FundEngine这个CMake

1947
01:36:23,000 --> 01:36:25,000
这个文件

1948
01:36:25,000 --> 01:36:27,000
这里面会提供一些

1949
01:36:27,000 --> 01:36:29,000
常用的一些

1950
01:36:29,000 --> 01:36:31,000
搜索路径

1951
01:36:31,000 --> 01:36:33,000
比如说这里面会有一些搜索路径

1952
01:36:33,000 --> 01:36:35,000
然后我就会通过这里面

1953
01:36:35,000 --> 01:36:37,000
设置的一些搜索路径

1954
01:36:37,000 --> 01:36:39,000
比如说Optical Local User Local这些

1955
01:36:39,000 --> 01:36:41,000
我们常应的

1956
01:36:41,000 --> 01:36:43,000
通过Linux

1957
01:36:43,000 --> 01:36:45,000
Linux下如果我们

1958
01:36:45,000 --> 01:36:47,000
通过Sodo APT

1959
01:36:47,000 --> 01:36:49,000
Sodo命令安装的

1960
01:36:49,000 --> 01:36:51,000
文件一般都是在这个

1961
01:36:51,000 --> 01:36:53,000
User里面

1962
01:36:53,000 --> 01:36:55,000
如果我们是自己编译安装的一般是在User Local里面

1963
01:36:55,000 --> 01:36:57,000
这是我们常用的

1964
01:36:57,000 --> 01:36:59,000
这个路径它会从这里面去

1965
01:36:59,000 --> 01:37:01,000
搜索一些相关的文件

1966
01:37:01,000 --> 01:37:03,000
然后再调整这个库所在的位置

1967
01:37:03,000 --> 01:37:05,000
所以当我们

1968
01:37:05,000 --> 01:37:07,000
调整这个命令之后

1969
01:37:07,000 --> 01:37:09,000
它其实是在自动的

1970
01:37:09,000 --> 01:37:11,000
搜索这个机器上

1971
01:37:11,000 --> 01:37:13,000
你的这个机器上的相关的

1972
01:37:13,000 --> 01:37:15,000
库的位置

1973
01:37:15,000 --> 01:37:17,000
搜索到了之后呢

1974
01:37:17,000 --> 01:37:19,000
比如说Engine Included

1975
01:37:19,000 --> 01:37:21,000
就表示这个库

1976
01:37:21,000 --> 01:37:23,000
就表示它这个图文件的位置

1977
01:37:23,000 --> 01:37:25,000
当然还有相关的

1978
01:37:25,000 --> 01:37:27,000
也会得到这个Library的位置

1979
01:37:27,000 --> 01:37:29,000
只不过这个Engine这个库

1980
01:37:29,000 --> 01:37:31,000
就是它没有这个Lib文件

1981
01:37:31,000 --> 01:37:33,000
所以它只要

1982
01:37:33,000 --> 01:37:35,000
Included上就可以了

1983
01:37:35,000 --> 01:37:37,000
然后添加一些常用的

1984
01:37:37,000 --> 01:37:39,000
Engine的一些

1985
01:37:39,000 --> 01:37:41,000
红六翼

1986
01:37:41,000 --> 01:37:43,000
可以自己默认添加上

1987
01:37:43,000 --> 01:37:45,000
那这个时候呢就是你的这个Engine

1988
01:37:45,000 --> 01:37:47,000
就链接到了这个工程里面

1989
01:37:47,000 --> 01:37:49,000
这里面提供了

1990
01:37:49,000 --> 01:37:51,000
一些基本的设置

1991
01:37:51,000 --> 01:37:53,000
比如说我要求我的工程

1992
01:37:53,000 --> 01:37:55,000
文件是Syncios C++11的

1993
01:37:55,000 --> 01:37:57,000
那么你就把这个C++11

1994
01:37:57,000 --> 01:37:59,000
加上

1995
01:37:59,000 --> 01:38:01,000
还有我要求这个编译的

1996
01:38:01,000 --> 01:38:03,000
这个一些参数

1997
01:38:03,000 --> 01:38:05,000
比如说FPSPIC

1998
01:38:05,000 --> 01:38:07,000
当我们不加这个时候就有的时候编译会报错

1999
01:38:07,000 --> 01:38:09,000
所以这个会提示你添加

2000
01:38:09,000 --> 01:38:11,000
那么你就要把它添加到这个Semic的

2001
01:38:11,000 --> 01:38:13,000
一些标志服务里面

2002
01:38:13,000 --> 01:38:15,000
好,添加完了之后呢

2003
01:38:15,000 --> 01:38:17,000
那么我们就下面

2004
01:38:17,000 --> 01:38:19,000
要开始进行编译

2005
01:38:19,000 --> 01:38:21,000
需要进行编译这几个

2006
01:38:21,000 --> 01:38:23,000
除了这几个模块之外

2007
01:38:23,000 --> 01:38:25,000
还有这个第三方的E-Log库

2008
01:38:25,000 --> 01:38:27,000
刚才介绍的这几个

2009
01:38:27,000 --> 01:38:29,000
比如说MRF

2010
01:38:29,000 --> 01:38:31,000
还有这个

2011
01:38:31,000 --> 01:38:33,000
碰撞检测的

2012
01:38:33,000 --> 01:38:35,000
还有这个,这也是一个图优化的

2013
01:38:35,000 --> 01:38:37,000
这个MARKV一个图优,快速的图优化的

2014
01:38:37,000 --> 01:38:39,000
我们看每一个

2015
01:38:39,000 --> 01:38:41,000
框架里面,比如说这个Core

2016
01:38:41,000 --> 01:38:43,000
这个图文件里面我们打开

2017
01:38:43,000 --> 01:38:45,000
我们打开一看

2018
01:38:45,000 --> 01:38:47,000
它也是有好多的这个

2019
01:38:47,000 --> 01:38:49,000
就是

2020
01:38:49,000 --> 01:38:51,000
就是这个

2021
01:38:51,000 --> 01:38:53,000
原文件或图文件

2022
01:38:53,000 --> 01:38:55,000
然后也采用了一个Semic进行管理

2023
01:38:55,000 --> 01:38:57,000
当然这里面每个框

2024
01:38:57,000 --> 01:38:59,000
都是一个,我要把它编译成一个

2025
01:38:59,000 --> 01:39:01,000
库

2026
01:39:01,000 --> 01:39:03,000
比如说在Windows下编译成Lib文件

2027
01:39:03,000 --> 01:39:05,000
在这个

2028
01:39:05,000 --> 01:39:07,000
Linux下编译成.so文件

2029
01:39:07,000 --> 01:39:09,000
当然在MARKVS下

2030
01:39:09,000 --> 01:39:11,000
编译成这个

2031
01:39:11,000 --> 01:39:13,000
另外一种

2032
01:39:13,000 --> 01:39:15,000
另外一种

2033
01:39:15,000 --> 01:39:17,000
然后每一个

2034
01:39:17,000 --> 01:39:19,000
里面,你看

2035
01:39:19,000 --> 01:39:21,000
这就是

2036
01:39:21,000 --> 01:39:23,000
我编译的一个方法

2037
01:39:23,000 --> 01:39:27,000
Project

2038
01:39:27,000 --> 01:39:29,000
这是表示我要编译的

2039
01:39:29,000 --> 01:39:31,000
那个库的名字

2040
01:39:31,000 --> 01:39:33,000
这里面也是提供了一些基本的设置

2041
01:39:33,000 --> 01:39:35,000
然后这里面要找的一些库

2042
01:39:35,000 --> 01:39:37,000
比如说这里面围了PNG

2043
01:39:37,000 --> 01:39:39,000
GPAC, TRF

2044
01:39:39,000 --> 01:39:41,000
这些都要

2045
01:39:41,000 --> 01:39:43,000
事先去安装一下

2046
01:39:43,000 --> 01:39:45,000
安装在你的机器上

2047
01:39:45,000 --> 01:39:49,000
其实安装方式

2048
01:39:49,000 --> 01:39:51,000
说到这个库的话

2049
01:39:51,000 --> 01:39:53,000
安装的Ellacool的话

2050
01:39:53,000 --> 01:39:55,000
我这里会有一个文件

2051
01:39:55,000 --> 01:39:57,000
就是我之前在上节课的时候

2052
01:39:57,000 --> 01:39:59,000
写的一个文件,就是怎么样配置

2053
01:39:59,000 --> 01:40:03,000
如果大家遇到一些

2054
01:40:03,000 --> 01:40:05,000
问题的话

2055
01:40:05,000 --> 01:40:07,000
这个文件的话,回头我会端入到新的课程里面

2056
01:40:07,000 --> 01:40:09,000
如果遇到

2057
01:40:09,000 --> 01:40:11,000
问题的话,其实

2058
01:40:11,000 --> 01:40:13,000
解决方法

2059
01:40:13,000 --> 01:40:15,000
也都很简单

2060
01:40:15,000 --> 01:40:17,000
这个刚才

2061
01:40:17,000 --> 01:40:19,000
我们编译的已经编译完了

2062
01:40:19,000 --> 01:40:21,000
然后你在里面

2063
01:40:21,000 --> 01:40:23,000
在你必要的文件里面

2064
01:40:23,000 --> 01:40:25,000
就可以看到这个

2065
01:40:25,000 --> 01:40:27,000
相关的一些库

2066
01:40:27,000 --> 01:40:29,000
相关的一些库和

2067
01:40:29,000 --> 01:40:31,000
可执行文件

2068
01:40:31,000 --> 01:40:33,000
比如说在

2069
01:40:33,000 --> 01:40:39,000
Task1

2070
01:40:39,000 --> 01:40:41,000
就可以看到

2071
01:40:41,000 --> 01:40:43,000
Task1

2072
01:40:43,000 --> 01:40:45,000
Task1

2073
01:40:45,000 --> 01:40:47,000
Taskfetcher

2074
01:40:47,000 --> 01:40:49,000
这两个都是可执行文件

2075
01:40:49,000 --> 01:40:51,000
这个就表示编译成功了

2076
01:40:51,000 --> 01:40:53,000
下面我们说到

2077
01:40:53,000 --> 01:40:55,000
Ellacool

2078
01:40:55,000 --> 01:40:57,000
大家怎么去装Ellacool

2079
01:40:57,000 --> 01:40:59,000
一般来说在Windows

2080
01:40:59,000 --> 01:41:01,000
MacOS和Ubuntu下

2081
01:41:01,000 --> 01:41:03,000
装都比较简单一些

2082
01:41:03,000 --> 01:41:05,000
比如说我要装PNG

2083
01:41:05,000 --> 01:41:07,000
PNG是一个图像的

2084
01:41:07,000 --> 01:41:09,000
比如说当我

2085
01:41:09,000 --> 01:41:11,000
要安装PNG

2086
01:41:11,000 --> 01:41:13,000
我编译的时候

2087
01:41:14,000 --> 01:41:16,000
最简单的方法就是

2088
01:41:16,000 --> 01:41:18,000
所做

2089
01:41:18,000 --> 01:41:20,000
apt-ch

2090
01:41:20,000 --> 01:41:22,000
leave

2091
01:41:22,000 --> 01:41:36,000
这是Linux下

2092
01:41:36,000 --> 01:41:38,000
抱歉

2093
01:41:38,000 --> 01:41:42,000
Mac下也有这个命令

2094
01:41:42,000 --> 01:41:44,000
如果是在Linux下的话

2095
01:41:44,000 --> 01:41:46,000
你就可以用刚才我说的命令

2096
01:41:46,000 --> 01:41:48,000
就可以搜到很多

2097
01:41:48,000 --> 01:41:50,000
LeavePNG相关的

2098
01:41:50,000 --> 01:41:52,000
在Windows下的话

2099
01:41:52,000 --> 01:41:54,000
什么命令

2100
01:41:54,000 --> 01:41:56,000
我现在还忘了

2101
01:42:10,000 --> 01:42:12,000
那

2102
01:42:12,000 --> 01:42:26,000
不好意思啊

2103
01:42:26,000 --> 01:42:28,000
因为最近没有在

2104
01:42:28,000 --> 01:42:30,000
MacOS下做开发

2105
01:42:30,000 --> 01:42:32,000
最近主要是在Linux下

2106
01:42:32,000 --> 01:42:34,000
所以我要看一下这个MacOS的

2107
01:42:34,000 --> 01:42:36,000
就找这酷的命令

2108
01:42:36,000 --> 01:42:38,000
呃

2109
01:42:38,000 --> 01:42:48,000
Leave

2110
01:42:50,000 --> 01:42:52,000
哦

2111
01:42:52,000 --> 01:42:54,000
哦

2112
01:42:54,000 --> 01:42:56,000
哦

2113
01:42:56,000 --> 01:42:58,000
哦

2114
01:42:58,000 --> 01:43:00,000
哦

2115
01:43:00,000 --> 01:43:02,000
哦

2116
01:43:02,000 --> 01:43:04,000
哦

2117
01:43:04,000 --> 01:43:06,000
哦

2118
01:43:06,000 --> 01:43:08,000
哦

2119
01:43:08,000 --> 01:43:10,000
哦

2120
01:43:10,000 --> 01:43:12,000
哦

2121
01:43:12,000 --> 01:43:14,000
哦

2122
01:43:14,000 --> 01:43:16,000
哦

2123
01:43:16,000 --> 01:43:18,000
哦

2124
01:43:18,000 --> 01:43:20,000
哦

2125
01:43:20,000 --> 01:43:22,000
哦

2126
01:43:22,000 --> 01:43:24,000
哦

2127
01:43:24,000 --> 01:43:26,000
哦

2128
01:43:26,000 --> 01:43:28,000
哦

2129
01:43:28,000 --> 01:43:30,000
哦

2130
01:43:30,000 --> 01:43:32,000
哦

2131
01:43:32,000 --> 01:43:34,000
哦

2132
01:43:34,000 --> 01:43:36,000
哦

2133
01:43:36,000 --> 01:43:38,000
哦

2134
01:43:38,000 --> 01:43:40,000
哦

2135
01:43:40,000 --> 01:43:42,000
哦

2136
01:43:42,000 --> 01:43:44,000
哦

2137
01:43:44,000 --> 01:43:46,000
哦

2138
01:43:46,000 --> 01:43:48,000
哦

2139
01:43:48,000 --> 01:43:50,000
哦

2140
01:43:50,000 --> 01:43:52,000
哦

2141
01:43:52,000 --> 01:43:54,000
哦

2142
01:43:54,000 --> 01:43:56,000
哦

2143
01:43:56,000 --> 01:43:58,000
哦

2144
01:43:58,000 --> 01:44:00,000
哦

2145
01:44:00,000 --> 01:44:02,000
哦

2146
01:44:02,000 --> 01:44:04,000
哦

2147
01:44:04,000 --> 01:44:06,000
哦

2148
01:44:06,000 --> 01:44:08,000
哦

2149
01:44:08,000 --> 01:44:10,000
哦

2150
01:44:10,000 --> 01:44:12,000
哦

2151
01:44:12,000 --> 01:44:14,000
哦

2152
01:44:14,000 --> 01:44:16,000
哦

2153
01:44:16,000 --> 01:44:18,000
哦

2154
01:44:18,000 --> 01:44:20,000
哦

2155
01:44:20,000 --> 01:44:22,000
哦

2156
01:44:22,000 --> 01:44:24,000
哦

2157
01:44:24,000 --> 01:44:26,000
哦

2158
01:44:26,000 --> 01:44:28,000
哦

2159
01:44:28,000 --> 01:44:30,000
哦

2160
01:44:30,000 --> 01:44:32,000
哦

2161
01:44:32,000 --> 01:44:34,000
哦

2162
01:44:34,000 --> 01:44:36,000
哦

2163
01:44:36,000 --> 01:44:38,000
哦

2164
01:44:38,000 --> 01:44:40,000
哦

2165
01:44:40,000 --> 01:44:42,000
哦

2166
01:44:42,000 --> 01:44:44,000
哦

2167
01:44:44,000 --> 01:44:46,000
哦

2168
01:44:46,000 --> 01:44:48,000
哦

2169
01:44:48,000 --> 01:44:50,000
哦

2170
01:44:50,000 --> 01:44:52,000
哦

2171
01:44:52,000 --> 01:44:54,000
哦

2172
01:44:54,000 --> 01:44:56,000
哦

2173
01:44:56,000 --> 01:44:58,000
哦

2174
01:44:58,000 --> 01:45:00,000
哦

2175
01:45:00,000 --> 01:45:02,000
哦

2176
01:45:02,000 --> 01:45:04,000
哦

2177
01:45:04,000 --> 01:45:06,000
哦

2178
01:45:06,000 --> 01:45:08,000
哦

2179
01:45:08,000 --> 01:45:10,000
哦

2180
01:45:10,000 --> 01:45:12,000
哦

2181
01:45:12,000 --> 01:45:14,000
哦

2182
01:45:14,000 --> 01:45:16,000
哦

2183
01:45:16,000 --> 01:45:18,000
哦

2184
01:45:18,000 --> 01:45:20,000
哦

2185
01:45:20,000 --> 01:45:22,000
哦

2186
01:45:22,000 --> 01:45:24,000
哦

2187
01:45:24,000 --> 01:45:26,000
哦

2188
01:45:26,000 --> 01:45:28,000
哦

2189
01:45:28,000 --> 01:45:30,000
哦

2190
01:45:30,000 --> 01:45:32,000
哦

2191
01:45:32,000 --> 01:45:34,000
哦

2192
01:45:34,000 --> 01:45:36,000
哦

2193
01:45:36,000 --> 01:45:38,000
哦

2194
01:45:38,000 --> 01:45:40,000
哦

2195
01:45:40,000 --> 01:45:42,000
哦

2196
01:45:42,000 --> 01:45:44,000
哦

2197
01:45:44,000 --> 01:45:46,000
哦

2198
01:45:46,000 --> 01:45:48,000
哦

2199
01:45:48,000 --> 01:45:50,000
哦

2200
01:45:50,000 --> 01:45:52,000
哦

2201
01:45:52,000 --> 01:45:54,000
哦

2202
01:45:54,000 --> 01:45:56,000
哦

2203
01:45:56,000 --> 01:45:58,000
哦

2204
01:45:58,000 --> 01:46:00,000
哦

2205
01:46:00,000 --> 01:46:02,000
哦

2206
01:46:02,000 --> 01:46:04,000
哦

2207
01:46:04,000 --> 01:46:06,000
哦

2208
01:46:06,000 --> 01:46:08,000
哦

2209
01:46:08,000 --> 01:46:10,000
哦

2210
01:46:10,000 --> 01:46:12,000
哦

2211
01:46:12,000 --> 01:46:14,000
哦

2212
01:46:14,000 --> 01:46:16,000
哦

2213
01:46:16,000 --> 01:46:18,000
哦

2214
01:46:18,000 --> 01:46:20,000
哦

2215
01:46:20,000 --> 01:46:22,000
哦

2216
01:46:22,000 --> 01:46:24,000
哦

2217
01:46:24,000 --> 01:46:26,000
哦

2218
01:46:26,000 --> 01:46:28,000
哦

2219
01:46:28,000 --> 01:46:30,000
哦

2220
01:46:30,000 --> 01:46:32,000
哦

2221
01:46:32,000 --> 01:46:34,000
哦

2222
01:46:34,000 --> 01:46:36,000
哦

2223
01:46:36,000 --> 01:46:38,000
哦

2224
01:46:38,000 --> 01:46:40,000
哦

2225
01:46:40,000 --> 01:46:42,000
哦

2226
01:46:42,000 --> 01:46:44,000
哦

2227
01:46:44,000 --> 01:46:46,000
哦

2228
01:46:46,000 --> 01:46:48,000
哦

2229
01:46:48,000 --> 01:46:50,000
哦

2230
01:46:50,000 --> 01:46:52,000
哦

2231
01:46:52,000 --> 01:46:54,000
哦

2232
01:46:54,000 --> 01:46:56,000
哦

2233
01:46:56,000 --> 01:46:58,000
哦

2234
01:46:58,000 --> 01:47:00,000
哦

2235
01:47:00,000 --> 01:47:02,000
哦

2236
01:47:02,000 --> 01:47:04,000
哦

2237
01:47:04,000 --> 01:47:06,000
哦

2238
01:47:06,000 --> 01:47:08,000
哦

2239
01:47:08,000 --> 01:47:10,000
哦

2240
01:47:10,000 --> 01:47:12,000
哦

2241
01:47:12,000 --> 01:47:14,000
哦

2242
01:47:14,000 --> 01:47:16,000
哦

2243
01:47:16,000 --> 01:47:18,000
哦

2244
01:47:18,000 --> 01:47:20,000
哦

2245
01:47:20,000 --> 01:47:22,000
哦

2246
01:47:22,000 --> 01:47:24,000
哦

2247
01:47:24,000 --> 01:47:26,000
哦

2248
01:47:26,000 --> 01:47:28,000
哦

2249
01:47:28,000 --> 01:47:30,000
哦

2250
01:47:30,000 --> 01:47:32,000
哦

2251
01:47:32,000 --> 01:47:34,000
哦

2252
01:47:34,000 --> 01:47:36,000
哦

2253
01:47:36,000 --> 01:47:38,000
哦

2254
01:47:38,000 --> 01:47:40,000
哦

2255
01:47:40,000 --> 01:47:42,000
哦

2256
01:47:42,000 --> 01:47:44,000
哦

2257
01:47:44,000 --> 01:47:46,000
哦

2258
01:47:46,000 --> 01:47:48,000
哦

2259
01:47:48,000 --> 01:47:50,000
哦

2260
01:47:50,000 --> 01:47:52,000
哦

2261
01:47:52,000 --> 01:47:54,000
哦

2262
01:47:54,000 --> 01:47:56,000
哦

2263
01:47:56,000 --> 01:47:58,000
哦

2264
01:47:58,000 --> 01:48:00,000
哦

2265
01:48:00,000 --> 01:48:02,000
哦

2266
01:48:02,000 --> 01:48:04,000
哦

2267
01:48:04,000 --> 01:48:06,000
哦

2268
01:48:06,000 --> 01:48:08,000
哦

2269
01:48:08,000 --> 01:48:10,000
哦

2270
01:48:10,000 --> 01:48:12,000
哦

2271
01:48:12,000 --> 01:48:14,000
哦

2272
01:48:14,000 --> 01:48:16,000
哦

2273
01:48:16,000 --> 01:48:18,000
哦

2274
01:48:18,000 --> 01:48:20,000
哦

2275
01:48:20,000 --> 01:48:22,000
哦

2276
01:48:22,000 --> 01:48:24,000
哦

2277
01:48:24,000 --> 01:48:26,000
哦

2278
01:48:26,000 --> 01:48:28,000
哦

2279
01:48:28,000 --> 01:48:30,000
哦

2280
01:48:30,000 --> 01:48:32,000
哦

2281
01:48:32,000 --> 01:48:34,000
哦

2282
01:48:34,000 --> 01:48:36,000
哦

2283
01:48:36,000 --> 01:48:38,000
哦

2284
01:48:38,000 --> 01:48:40,000
哦

2285
01:48:40,000 --> 01:48:42,000
哦

2286
01:48:42,000 --> 01:48:44,000
哦

2287
01:48:44,000 --> 01:48:46,000
哦

2288
01:48:46,000 --> 01:48:48,000
哦

2289
01:48:48,000 --> 01:48:50,000
哦

2290
01:48:50,000 --> 01:48:52,000
哦

2291
01:48:52,000 --> 01:48:54,000
哦

2292
01:48:54,000 --> 01:48:56,000
哦

2293
01:48:56,000 --> 01:48:58,000
哦

2294
01:48:58,000 --> 01:49:00,000
哦

2295
01:49:00,000 --> 01:49:02,000
哦

2296
01:49:02,000 --> 01:49:04,000
哦

2297
01:49:04,000 --> 01:49:06,000
哦

2298
01:49:06,000 --> 01:49:08,000
哦

2299
01:49:08,000 --> 01:49:10,000
哦

2300
01:49:10,000 --> 01:49:12,000
哦

2301
01:49:12,000 --> 01:49:14,000
哦

2302
01:49:14,000 --> 01:49:16,000
哦

2303
01:49:16,000 --> 01:49:18,000
哦

2304
01:49:18,000 --> 01:49:20,000
哦

2305
01:49:20,000 --> 01:49:22,000
哦

2306
01:49:22,000 --> 01:49:24,000
哦

2307
01:49:24,000 --> 01:49:26,000
哦

2308
01:49:26,000 --> 01:49:28,000
哦

2309
01:49:28,000 --> 01:49:30,000
哦

2310
01:49:30,000 --> 01:49:32,000
哦

2311
01:49:32,000 --> 01:49:34,000
哦

2312
01:49:34,000 --> 01:49:36,000
哦

2313
01:49:36,000 --> 01:49:38,000
哦

2314
01:49:38,000 --> 01:49:40,000
哦

2315
01:49:40,000 --> 01:49:42,000
哦

2316
01:49:42,000 --> 01:49:44,000
哦

2317
01:49:44,000 --> 01:49:46,000
哦

2318
01:49:46,000 --> 01:49:48,000
哦

2319
01:49:48,000 --> 01:49:50,000
哦

2320
01:49:50,000 --> 01:49:52,000
哦

2321
01:49:52,000 --> 01:49:54,000
哦

2322
01:49:54,000 --> 01:49:56,000
哦

2323
01:49:56,000 --> 01:49:58,000
哦

2324
01:49:58,000 --> 01:50:00,000
哦

2325
01:50:00,000 --> 01:50:02,000
哦

2326
01:50:02,000 --> 01:50:04,000
哦

2327
01:50:04,000 --> 01:50:06,000
哦

2328
01:50:06,000 --> 01:50:08,000
哦

2329
01:50:08,000 --> 01:50:10,000
哦

2330
01:50:10,000 --> 01:50:12,000
哦

2331
01:50:12,000 --> 01:50:14,000
哦

2332
01:50:14,000 --> 01:50:16,000
哦

2333
01:50:16,000 --> 01:50:18,000
哦

2334
01:50:18,000 --> 01:50:20,000
哦

2335
01:50:20,000 --> 01:50:22,000
哦

2336
01:50:22,000 --> 01:50:24,000
哦

2337
01:50:24,000 --> 01:50:26,000
哦

2338
01:50:26,000 --> 01:50:28,000
哦

2339
01:50:28,000 --> 01:50:30,000
哦

2340
01:50:30,000 --> 01:50:32,000
哦

2341
01:50:32,000 --> 01:50:34,000
哦

2342
01:50:34,000 --> 01:50:36,000
哦

2343
01:50:36,000 --> 01:50:38,000
哦

2344
01:50:38,000 --> 01:50:40,000
哦

2345
01:50:40,000 --> 01:50:42,000
哦

2346
01:50:42,000 --> 01:50:44,000
哦

2347
01:50:44,000 --> 01:50:46,000
哦

2348
01:50:46,000 --> 01:50:48,000
哦

2349
01:50:48,000 --> 01:50:50,000
哦

2350
01:50:50,000 --> 01:50:52,000
哦

2351
01:50:52,000 --> 01:50:54,000
哦

2352
01:50:54,000 --> 01:50:56,000
哦

2353
01:50:56,000 --> 01:50:58,000
哦

2354
01:50:58,000 --> 01:51:00,000
哦

2355
01:51:00,000 --> 01:51:02,000
哦

2356
01:51:02,000 --> 01:51:04,000
哦

2357
01:51:04,000 --> 01:51:06,000
哦

2358
01:51:06,000 --> 01:51:08,000
哦

2359
01:51:08,000 --> 01:51:10,000
哦

2360
01:51:10,000 --> 01:51:12,000
哦

2361
01:51:12,000 --> 01:51:14,000
哦

2362
01:51:14,000 --> 01:51:16,000
哦

2363
01:51:16,000 --> 01:51:18,000
哦

2364
01:51:18,000 --> 01:51:20,000
哦

2365
01:51:20,000 --> 01:51:22,000
哦

2366
01:51:22,000 --> 01:51:24,000
哦

2367
01:51:24,000 --> 01:51:26,000
哦

2368
01:51:26,000 --> 01:51:28,000
哦

2369
01:51:28,000 --> 01:51:30,000
哦

2370
01:51:30,000 --> 01:51:32,000
哦

2371
01:51:32,000 --> 01:51:34,000
哦

2372
01:51:34,000 --> 01:51:36,000
哦

2373
01:51:36,000 --> 01:51:38,000
哦

2374
01:51:38,000 --> 01:51:40,000
哦

2375
01:51:40,000 --> 01:51:42,000
哦

2376
01:51:42,000 --> 01:51:44,000
哦

2377
01:51:44,000 --> 01:51:46,000
哦

2378
01:51:46,000 --> 01:51:48,000
哦

2379
01:51:48,000 --> 01:51:50,000
哦

2380
01:51:50,000 --> 01:51:52,000
哦

2381
01:51:52,000 --> 01:51:54,000
哦

2382
01:51:54,000 --> 01:51:56,000
哦

2383
01:51:56,000 --> 01:51:58,000
哦

2384
01:51:58,000 --> 01:52:00,000
哦

2385
01:52:00,000 --> 01:52:02,000
哦

2386
01:52:02,000 --> 01:52:04,000
哦

2387
01:52:04,000 --> 01:52:06,000
哦

2388
01:52:06,000 --> 01:52:08,000
哦

2389
01:52:08,000 --> 01:52:10,000
哦

2390
01:52:10,000 --> 01:52:12,000
哦

2391
01:52:12,000 --> 01:52:14,000
哦

2392
01:52:14,000 --> 01:52:16,000
哦

2393
01:52:16,000 --> 01:52:18,000
哦

2394
01:52:18,000 --> 01:52:20,000
哦

2395
01:52:20,000 --> 01:52:22,000
哦

2396
01:52:22,000 --> 01:52:24,000
哦

2397
01:52:24,000 --> 01:52:26,000
哦

2398
01:52:26,000 --> 01:52:28,000
哦

2399
01:52:28,000 --> 01:52:30,000
哦

2400
01:52:30,000 --> 01:52:32,000
哦

2401
01:52:32,000 --> 01:52:34,000
哦

2402
01:52:34,000 --> 01:52:36,000
哦

2403
01:52:36,000 --> 01:52:38,000
哦

2404
01:52:38,000 --> 01:52:40,000
哦

2405
01:52:40,000 --> 01:52:42,000
哦

2406
01:52:42,000 --> 01:52:44,000
哦

2407
01:52:44,000 --> 01:52:46,000
哦

2408
01:52:46,000 --> 01:52:48,000
哦

2409
01:52:48,000 --> 01:52:50,000
哦

2410
01:52:50,000 --> 01:52:52,000
哦

2411
01:52:52,000 --> 01:52:54,000
哦

2412
01:52:54,000 --> 01:52:56,000
哦

2413
01:52:56,000 --> 01:52:58,000
哦

2414
01:52:58,000 --> 01:53:00,000
哦

2415
01:53:00,000 --> 01:53:02,000
哦

2416
01:53:02,000 --> 01:53:04,000
哦

2417
01:53:04,000 --> 01:53:06,000
哦

2418
01:53:06,000 --> 01:53:08,000
哦

2419
01:53:08,000 --> 01:53:10,000
哦

2420
01:53:10,000 --> 01:53:12,000
哦

2421
01:53:12,000 --> 01:53:14,000
哦

2422
01:53:14,000 --> 01:53:16,000
哦

2423
01:53:16,000 --> 01:53:18,000
哦

2424
01:53:18,000 --> 01:53:20,000
哦

2425
01:53:20,000 --> 01:53:22,000
哦

2426
01:53:22,000 --> 01:53:24,000
哦

2427
01:53:24,000 --> 01:53:26,000
哦

2428
01:53:26,000 --> 01:53:28,000
哦

2429
01:53:28,000 --> 01:53:30,000
哦

2430
01:53:30,000 --> 01:53:32,000
哦

2431
01:53:32,000 --> 01:53:34,000
哦

2432
01:53:34,000 --> 01:53:36,000
哦

2433
01:53:36,000 --> 01:53:38,000
哦

2434
01:53:38,000 --> 01:53:40,000
哦

2435
01:53:40,000 --> 01:53:42,000
哦

2436
01:53:42,000 --> 01:53:44,000
哦

2437
01:53:44,000 --> 01:53:46,000
哦

2438
01:53:46,000 --> 01:53:48,000
哦

2439
01:53:48,000 --> 01:53:50,000
哦

2440
01:53:50,000 --> 01:53:52,000
哦

2441
01:53:52,000 --> 01:53:54,000
哦

2442
01:53:54,000 --> 01:53:56,000
哦

2443
01:53:56,000 --> 01:53:58,000
哦

2444
01:53:58,000 --> 01:54:00,000
哦

2445
01:54:00,000 --> 01:54:02,000
哦

2446
01:54:02,000 --> 01:54:04,000
哦

2447
01:54:04,000 --> 01:54:06,000
哦

2448
01:54:06,000 --> 01:54:08,000
哦

2449
01:54:08,000 --> 01:54:10,000
哦

2450
01:54:10,000 --> 01:54:12,000
哦

2451
01:54:12,000 --> 01:54:14,000
哦

2452
01:54:14,000 --> 01:54:16,000
哦

2453
01:54:16,000 --> 01:54:18,000
哦

2454
01:54:18,000 --> 01:54:20,000
哦

2455
01:54:20,000 --> 01:54:22,000
哦

2456
01:54:22,000 --> 01:54:24,000
哦

2457
01:54:24,000 --> 01:54:26,000
哦

2458
01:54:26,000 --> 01:54:28,000
哦

2459
01:54:28,000 --> 01:54:30,000
哦

2460
01:54:30,000 --> 01:54:32,000
哦

2461
01:54:32,000 --> 01:54:34,000
哦

2462
01:54:34,000 --> 01:54:36,000
哦

2463
01:54:36,000 --> 01:54:38,000
哦

2464
01:54:38,000 --> 01:54:40,000
哦

2465
01:54:40,000 --> 01:54:42,000
哦

2466
01:54:42,000 --> 01:54:44,000
哦

2467
01:54:44,000 --> 01:54:46,000
哦

2468
01:54:46,000 --> 01:54:48,000
哦

2469
01:54:48,000 --> 01:54:50,000
哦

2470
01:54:50,000 --> 01:54:52,000
哦

2471
01:54:52,000 --> 01:54:54,000
哦

2472
01:54:54,000 --> 01:54:56,000
哦

2473
01:54:56,000 --> 01:54:58,000
哦

2474
01:54:58,000 --> 01:55:00,000
哦

2475
01:55:00,000 --> 01:55:02,000
哦

2476
01:55:02,000 --> 01:55:04,000
哦

2477
01:55:04,000 --> 01:55:06,000
哦

2478
01:55:06,000 --> 01:55:08,000
哦

2479
01:55:08,000 --> 01:55:10,000
哦

2480
01:55:10,000 --> 01:55:12,000
哦

2481
01:55:12,000 --> 01:55:14,000
哦

2482
01:55:14,000 --> 01:55:16,000
哦

2483
01:55:16,000 --> 01:55:18,000
哦

2484
01:55:18,000 --> 01:55:20,000
哦

2485
01:55:20,000 --> 01:55:22,000
哦

2486
01:55:22,000 --> 01:55:24,000
哦

2487
01:55:24,000 --> 01:55:26,000
哦

2488
01:55:26,000 --> 01:55:28,000
哦

2489
01:55:28,000 --> 01:55:30,000
哦

2490
01:55:30,000 --> 01:55:32,000
哦

2491
01:55:32,000 --> 01:55:34,000
哦

2492
01:55:34,000 --> 01:55:36,000
哦

2493
01:55:36,000 --> 01:55:38,000
哦

2494
01:55:38,000 --> 01:55:40,000
哦

2495
01:55:40,000 --> 01:55:42,000
哦

2496
01:55:42,000 --> 01:55:44,000
哦

2497
01:55:44,000 --> 01:55:46,000
哦

2498
01:55:46,000 --> 01:55:48,000
哦

2499
01:55:48,000 --> 01:55:50,000
哦

2500
01:55:50,000 --> 01:55:52,000
哦

2501
01:55:52,000 --> 01:55:54,000
哦

2502
01:55:54,000 --> 01:55:56,000
哦

2503
01:55:56,000 --> 01:55:58,000
哦

2504
01:55:58,000 --> 01:56:00,000
哦

2505
01:56:00,000 --> 01:56:02,000
哦

2506
01:56:02,000 --> 01:56:04,000
哦

2507
01:56:04,000 --> 01:56:06,000
哦

2508
01:56:06,000 --> 01:56:08,000
哦

2509
01:56:08,000 --> 01:56:10,000
哦

2510
01:56:10,000 --> 01:56:12,000
哦

2511
01:56:12,000 --> 01:56:14,000
哦

2512
01:56:14,000 --> 01:56:16,000
哦

2513
01:56:16,000 --> 01:56:18,000
哦

2514
01:56:18,000 --> 01:56:20,000
哦

2515
01:56:20,000 --> 01:56:22,000
哦

2516
01:56:22,000 --> 01:56:24,000
哦

2517
01:56:24,000 --> 01:56:26,000
哦

2518
01:56:26,000 --> 01:56:28,000
哦

2519
01:56:28,000 --> 01:56:30,000
哦

2520
01:56:30,000 --> 01:56:32,000
哦

2521
01:56:32,000 --> 01:56:34,000
哦

2522
01:56:34,000 --> 01:56:36,000
哦

2523
01:56:36,000 --> 01:56:38,000
哦

2524
01:56:38,000 --> 01:56:40,000
哦

2525
01:56:40,000 --> 01:56:42,000
哦

2526
01:56:42,000 --> 01:56:44,000
哦

2527
01:56:44,000 --> 01:56:46,000
哦

2528
01:56:46,000 --> 01:56:48,000
哦

2529
01:56:48,000 --> 01:56:50,000
哦

2530
01:56:50,000 --> 01:56:52,000
哦

2531
01:56:52,000 --> 01:56:54,000
哦

2532
01:56:54,000 --> 01:56:56,000
哦

2533
01:56:56,000 --> 01:56:58,000
哦

2534
01:56:58,000 --> 01:57:00,000
哦

2535
01:57:00,000 --> 01:57:02,000
哦

2536
01:57:02,000 --> 01:57:04,000
哦

2537
01:57:04,000 --> 01:57:06,000
哦

2538
01:57:06,000 --> 01:57:08,000
哦

2539
01:57:08,000 --> 01:57:10,000
哦

2540
01:57:10,000 --> 01:57:12,000
哦

2541
01:57:12,000 --> 01:57:14,000
哦

2542
01:57:14,000 --> 01:57:16,000
哦

2543
01:57:16,000 --> 01:57:18,000
哦

2544
01:57:18,000 --> 01:57:20,000
哦

2545
01:57:20,000 --> 01:57:22,000
哦

2546
01:57:22,000 --> 01:57:24,000
哦

2547
01:57:24,000 --> 01:57:26,000
哦

2548
01:57:26,000 --> 01:57:28,000
哦

2549
01:57:28,000 --> 01:57:30,000
哦

2550
01:57:30,000 --> 01:57:32,000
哦

2551
01:57:32,000 --> 01:57:34,000
哦

2552
01:57:34,000 --> 01:57:36,000
哦

2553
01:57:36,000 --> 01:57:38,000
哦

2554
01:57:38,000 --> 01:57:40,000
哦

2555
01:57:40,000 --> 01:57:42,000
哦

2556
01:57:42,000 --> 01:57:44,000
哦

2557
01:57:44,000 --> 01:57:46,000
哦

2558
01:57:46,000 --> 01:57:48,000
哦

2559
01:57:48,000 --> 01:57:50,000
哦

2560
01:57:50,000 --> 01:57:52,000
哦

2561
01:57:52,000 --> 01:57:54,000
哦

2562
01:57:54,000 --> 01:57:56,000
哦

2563
01:57:56,000 --> 01:57:58,000
哦

2564
01:57:58,000 --> 01:58:00,000
哦

2565
01:58:00,000 --> 01:58:02,000
哦

2566
01:58:02,000 --> 01:58:04,000
哦

2567
01:58:04,000 --> 01:58:06,000
哦

2568
01:58:06,000 --> 01:58:08,000
哦

2569
01:58:08,000 --> 01:58:10,000
哦

2570
01:58:10,000 --> 01:58:12,000
哦

2571
01:58:12,000 --> 01:58:14,000
哦

2572
01:58:14,000 --> 01:58:16,000
哦

2573
01:58:16,000 --> 01:58:18,000
哦

2574
01:58:18,000 --> 01:58:20,000
哦

2575
01:58:20,000 --> 01:58:22,000
哦

2576
01:58:22,000 --> 01:58:24,000
哦

2577
01:58:24,000 --> 01:58:26,000
哦

2578
01:58:26,000 --> 01:58:28,000
哦

2579
01:58:28,000 --> 01:58:30,000
哦

2580
01:58:30,000 --> 01:58:32,000
哦

2581
01:58:32,000 --> 01:58:34,000
哦

2582
01:58:34,000 --> 01:58:36,000
哦

2583
01:58:36,000 --> 01:58:38,000
哦

2584
01:58:38,000 --> 01:58:40,000
哦

2585
01:58:40,000 --> 01:58:42,000
哦

2586
01:58:42,000 --> 01:58:44,000
哦

2587
01:58:44,000 --> 01:58:46,000
哦

2588
01:58:46,000 --> 01:58:48,000
哦

2589
01:58:48,000 --> 01:58:50,000
哦

2590
01:58:50,000 --> 01:58:52,000
哦

2591
01:58:52,000 --> 01:58:54,000
哦

2592
01:58:54,000 --> 01:58:56,000
哦

2593
01:58:56,000 --> 01:58:58,000
哦

2594
01:58:58,000 --> 01:59:00,000
哦

2595
01:59:00,000 --> 01:59:02,000
哦

2596
01:59:02,000 --> 01:59:04,000
哦

2597
01:59:04,000 --> 01:59:06,000
哦

2598
01:59:06,000 --> 01:59:08,000
哦

2599
01:59:08,000 --> 01:59:10,000
哦

2600
01:59:10,000 --> 01:59:12,000
哦

2601
01:59:12,000 --> 01:59:14,000
哦

2602
01:59:14,000 --> 01:59:16,000
哦

2603
01:59:16,000 --> 01:59:18,000
哦

2604
01:59:18,000 --> 01:59:20,000
哦

2605
01:59:20,000 --> 01:59:22,000
哦

2606
01:59:22,000 --> 01:59:24,000
哦

2607
01:59:24,000 --> 01:59:26,000
哦

2608
01:59:26,000 --> 01:59:28,000
哦

2609
01:59:28,000 --> 01:59:30,000
哦

2610
01:59:30,000 --> 01:59:32,000
哦

2611
01:59:32,000 --> 01:59:34,000
哦

2612
01:59:34,000 --> 01:59:36,000
哦

2613
01:59:36,000 --> 01:59:38,000
哦

2614
01:59:38,000 --> 01:59:40,000
哦

2615
01:59:40,000 --> 01:59:42,000
哦

2616
01:59:42,000 --> 01:59:44,000
哦

2617
01:59:44,000 --> 01:59:46,000
哦

2618
01:59:46,000 --> 01:59:48,000
哦

2619
01:59:48,000 --> 01:59:50,000
哦

2620
01:59:50,000 --> 01:59:52,000
哦

2621
01:59:52,000 --> 01:59:54,000
哦

2622
01:59:54,000 --> 01:59:56,000
哦

2623
01:59:56,000 --> 01:59:58,000
哦

2624
01:59:58,000 --> 02:00:00,000
哦

2625
02:00:00,000 --> 02:00:02,000
哦

2626
02:00:02,000 --> 02:00:04,000
哦

2627
02:00:04,000 --> 02:00:06,000
哦

2628
02:00:06,000 --> 02:00:08,000
哦

2629
02:00:08,000 --> 02:00:10,000
哦

2630
02:00:10,000 --> 02:00:12,000
哦

2631
02:00:12,000 --> 02:00:14,000
哦

2632
02:00:14,000 --> 02:00:16,000
哦

2633
02:00:16,000 --> 02:00:18,000
哦

2634
02:00:18,000 --> 02:00:20,000
哦

2635
02:00:20,000 --> 02:00:22,000
哦

2636
02:00:22,000 --> 02:00:24,000
哦

2637
02:00:24,000 --> 02:00:26,000
哦

2638
02:00:26,000 --> 02:00:28,000
哦

2639
02:00:28,000 --> 02:00:30,000
哦

2640
02:00:30,000 --> 02:00:32,000
哦

2641
02:00:32,000 --> 02:00:34,000
哦

2642
02:00:34,000 --> 02:00:36,000
哦

2643
02:00:36,000 --> 02:00:38,000
哦

2644
02:00:38,000 --> 02:00:40,000
哦

2645
02:00:40,000 --> 02:00:42,000
哦

2646
02:00:42,000 --> 02:00:44,000
哦

2647
02:00:44,000 --> 02:00:46,000
哦

2648
02:00:46,000 --> 02:00:48,000
哦

2649
02:00:48,000 --> 02:00:50,000
哦

2650
02:00:50,000 --> 02:00:52,000
哦

2651
02:00:52,000 --> 02:00:54,000
哦

2652
02:00:54,000 --> 02:00:56,000
哦

2653
02:00:56,000 --> 02:00:58,000
哦

2654
02:00:58,000 --> 02:01:00,000
哦

2655
02:01:00,000 --> 02:01:02,000
哦

2656
02:01:02,000 --> 02:01:04,000
哦

2657
02:01:04,000 --> 02:01:06,000
哦

2658
02:01:06,000 --> 02:01:08,000
哦

2659
02:01:08,000 --> 02:01:10,000
哦

2660
02:01:10,000 --> 02:01:12,000
哦

2661
02:01:12,000 --> 02:01:14,000
哦

2662
02:01:14,000 --> 02:01:16,000
哦

2663
02:01:16,000 --> 02:01:18,000
哦

2664
02:01:18,000 --> 02:01:20,000
哦

2665
02:01:20,000 --> 02:01:22,000
哦

2666
02:01:22,000 --> 02:01:24,000
哦

2667
02:01:24,000 --> 02:01:26,000
哦

2668
02:01:26,000 --> 02:01:28,000
哦

2669
02:01:28,000 --> 02:01:30,000
哦

2670
02:01:30,000 --> 02:01:32,000
哦

2671
02:01:32,000 --> 02:01:34,000
哦

2672
02:01:34,000 --> 02:01:36,000
哦

2673
02:01:36,000 --> 02:01:38,000
哦

2674
02:01:38,000 --> 02:01:40,000
哦

2675
02:01:40,000 --> 02:01:42,000
哦

2676
02:01:42,000 --> 02:01:44,000
哦

2677
02:01:44,000 --> 02:01:46,000
哦

2678
02:01:46,000 --> 02:01:48,000
哦

2679
02:01:48,000 --> 02:01:50,000
哦

2680
02:01:50,000 --> 02:01:52,000
哦

2681
02:01:52,000 --> 02:01:54,000
哦

2682
02:01:54,000 --> 02:01:56,000
哦

2683
02:01:56,000 --> 02:01:58,000
哦

2684
02:01:58,000 --> 02:02:00,000
哦

2685
02:02:00,000 --> 02:02:02,000
哦

2686
02:02:02,000 --> 02:02:04,000
哦

2687
02:02:04,000 --> 02:02:06,000
哦

2688
02:02:06,000 --> 02:02:08,000
哦

2689
02:02:08,000 --> 02:02:10,000
哦

2690
02:02:10,000 --> 02:02:12,000
哦

2691
02:02:12,000 --> 02:02:14,000
哦

2692
02:02:14,000 --> 02:02:16,000
哦

2693
02:02:16,000 --> 02:02:18,000
哦

2694
02:02:18,000 --> 02:02:20,000
哦

2695
02:02:20,000 --> 02:02:22,000
哦

2696
02:02:22,000 --> 02:02:24,000
哦

2697
02:02:24,000 --> 02:02:26,000
哦

2698
02:02:26,000 --> 02:02:28,000
哦

2699
02:02:28,000 --> 02:02:30,000
哦

2700
02:02:30,000 --> 02:02:32,000
哦

2701
02:02:32,000 --> 02:02:34,000
哦

2702
02:02:34,000 --> 02:02:36,000
哦

2703
02:02:36,000 --> 02:02:38,000
哦

2704
02:02:38,000 --> 02:02:40,000
哦

2705
02:02:40,000 --> 02:02:42,000
哦

2706
02:02:42,000 --> 02:02:44,000
哦

2707
02:02:44,000 --> 02:02:46,000
哦

2708
02:02:46,000 --> 02:02:48,000
哦

2709
02:02:48,000 --> 02:02:50,000
哦

2710
02:02:50,000 --> 02:02:52,000
哦

2711
02:02:52,000 --> 02:02:54,000
哦

2712
02:02:54,000 --> 02:02:56,000
哦

2713
02:02:56,000 --> 02:02:58,000
哦

2714
02:02:58,000 --> 02:03:00,000
哦

2715
02:03:00,000 --> 02:03:02,000
哦

2716
02:03:02,000 --> 02:03:04,000
哦

2717
02:03:04,000 --> 02:03:06,000
哦

2718
02:03:06,000 --> 02:03:08,000
哦

2719
02:03:08,000 --> 02:03:10,000
哦

2720
02:03:10,000 --> 02:03:12,000
哦

2721
02:03:12,000 --> 02:03:14,000
哦

2722
02:03:14,000 --> 02:03:16,000
哦

2723
02:03:16,000 --> 02:03:18,000
哦

2724
02:03:18,000 --> 02:03:20,000
哦

2725
02:03:20,000 --> 02:03:22,000
哦

2726
02:03:22,000 --> 02:03:24,000
哦

2727
02:03:24,000 --> 02:03:26,000
哦

2728
02:03:26,000 --> 02:03:28,000
哦

2729
02:03:28,000 --> 02:03:30,000
哦

2730
02:03:30,000 --> 02:03:32,000
哦

2731
02:03:32,000 --> 02:03:34,000
哦

2732
02:03:34,000 --> 02:03:36,000
哦

2733
02:03:36,000 --> 02:03:38,000
哦

2734
02:03:38,000 --> 02:03:40,000
哦

2735
02:03:40,000 --> 02:03:42,000
哦

2736
02:03:42,000 --> 02:03:44,000
哦

2737
02:03:44,000 --> 02:03:46,000
哦

2738
02:03:46,000 --> 02:03:48,000
哦

2739
02:03:48,000 --> 02:03:50,000
哦

2740
02:03:50,000 --> 02:03:52,000
哦

2741
02:03:52,000 --> 02:03:54,000
哦

